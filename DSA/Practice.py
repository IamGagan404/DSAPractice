# nums = [1,2]
# first, sec, *rest, last = nums
# print(first)
# print(sec)
# print(last)
# print(*rest)
# import heapq
import math


#
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
#
# def print_ll(head):
#     while head:
#         print(head.val)
#         head = head.next
#
#
# # head = [0,1,0,3,0,2,2,0]
# def add_zeros(head):
#     cur = head
#     temp_sum = 0
#     new_list = ListNode() # 0 1
#     new_head = new_list
#     while cur:
#         if cur.val == 0:
#             new_list.next = ListNode(temp_sum)
#             print('ddd',temp_sum)
#             new_list = new_list.next
#             temp_sum = 0
#         else:
#             temp_sum += cur.val
#         cur = cur.next
#     print_ll(new_head)
#
# n1 = ListNode(0)
# n2 = ListNode(1)
# n3 = ListNode(0)
# n4 = ListNode(3)
# n5 = ListNode(0)
# n6 = ListNode(2)
# n7 = ListNode(2)
# n8 = ListNode(0)
# n1.next = n2
# n2.next = n3
# n3.next = n4
# n4.next = n5
# n5.next = n6
# n6.next = n7
# n7.next = n8
#
# def make_ll(nums):
#     for a in range(len(nums)):
#         nums[a] = ListNode(nums[a])
#     for i in range(len(nums)-1):
#         nums[i].next = nums[i+1]
#     return nums[0]

# print_ll(make_ll([5,3,1,2,5,1,2]))

# head = [5,3,1,2,5,1,2]
# def min_max(head):
#
#     cur = head
#     pos = []
#     i = 1
#     while cur.next.next:
#         if cur.val < cur.next.val  and cur.next.val > cur.next.next.val: # maxima
#             pos.append(i)
#         if cur.val > cur.next.val  and cur.next.val < cur.next.next.val: # minima
#             pos.append(i)
#         i += 1
#         cur = cur.next
#     print(pos)
#     if len(pos) < 2:
#         return [-1,-1]
#     re = [pos[-1] - pos[0],pos[-1] - pos[0]]
#     mini = re[1]
#     for i in range(len(pos)-1):
#         mini = min(mini,pos[i+1]-pos[i])
#     re[0] = mini
#     return re
# head = make_ll([3,1])
#
# print(min_max(head))

#
# l1 = ['two','three','one']
# l2 = [2,3,1]
#
# z = [x for _,x in sorted(zip(l1,l2))]
# print(z)


# def sdsa(arr):
#         se = set(arr)
#         uni = list(se)
#         sorted_arr = sorted(uni)
#         re = [x+1 for x in range(len(sorted_arr))]
#         ree = []
#         for i in range(len(arr)):
#             ind = sorted_arr.index(arr[i])
#             ree.append(re[ind])
#         return ree
# print(sdsa([100,100,100]))


# def pairs(arr):
#     if len(arr) % 2 == 1:
#         return -1
#     else:
#         pairs = []
#         chem = 0
#         total = sum(arr)
#         if len(arr)> 2 and total % 2 == 1: return -1
#         no_of_pairs = len(arr) // 2
#         strength = total // no_of_pairs
#         arr.sort()
#         for i in range(no_of_pairs):
#             if arr[i] + arr[-(i+1)] == strength:
#                 chem += arr[i]*arr[-(i+1)]
#             else:
#                 return -1
#         return chem
# print(pairs([3,4]))


# def print_pascals_triangle(n):
#     # Initialize the first row of Pascal's triangle
#     triangle = [[1]]
#
#     # Generate each row of Pascal's triangle
#     for i in range(1, n):
#
#         row = [1]  # Start each row with a 1
#         for j in range(1, i):
#             # Compute the value of the next element as the sum of two elements above it
#             row.append(triangle[i - 1][j - 1] + triangle[i - 1][j])
#
#         row.append(1)  # End each row with a 1
#         triangle.append(row)
#     print(triangle)
#     # Print the triangle row by row
#     for row in triangle:
#         print(' '.join(map(str, row)).center(n*2))
#
# # Example usage
# rows = 9  # Number of rows you want in Pascal's triangle
# print_pascals_triangle(rows)
# import yaml, request
# def toggle_obstacle_detection():
#     file_path = r'/home/locobot/interbotix_ws/src/interbotix_ros_rovers/interbotix_ros_xslocobots/interbotix_xslocobot_nav/config/common_costmap_params.yaml'
#     if request.method == 'GET':
#         with open(file_path, 'r') as file:
#             data = yaml.safe_load(file)  # Load YAML data into a Python dictionary
#         current_radius = data['inflation_layer']['inflation_radius']
#         return current_radius
#
#     if request.method == 'POST':
#         with open(file_path, 'r') as file:
#             data = yaml.safe_load(file)  # Load YAML data into a Python dictionary
#         current_radius = data['inflation_layer']['inflation_radius']
#         if current_radius == 0 or current_radius == 0.0:
#             new_radius = 0.1
#         else:
#             new_radius = 0.0
#         data['inflation_layer']['inflation_radius'] = new_radius
#         with open(file_path, 'w') as file:
#             yaml.safe_dump(data, file, default_flow_style=False)
#         pass
#
#
#
# # ababccc
# def uni_str(s):
#     res = []
#     ptr = 0
#
#
#
#     pass


# def dad(nums):
#     mark = [0 for _ in range(len(nums))]
#     re = 0
#     while 0 in mark:
#         min_index = nums.index(min(nums))
#         re += nums[min_index]
#         mark[min_index] = 1
#         nums[min_index] = float('inf')
#         if min_index + 1 < len(nums):
#             mark[min_index + 1] = 1
#             nums[min_index+1] = float('inf')
#         if min_index != 0:
#             mark[min_index - 1] = 1
#             nums[min_index-1] = float('inf')
#     return re
#     n = len(nums)
#     print(nums)
#     sorted_nums = [(num, idx) for idx, num in enumerate(nums)]
#     print(sorted_nums)
#     print(sorted(sorted_nums))
#     sorteddd = []
#     for index, num in enumerate(nums):
#     for i in range(len(nums)):
#         sorteddd.append((nums[i],i))
#
#     sorteddd = sorted(sorteddd)
#     print(sorteddd)
#     print(sorted_nums)
#     score = 0
#
#     for num, idx in sorted_nums:
#         if nums[idx] != -1:  # Process only if not already marked
#             score += num
#             nums[idx] = -1  # Mark current index
#             if idx > 0:
#                 nums[idx - 1] = -1  # Mark left neighbor
#             if idx < n - 1:
#                 nums[idx + 1] = -1  # Mark right neighbor
#
#     return score
# print(dad([2,3,5,1,3,2]))
#
# def uewjndksa(n,seats):
#     rows = {}
#     re = 0
#     for i in range(len(seats)):
#         if seats[i][0] not in rows.keys():
#             rows[seats[i][0]] = [seats[i][1]]
#         else:
#             rows[seats[i][0]].append(seats[i][1])
#     print(rows)
#     def checker(nums):
#         fam = 0
#         left,right = 0,0
#         if 2 not in nums and 3 not in nums and 4 not in nums and 5 not in nums:
#             fam += 1
#             left = 1
#         if 6 not in nums and 7 not in nums and 8 not in nums and 9 not in nums:
#             fam += 1
#             right = 1
#         if left == 0 and right == 0:
#             if 4 not in nums and 5 not in nums and 6 not in nums and 7 not in nums:
#                 fam += 1
#         print(nums,fam)
#         return fam
#     for i in range(1,n+1):
#         if i in rows.keys():
#             re += checker(rows[i])
#         else:
#             re += 2
#     return re
# print(uewjndksa(1000000000,[[819881,3],[796572,1],[498217,4],[219145,3],[12808,5],[478188,4],[563665,5],[461492,4],[49556,4],[192541,4],[115694,8],[523212,6],[530386,6],[575022,3],[919898,9],[576162,9],[821603,9],[217816,5],[326482,3],[945562,1],[369848,7],[15008,3],[700623,9],[905121,4],[173854,10],[759043,7],[622180,7],[717415,9],[602164,5],[48185,3],[911404,7],[273635,6],[711761,2],[858995,2],[216482,2],[833530,2],[933450,6],[385419,7],[763190,1],[6325,7],[299170,7],[289710,5],[66886,6],[747748,2],[845749,7],[286780,10],[696013,3],[965264,8],[934185,3],[474504,4],[531569,8],[303379,10],[375867,10],[796599,4],[203557,3],[822215,3],[105553,6],[293820,4],[935987,1],[834710,6],[575793,5],[315024,8],[32744,8],[268087,7],[503906,3],[811415,10],[820695,8],[22564,8],[370036,7],[894389,3],[824970,2],[810084,6],[826727,4],[205293,7],[586019,10],[14425,7],[762601,6],[1568,4],[831949,2],[149902,1],[54863,10],[399856,5],[559928,5],[894632,7],[570663,8],[439184,7],[710994,6],[735154,6],[326825,4],[641802,1],[395712,7],[697977,2],[978059,4],[999336,5],[108066,8],[257845,7],[304140,10],[684033,1],[424991,3],[971517,9],[470865,9],[124165,1],[966202,7],[51672,4],[50798,1],[326860,7],[497380,4],[421034,1],[771004,4],[129578,2],[528555,4],[969941,6],[591211,10],[645393,10],[947218,10],[680286,7],[317465,10],[344988,10],[702702,9],[612778,1],[579156,7],[128190,1],[93701,3],[29842,7],[375809,8],[350435,1],[697580,3],[683915,4],[12015,1],[431659,3],[255079,5],[369597,2],[34664,3],[287380,10],[127029,2],[47039,3],[179884,7],[176470,2],[961140,7],[411195,10],[485850,8],[993755,4],[338427,3],[683131,8],[617875,9],[687108,2],[791869,1],[150775,6],[985595,5],[740882,6],[17953,9],[276152,5],[663197,8],[940210,3],[313747,10],[391046,6],[300445,8],[507631,5],[610338,5],[788049,3],[14980,4],[829945,2],[110962,7],[343958,4],[659684,3],[367239,4],[513280,9],[512352,2],[865280,1],[670165,9],[112409,7],[888579,8],[140810,1],[781626,3],[439749,10],[725190,3],[42952,4],[877298,8],[236588,4],[291183,8],[347109,3],[798463,7],[67496,9],[271244,8],[993101,8],[43535,2],[71605,5],[147915,2],[81903,4],[611659,6],[268834,8],[462616,9],[926522,10],[704140,8],[159741,3],[454348,9],[609188,6],[92011,9],[984227,8],[371585,7],[581454,4],[253982,2],[462392,3],[944186,5],[39309,1],[915982,4],[784052,5],[495820,2],[141100,5],[552964,3],[995213,2],[399129,7],[127743,3],[828686,1],[448318,6],[690317,7],[608955,4],[81306,9],[506186,5],[206112,9],[631757,10],[613263,4],[896387,5],[597654,1],[359075,1],[315762,1],[759066,8],[50857,3],[219648,3],[614507,3],[861781,5],[205366,10],[316531,5],[761419,1],[640634,2],[626857,8],[538226,1],[911922,3],[878041,7],[161471,1],[39629,10],[115557,7],[844865,3],[155051,8],[501936,6],[94923,7],[788179,10],[937021,6],[423027,3],[169912,1],[775437,8],[434330,4],[271645,4],[419910,4],[968622,4],[230642,6],[975479,4],[812614,5],[622795,3],[86035,1],[593723,7],[917776,3],[51159,2],[879661,7],[916088,1],[775569,6],[396998,9],[526647,5],[65313,3],[863193,5],[14576,6],[211945,4],[951037,6],[719537,8],[198286,7],[332917,2],[947279,9],[454095,8],[269646,8],[899564,9],[40462,7],[506432,10],[21872,8],[337798,7],[785576,3],[425244,10],[17797,5],[524843,7],[447249,8],[331971,6],[588619,8],[168421,4],[280233,6],[25933,8],[192788,7],[955478,6],[4333,5],[788173,2],[906573,2],[612142,6],[836582,6],[940889,10],[404057,3],[169965,6],[121662,7],[831432,3],[725633,5],[503052,9],[237516,1],[701647,6],[173697,5],[646007,4],[650243,2],[495575,4],[777975,4],[455875,1],[430582,2],[755051,8],[40084,7],[230583,8],[628877,7],[287653,5],[769480,1],[568268,10],[511459,10],[922690,3],[747529,6],[137541,6],[954175,10],[132723,9],[426777,6],[485833,9],[320141,1],[179183,8],[470604,2],[621566,2],[84574,2],[156305,9],[877474,9],[449820,8],[492084,9],[70759,4],[484944,6],[256994,5],[370128,7],[739796,6],[362408,2],[982770,1],[991882,5],[88848,4],[559605,6],[166737,6],[81468,7],[982772,2],[478389,6],[492731,10],[280303,7],[91579,6],[284636,4],[566961,8],[796661,6],[224172,10],[765543,2],[392094,6],[735081,6],[776353,8],[218330,10],[988941,9],[418987,4],[703016,8],[692252,8],[412432,4],[612816,10],[210490,3],[464202,7],[66853,3],[608696,7],[2665,2],[985268,6],[133985,4],[424860,7],[928702,10],[735153,10],[953544,7],[667597,3],[925014,7],[278533,2],[120786,5],[450948,8],[809623,4],[365315,2],[821407,8],[656854,8],[342894,8],[905405,7],[613281,6],[942635,6],[169398,9],[5571,8],[71774,3],[655432,5],[475721,6],[284551,3],[974628,5],[440804,5],[58227,4],[885313,7],[674492,3],[579590,8],[40505,7],[116975,3],[443949,8],[672359,5],[185252,8],[504808,2],[384122,7],[977321,3],[553758,3],[724977,2],[578484,1],[174327,9],[732090,4],[981710,7],[173862,1],[780940,1],[467638,8],[148242,4],[446886,8],[835177,8],[240786,5],[99988,7],[271641,5],[185012,7],[329118,6],[16306,10],[506759,8],[383054,6],[855706,6],[677296,7],[403271,7],[549452,9],[280503,2],[355878,6],[135561,6],[914574,9],[586526,10],[727969,6],[74916,10],[349302,3],[148882,8],[260378,2],[213025,2],[800825,2],[275300,10],[719488,5],[641703,1],[975195,5],[635711,6],[650768,6],[547928,3],[744469,5],[742189,6],[240560,1],[767425,6],[730106,4],[893228,6],[765688,4],[397147,1],[619232,3],[294935,2],[706976,4],[203949,5],[586642,2],[392995,5],[447149,7],[830441,10],[3159,5],[458906,9],[544864,9],[509857,3],[970068,4],[754948,4],[673197,3],[629562,9],[185062,10],[915164,8],[115890,3],[699943,9],[397053,10],[976497,4],[462647,10],[351558,8],[322272,4],[826810,8],[466318,4],[906090,4],[917621,7],[472753,1],[284217,5],[30210,9],[3823,6],[52344,9],[243006,10],[958100,4],[945785,7],[180806,1],[698505,5],[591329,2],[596674,5],[481056,4],[375433,1],[631539,5],[698469,7],[653661,5],[312521,10],[637426,6],[661964,4],[297167,4],[249871,2],[165975,10],[686244,9],[397080,2],[863691,3],[105158,2],[804585,6],[165262,10],[240524,1],[30440,10],[726317,10],[356343,10],[756397,1],[708197,2],[687250,1],[678593,6],[275328,4],[612063,1],[517267,1],[918797,5],[24720,3],[449391,4],[459546,5],[38686,9],[893830,4],[127613,2],[938944,4],[886603,2],[706657,8],[89551,7],[707345,8],[237882,8],[977372,10],[144286,9],[205629,2],[889965,8],[660938,10],[195230,1],[196015,2],[28962,8],[872903,1],[136751,9],[915019,4],[369726,9],[451232,3],[158850,2],[316928,7],[103415,7],[27172,3],[98060,7],[8155,2],[848891,2],[171000,10],[920594,2],[225577,8],[466012,1],[222040,3],[634308,3],[270264,10],[488223,1],[48228,10],[849734,2],[918733,1],[864199,10],[19362,4],[306154,8],[774604,5],[239247,4],[134546,8],[155056,4],[13388,10],[717027,8],[53431,8],[484154,3],[275299,3],[297668,1],[678742,7],[445611,5],[481667,3],[112583,6],[491226,3],[716923,5],[91401,3],[888284,5],[2821,4],[833527,9],[791692,8],[636046,10],[151625,4],[166434,8],[162034,1],[675835,1],[45743,10],[339255,8],[52213,5],[606914,1],[934409,8],[881784,10],[434327,9],[246328,1],[295973,5],[736334,4],[177474,7],[941421,6],[804416,10],[669357,6],[738643,3],[884075,8],[442904,8],[866845,2],[851859,1],[729110,1],[178455,9],[680676,8],[626159,1],[833848,1],[59935,7],[711022,9],[784484,1],[877586,2],[343938,9],[87928,7],[650710,1],[159386,9],[122325,5],[686228,4],[437283,9],[889052,9],[303975,6],[456946,6],[934190,2],[683969,2],[445243,1],[131382,7],[141285,8],[819732,6],[608011,7],[32130,4],[595083,5],[38263,6],[749403,10],[973071,2],[308273,10],[690818,2],[820262,8],[212139,1],[603678,5],[533907,6],[308904,4],[706767,4],[415755,6],[968157,2],[407459,9],[331603,2],[967292,3],[127932,5],[244646,6],[713549,5],[969745,5],[619987,2],[138122,7],[551257,5],[254771,6],[143407,6],[974189,5],[200521,6],[899052,2],[260845,1],[640910,9],[433871,6],[198112,5],[662646,1],[936088,5],[294343,4],[947260,8],[531715,5],[518440,2],[391540,6],[712516,10],[389335,8],[454187,3],[400942,8],[932729,9],[603874,8],[141672,1],[954500,6],[882656,5],[891068,2],[849304,3],[142251,1],[197718,3],[147239,5],[937674,7],[310809,7],[268455,3],[285481,10],[635383,8],[539288,5],[293460,1],[931774,4],[864732,7],[656340,1],[254308,5],[728222,1],[254931,5],[765613,5],[751111,4],[830467,7],[613866,1],[366232,4],[777470,6],[443974,1],[792983,5],[628168,4],[556594,2],[258976,5],[344923,3],[980379,1],[275566,10],[884729,4],[596175,7],[419376,5],[538949,1],[629996,5],[869630,10],[278067,7],[700022,9],[964732,9],[510777,8],[309592,3],[117283,2],[406161,5],[135658,2],[740190,3],[566277,10],[96003,9],[201947,8],[573553,1],[438283,7],[100555,8],[849986,1],[304573,5],[415996,1],[99842,9],[870140,3],[200911,8],[254124,9],[569574,5],[890220,8],[202378,4],[334292,4],[610085,8],[163087,10],[216816,7],[340415,8],[140368,2],[749937,4],[687855,10],[472871,4],[692823,9],[794130,1],[258022,1],[439811,5],[288007,3],[17371,5],[316823,1],[46065,1],[72801,4],[46130,3],[839752,7],[864793,3],[247870,3],[830842,4],[813749,10],[914919,6],[928869,1],[795236,8],[236491,4],[705937,7],[212430,9],[735119,8],[879487,8],[551771,1],[464598,1],[743388,2],[564504,5],[511898,2],[815992,10],[890769,6],[961230,8],[813487,7],[612789,7],[640732,1],[138451,9],[182501,6],[80483,3],[149433,6],[589119,6],[409168,10],[188758,1],[663496,10],[617026,7],[263986,9],[828051,4],[884271,9],[199697,1],[786875,8],[314959,7],[873203,2],[77166,9],[568472,7],[625409,6],[922769,4],[715071,4],[908476,5],[762394,8],[697801,1],[923921,2],[660471,10],[61955,4],[466215,6],[570393,1],[877096,2],[290369,7],[647446,4],[888762,4],[598148,5],[963333,1],[224950,1],[889515,1],[788301,2],[554280,1],[303279,9],[468154,5],[29030,4],[346825,7],[834635,7],[32017,4],[444187,4],[656193,7],[343961,1],[356371,4],[120338,6],[537837,9],[134118,1],[922949,1],[223024,8],[436123,9],[913204,10],[604218,4],[673029,6],[285850,5],[15521,3],[38438,8],[9616,5],[284747,10],[567542,4],[603235,2],[932075,2],[484531,9],[181535,9],[144692,4],[210259,8],[513949,8],[800259,1],[797406,7],[51962,8],[314413,4],[433494,10],[153745,8],[288306,6],[464146,9],[712255,5],[895959,3],[159036,2],[842616,6],[594831,10],[243874,7],[324832,4],[353574,2],[346614,10],[659691,4],[248893,9],[860701,10],[923963,9],[617334,10],[849646,8],[173433,5],[624186,4],[706386,7],[557019,9],[383993,6],[721146,5],[854672,4],[850532,9],[882725,7],[535304,10],[115275,3],[707233,3],[518929,4],[869305,5],[132651,8],[683194,1],[64502,4],[256460,7],[214491,1],[980275,8],[93263,3],[6013,5],[314858,5],[697917,4],[112893,2],[158962,2],[664157,4],[401330,3],[369262,5],[507896,3],[768951,3],[817236,5],[749443,7],[223576,6],[392664,1],[393307,4],[167318,2],[347576,3],[589465,1],[843081,6],[301569,9],[868230,9],[341837,5],[59750,1],[286284,2],[266471,6],[12439,3],[253058,2],[161077,4],[834311,7],[959651,9],[336372,6],[760565,3],[774189,4],[137042,3],[94133,9],[486936,10],[532547,2],[680156,5],[375954,10],[476341,9],[516219,6],[678583,10],[848364,7],[238425,1],[991404,9],[373944,10],[240032,6],[168048,9],[415334,3],[642150,4],[75458,5],[813101,2],[537443,5],[40029,10],[307360,10],[301122,9],[989430,1],[696591,9],[477064,10],[78723,9],[401510,1],[384409,10],[663652,9],[446764,1],[527771,5],[877908,1],[983557,7],[134516,6],[950281,2],[887054,7],[89204,1],[627503,2],[639789,2],[197904,6],[407245,5],[120980,9],[150875,4],[583523,7],[651874,5],[238497,7],[918517,5],[924561,10],[796911,1],[686854,7],[911571,5],[676434,8],[177987,5],[663186,2],[535416,7],[909448,10],[268555,4],[51834,9],[132467,5],[263072,8],[173955,9],[215277,8],[347421,5],[36117,10],[756852,10],[645094,5],[34891,2],[849352,6],[404700,3],[51204,3],[917289,8],[579607,5],[690456,9],[970099,5],[565789,8],[71102,2],[379837,10],[570652,8],[270494,7],[975603,5],[971914,1],[666423,7],[937212,7],[761198,8],[53503,7],[273727,3],[580098,8],[253734,5],[138185,8],[634081,10],[651915,8],[536444,6],[966257,8],[224500,6],[58353,1],[558133,3],[944943,8],[137530,3],[471183,7],[644436,5],[868279,6],[269975,8],[338379,3],[335763,2],[844209,10],[456911,7],[113364,6],[409825,1],[146916,3],[840232,3],[982503,6],[497079,8],[277808,7],[755533,10],[926427,4],[731646,4],[677599,4],[92025,10],[713575,9],[167107,8],[910486,3],[66814,2],[12059,2],[566792,2],[147008,4],[197066,7],[301947,10],[387337,1],[663909,1],[841289,10],[706106,6],[128437,3],[155947,7],[212014,10],[949781,2],[791614,9],[331854,4],[155470,9],[408817,3],[328618,9],[209755,2],[162983,5],[837776,4],[798522,8],[565120,3],[265673,1],[507170,9],[53435,6],[934713,5],[673680,1],[354487,1],[234430,2],[577669,8],[929422,6],[523237,7],[823349,4],[241067,5],[99967,2],[562592,5],[451762,2],[411891,5],[599364,9],[161575,7],[517009,5],[253693,7],[911183,3],[510562,7],[157689,9],[432301,1],[805104,10],[921075,3],[812556,6],[387235,9],[973818,3],[415168,8],[787175,3],[55749,1],[145180,2],[546900,9],[982772,10],[165784,10],[892300,6],[220567,9],[630721,7],[369798,1],[264913,6],[302877,3],[291705,3],[721106,7],[105825,5],[793569,1],[439405,4],[142538,2],[221548,9],[572621,10],[195031,9],[114949,9],[236081,2],[310457,6],[465505,5],[424572,6],[656167,3],[162141,9],[334761,2],[484909,6],[15779,7],[667316,10],[20132,6],[914805,2],[392963,10],[324077,8],[17764,1],[54809,3],[593909,6],[186412,7],[747845,9],[919318,4],[873087,2],[590011,1],[948930,7],[950364,3],[982470,8],[828366,10],[579619,3],[908020,7],[417096,1],[413003,10],[348281,6],[453093,6],[614636,8],[556533,10],[142304,4],[411498,10],[934390,1],[202186,4],[267620,7],[972540,8],[722906,8],[681645,7],[273194,2],[470432,7],[612358,8],[853287,3],[505657,3],[116610,7],[832925,9],[39294,7],[645046,5],[378386,6],[677001,5],[547643,4],[68865,3],[761761,5],[968047,9],[151418,5],[342550,3],[903488,10],[323433,10],[876703,5],[418358,8],[193625,1],[146948,7],[565637,10],[267289,7],[818936,6],[62827,3],[521299,3],[941846,8],[444521,2],[804551,8],[80779,3],[339932,7],[757435,9],[105707,10],[664497,2],[373707,1],[546808,5],[92073,5],[222410,10],[964802,7],[13212,3],[151342,6],[169419,10],[854190,4],[86871,5],[905546,10],[291683,5],[54734,3],[522535,5],[264832,3],[493364,3],[33583,8],[310993,5],[853038,6],[940616,1],[629847,7],[495157,9],[510396,7],[438565,5],[290202,4],[266542,7],[132405,9],[11399,6],[878132,10],[936437,8],[298250,4],[937853,6],[687474,3],[48250,9],[336060,2],[163895,1],[422894,5],[245174,9],[925423,1],[522124,6],[6915,9],[291162,8],[419928,8],[592436,3],[362714,7],[567671,8],[948802,3],[499593,10],[472152,4],[344324,4],[398503,7],[483328,9],[348975,9],[226365,1],[160475,4],[438512,10],[233425,4],[849473,5],[707614,6],[992470,5],[593401,3],[696151,3],[353307,2],[83721,7],[733625,6],[275176,10],[266216,6],[356521,4],[11584,3],[486131,6],[562725,6],[38715,9],[891693,7],[883822,1],[560895,1],[727194,3],[442458,8],[759640,10],[412369,4],[490002,5],[262910,2],[996507,6],[314356,10],[100681,3],[40940,7],[516439,2],[13001,6],[352050,8],[500584,1],[609292,8],[710168,10],[60887,6],[989874,2],[614796,10],[752934,5],[812580,6],[921347,7],[589233,4],[910113,7],[915237,6],[576116,2],[778453,6],[549733,8],[826581,10],[629455,1],[828066,3],[561235,1],[585434,9],[53891,4],[53616,9],[530046,6],[500708,3],[418137,7],[930733,1],[541915,5],[539788,1],[605285,7],[849230,5],[463635,10],[611061,7],[824330,7],[890337,5],[978724,7],[98838,9],[726621,10],[130301,8],[129328,1],[531670,6],[219192,10],[559403,7],[854560,9],[366519,1],[543847,7],[951132,1],[360792,8],[548184,3],[225894,7],[985883,4],[775370,2],[540696,5],[897594,5],[840577,5],[711265,5],[879079,2],[934834,6],[218248,3],[728711,10],[223378,2],[158450,3],[654361,2],[229118,3],[738536,2],[389210,2],[321581,6],[477619,8],[35792,5],[874662,6],[450710,1],[891143,2],[919142,7],[689435,6],[365817,9],[773654,4],[797008,5],[73979,3],[878051,3],[614196,2],[171947,5],[934757,4],[675772,9],[20241,5],[318941,9],[412944,7],[600513,2],[955598,6],[682939,1],[543585,4],[121840,10],[987840,5],[178143,4],[520548,4],[323660,9],[257899,6],[401621,6],[436384,9],[921495,10],[82196,7],[628491,10],[370266,3],[345709,1],[463567,3],[732008,4],[607089,6],[182031,2],[108570,8],[475422,6],[947400,9],[640128,2],[87147,9],[898158,3],[596779,8],[553457,7],[597301,2],[406749,3],[493544,8],[777077,2],[440431,8],[687034,4],[27869,2],[230101,9],[779040,7],[73872,4],[154562,2],[183390,5],[103549,5],[36817,2],[225376,8],[897756,5],[841878,8],[492527,6],[3135,2],[498606,3],[980283,4],[896812,5],[352156,2],[628022,8],[665288,6],[524938,8],[749273,4],[93103,3],[384890,3],[24929,2],[647521,9],[95145,8],[297146,6],[890209,2],[289733,9],[889979,9],[488051,8],[285986,6],[859900,5],[245417,5],[383492,3],[225127,8],[872517,3],[698969,1],[627330,3],[128818,8],[680008,10],[481561,8],[159344,8],[113089,9],[438957,3],[316623,1],[65262,4],[383038,7],[93258,5],[721512,5],[572886,1],[338258,1],[692537,2],[134042,3],[689094,2],[7638,9],[750967,3],[278361,6],[670147,6],[24337,8],[136666,10],[841321,8],[470757,7],[570431,10],[149729,5],[170754,2],[957233,9],[379430,5],[520771,4],[733003,2],[950171,4],[904595,7],[808465,7],[982314,7],[701460,2],[581862,5],[191000,1],[939577,10],[600530,9],[984444,1],[445725,3],[365203,4],[616831,7],[943507,5],[673874,8],[352864,10],[975920,1],[426761,5],[982001,2],[897251,3],[782598,1],[248950,10],[428946,4],[989206,2],[719168,10],[79468,7],[714088,1],[959253,5],[405974,3],[691682,5],[570022,3],[552810,7],[603928,10],[664847,2],[315074,10],[818419,9],[494819,6],[120272,1],[340677,9],[372904,3],[298154,6],[523877,1],[390100,2],[784743,8],[552112,3],[923238,4],[455024,5],[739907,9],[707107,1],[828649,2],[763572,9],[729980,8],[213105,7],[835531,5],[935920,4],[840472,3],[37589,5],[819277,2],[677211,9],[317001,2],[265439,2],[479039,4],[994778,5],[175565,8],[489169,4],[205509,5],[575757,10],[762803,2],[491907,9],[182854,5],[530164,4],[306476,7],[776360,3],[44375,3],[957789,10],[268003,10],[872290,5],[631781,3],[14663,6],[582086,3],[606328,5],[187510,9],[257748,9],[523040,8],[333423,1],[310905,8],[77156,2],[517165,1],[617021,10],[702755,2],[782937,9],[149270,1],[680189,7],[274993,10],[525638,6],[639225,5],[409399,3],[618604,9],[343221,2],[779084,3],[317009,7],[453388,3],[758600,4],[93454,8],[61219,3],[372862,7],[630499,9],[412958,8],[662769,4],[13064,5],[336780,2],[980737,2],[312766,7],[938227,3],[447244,2],[585675,1],[458076,8],[727411,1],[717847,3],[170546,5],[881284,9],[760958,5],[729000,9],[177250,9],[277751,3],[214331,9],[372240,2],[58381,1],[364574,1],[925695,9],[668555,10],[264365,2],[279342,10],[674527,2],[601548,7],[186151,9],[331954,2],[182846,8],[247441,10],[436398,5],[249716,8],[423446,6],[938291,3],[601178,5],[556038,2],[843767,10],[39899,2],[353215,6],[887257,9],[897272,3],[853235,4],[853663,9],[408530,6],[944501,6],[106574,2],[152373,2],[342704,7],[347540,7],[323144,3],[737665,2],[328139,2],[419620,2],[485201,3],[863504,4],[453348,1],[527664,5],[567784,9],[310747,10],[939065,7],[832007,3],[981405,6],[3112,10],[246562,8],[900278,3],[985887,1],[80459,7],[514226,5],[155571,3],[74981,8],[581370,6],[567716,2],[655388,4],[166390,10],[230866,10],[708227,4],[79994,7],[139241,7],[745719,8],[984278,7],[461935,8],[848543,4],[396326,9],[752929,1],[453572,9],[273150,1],[526113,6],[12773,2],[931832,8],[199018,6],[37122,1],[49223,5],[750231,5],[471333,9],[205474,10],[962328,4],[182733,6],[184293,8],[981290,9],[738567,3],[105172,9],[131150,4],[293807,10],[523628,1],[862961,8],[277496,4],[813124,8],[238258,9],[611864,6],[388887,6],[411084,4],[818872,10],[106381,4],[550175,10],[668929,4],[192121,5],[892724,6],[388516,2],[734883,9],[826032,9],[993456,3],[37814,2],[21012,8],[614920,1],[436068,1],[752939,2],[512484,10],[978110,8],[658981,10],[204409,8],[151087,10],[50453,3],[990037,8],[752621,7],[37160,5],[172046,5],[559959,8],[612758,10],[612070,6],[520263,10],[323419,1],[177592,10],[152185,1],[576338,3],[549680,10],[531479,2],[642774,6],[400439,4],[456078,8],[372895,1],[502174,9],[673794,8],[176497,2],[183928,2],[20214,2],[883343,4],[575010,9],[734451,2],[251037,4],[829207,7],[294395,7],[311430,5],[916037,5],[730083,2],[102119,8],[576291,4],[987550,1],[397884,6],[632022,4],[481685,1],[317679,4],[91366,3],[369428,9],[137533,2],[97116,1],[762242,7],[914131,3],[51145,1],[471112,5],[605746,10],[973597,7],[122993,4],[494598,1],[669276,8],[994361,3],[89453,2],[724543,9],[613760,10],[702537,9],[419893,3],[928323,6],[82742,5],[849009,9],[656678,1],[466862,4],[826834,5],[772068,3],[340355,3],[380093,10],[829329,10],[291713,10],[683314,7],[567848,1],[807638,4],[768004,5],[884307,9],[866332,5],[555807,4],[579558,8],[279380,5],[917062,1],[569433,8],[886815,5],[8356,1],[536307,3],[498419,3],[612675,10],[541695,7],[544173,2],[988309,3],[782733,2],[871552,1],[121966,8],[882459,6],[498666,1],[522331,8],[369535,4],[895822,5],[793351,7],[142902,5],[55893,5],[208749,6],[286363,2],[925127,4],[14752,6],[670769,2],[678391,3],[2193,2],[139335,4],[531389,1],[851455,1],[284320,10],[946648,2],[647687,6],[312816,8],[784070,2],[913351,3],[268615,1],[264246,9],[833385,7],[408789,6],[550875,2],[440522,6],[23946,3],[220600,9],[128358,3],[89195,2],[613294,8],[585870,3],[320202,5],[100593,7],[768226,7],[801418,5],[332967,1],[716349,8],[941680,3],[602028,10],[150209,2],[936443,8],[859725,10],[544794,1],[5495,7],[966650,10],[701246,4],[539541,1],[359332,1],[317330,1],[246571,7],[95598,3],[864766,2],[450784,6],[583076,5],[235863,3],[508208,8],[76120,7],[819024,2],[46219,2],[457738,1],[765479,1],[860222,5],[142754,8],[558121,8],[690485,3],[518157,10],[746049,7],[227237,9],[745302,2],[378142,1],[65538,4],[145021,2],[173768,6],[857985,6],[757441,10],[644059,8],[528713,8],[717373,10],[903460,5],[261306,3],[700351,2],[264639,1],[194094,8],[987104,7],[978485,6],[145695,10],[614292,7],[123609,6],[823125,10],[596816,5],[283585,2],[591476,8],[299634,9],[721101,3],[635842,8],[771967,3],[193676,2],[917912,9],[701958,7],[654804,10],[567060,3],[880004,8],[506890,10],[641767,4],[77642,8],[539145,5],[921480,9],[470306,6],[219202,2],[361634,7],[370320,4],[662815,6],[111668,5],[586430,7],[111506,9],[32004,3],[391245,2],[157778,9],[735538,6],[923052,9],[624836,8],[381725,7],[163635,3],[911229,8],[943721,2],[167505,3],[725572,5],[724390,10],[452943,4],[604454,7],[147995,3],[268578,7],[20100,1],[680251,4],[257028,1],[912158,10],[937749,8],[913359,3],[666224,6],[319278,4],[70169,5],[374315,5],[633246,7],[547704,4],[749056,2],[263959,2],[494371,5],[992018,9],[996688,10],[973079,8],[975203,6],[340881,6],[517334,4],[65135,10],[601531,2],[563836,7],[651372,10],[582048,7],[828160,8],[630071,8],[647175,2],[355816,1],[6063,1],[231105,2],[944795,2],[749368,2],[299305,10],[650424,6],[423212,2],[456137,9],[489586,6],[886736,2],[351715,2],[460320,9],[106938,2],[880507,7],[818929,8],[686190,3],[709677,7],[680973,9],[805227,10],[534302,7],[978279,6],[547505,9],[10825,7],[702702,8],[147021,8],[806371,3],[673912,7],[71530,2],[932281,10],[838918,5],[888239,4],[79889,2],[935233,3],[338253,7],[385035,10],[167862,6],[148179,9],[302812,3],[881388,8],[484795,5],[583391,5],[364474,9],[280238,6],[141191,9],[70065,3],[34141,5],[668136,5],[102197,3],[557465,3],[762913,9],[321291,8],[689086,5],[90436,1],[12816,3],[119863,9],[283380,2],[149023,1],[455939,1],[673014,6],[476302,3],[130516,2],[720172,9],[659517,3],[30321,1],[815380,5],[551289,5],[452979,2],[868646,4],[809193,1],[125786,1],[800071,2],[980411,4],[444936,8],[746213,4],[516937,5],[255351,9],[383797,7],[559756,10],[978880,10],[967706,8],[632988,4],[924096,3],[203513,6],[970973,2],[376766,9],[816962,2],[454507,6],[593733,1],[202648,9],[822815,4],[941271,3],[672203,9],[464769,3],[648797,6],[287046,9],[948791,6],[981267,4],[363356,5],[486517,9],[509163,9],[663434,6],[483393,7],[632969,1],[850273,8],[274654,9],[932841,4],[231329,8],[874576,8],[688630,3],[651265,8],[564425,6],[921917,4],[923997,1],[201448,1],[929302,4],[125367,2],[591995,8],[481228,7],[292627,3],[210849,6],[747352,9],[857018,2],[369075,3],[510865,8],[238658,5],[258820,5],[593313,3],[661162,2],[346882,9],[620674,8],[772234,10],[225702,5],[432725,6],[432958,8],[114289,1],[418738,5],[568051,6],[569115,8],[767552,7],[679302,3],[293656,1],[164867,2],[117317,1],[516783,5],[210705,10],[613485,4],[160262,7],[516082,4],[355793,5],[954872,5],[626883,7],[593361,6],[797481,3],[374970,8],[617309,3],[238406,8],[473751,4],[26727,3],[927791,10],[341501,7],[171624,10],[745102,8],[791604,10],[881488,6],[915588,10],[737590,7],[374990,8],[962583,7],[215384,1],[452037,3],[706640,3],[475689,1],[729559,5],[70628,7],[104021,6],[720270,4],[239825,1],[203052,7],[349061,10],[697081,9],[617291,4],[326068,1],[223769,7],[840254,5],[373696,6],[179036,1],[444745,9],[431108,3],[818061,3],[59685,5],[949980,5],[101253,1],[797198,7],[730100,8],[884117,4],[610411,2],[424025,2],[398192,4],[60649,2],[165734,6],[998179,8],[324166,2],[806692,8],[461776,4],[367729,8],[342865,4],[585205,2],[57895,4],[715081,7],[882175,7],[156171,4],[583540,3],[693941,10],[138338,10],[392329,3],[537552,1],[170325,4],[81632,1],[546668,4],[937966,4],[649378,1],[957361,5],[110617,9],[180388,5],[437787,8],[275694,5],[999858,6],[154763,5],[397572,1],[423857,7],[467261,2],[89122,2],[46813,8],[733838,6],[759114,9],[944466,10],[454751,4],[560799,8],[413559,7],[946041,2],[784947,4],[316157,5],[423061,5],[467231,2],[360482,5],[346611,2],[315936,5],[806272,8],[532082,2],[27422,3],[911169,2],[148716,8],[156992,3],[327188,8],[298375,4],[179149,9],[1510,2],[493927,3],[291507,6],[421633,5],[908923,10],[170364,9],[727381,9],[445421,7],[960742,3],[764573,1],[259531,2],[644826,4],[674669,4],[638533,6],[621475,5],[915094,2],[402369,9],[91845,9],[432994,10],[530248,8],[794418,8],[742404,5],[939238,10],[664769,10],[77772,8],[104250,7],[321395,6],[717487,7],[904691,8],[788001,3],[450463,8],[895573,5],[897780,9],[742080,7],[469817,2],[509558,4],[186476,9],[190533,7],[913777,7],[349028,2],[419478,5],[598008,10],[333052,6],[680592,1],[459782,8],[355972,2],[153901,2],[209685,6],[192503,1],[754331,10],[383819,8],[530703,4],[197473,8],[583159,5],[755176,1],[579703,2],[767055,1],[392058,2],[531516,6],[671349,10],[267444,10],[128706,4],[903480,2],[186148,5],[672364,1],[626100,7],[864125,4],[960543,9],[489234,1],[198494,10],[414923,5],[583001,1],[201575,9],[293500,2],[705803,1],[60569,1],[284705,3],[267271,2],[572172,10],[740772,3],[27306,2],[56473,5],[824620,7],[849084,5],[75037,8],[40590,6],[403900,3],[202977,6],[195750,10],[82586,1],[94035,8],[368341,8],[88362,4],[875762,8],[752093,1],[249452,7],[570186,2],[840410,10],[975423,1],[244300,6],[547858,8],[182961,4],[695686,8],[155255,10],[866462,5],[875894,4],[404309,8],[878940,3],[943084,3],[147653,10],[170902,9],[663801,2],[931558,8],[866287,6],[332913,9],[541417,7],[290514,4],[511302,8],[855410,4],[373673,6],[437363,5],[569931,8],[958358,2],[173741,7],[422188,2],[493996,8],[136272,9],[517129,6],[482140,5],[193703,8],[618248,7],[293623,3],[19870,7],[494953,4],[683869,3],[881588,7],[729384,2],[982839,6],[997246,2],[320643,7],[205358,8],[163817,5],[906848,10],[339018,2],[417048,8],[132996,6],[1318,7],[217942,7],[855131,4],[221777,4],[904105,9],[495288,1],[717092,6],[110212,1],[3513,7],[867803,5],[94086,1],[787996,3],[805827,6],[850128,8],[411708,8],[821480,1],[893872,7],[125377,2],[733530,2],[872354,1],[504574,3],[45104,5],[579871,5],[370045,7],[160381,5],[129181,8],[951236,5],[105099,9],[455637,6],[275058,7],[641463,4],[654200,6],[379775,4],[255364,6],[510574,6],[13581,6],[831686,8],[43179,7],[961373,10],[469267,3],[753376,2],[168055,1],[786839,6],[828902,10],[32759,8],[423803,4],[273894,4],[975304,10],[689768,2],[516589,2],[647720,8],[519731,7],[15590,1],[248794,7],[86668,1],[227641,7],[747507,2],[878900,4],[254505,3],[493420,3],[71502,10],[377658,9],[784601,9],[56192,4],[485448,2],[472548,8],[400176,10],[369888,7],[442406,3],[703424,6],[568501,2],[825586,7],[12372,7],[955642,8],[650547,1],[533610,7],[935258,2],[708661,9],[181083,4],[160670,2],[110826,2],[293359,2],[66858,5],[315088,7],[227825,4],[376082,3],[319642,8],[819532,10],[571378,9],[552806,1],[93371,4],[422999,4],[334064,9],[859156,1],[374549,3],[493983,8],[250222,5],[801813,9],[900408,2],[730940,6],[257434,8],[973582,8],[898776,4],[82392,9],[2214,1],[419855,3],[182357,9],[297232,6],[461483,9],[727036,8],[232866,9],[266307,6],[370533,8],[854475,10],[34755,4],[871541,4],[595132,5],[920494,7],[912941,3],[582097,5],[756147,2],[718098,6],[418390,2],[649895,4],[480698,6],[888518,6],[2650,3],[191406,6],[333662,2],[786340,5],[184476,3],[674945,5],[407405,9],[23743,3],[386929,8],[437590,10],[170852,5],[807134,3],[236738,5],[622560,8],[196014,3],[578151,9],[300711,3],[69133,3],[949675,1],[142949,1],[493018,10],[927763,9],[845546,3],[544533,1],[444595,2],[444716,7],[373867,3],[587577,3],[181004,10],[197735,8],[693779,9],[10301,2],[275244,3],[200253,10],[815075,4],[440904,4],[624277,5],[580647,9],[993878,4],[46632,4],[995249,9],[942845,1],[699277,10],[709322,7],[3110,7],[815178,8],[417191,4],[343342,10],[357662,9],[783305,10],[748449,6],[402671,2],[300555,9],[364017,7],[714044,2],[251279,3],[571709,8],[737191,8],[501738,8],[187159,9],[108688,6],[286306,7],[152930,2],[437049,2],[608611,3],[138632,4],[512978,9],[70329,2],[925901,4],[118925,2],[460397,8],[975719,9],[301264,9],[397096,10],[703465,3],[871659,8],[290554,3],[711931,8],[948822,6],[229066,3],[431478,3],[470508,6],[826613,9],[235049,2],[352423,8],[707778,6],[880656,1],[654310,5],[643902,10],[591550,3],[524711,8],[544479,10],[430587,6],[99966,5],[735904,5],[48293,3],[602610,10],[607954,9],[622702,9],[47407,8],[592253,5],[628805,1],[40907,1],[48044,2],[445237,8],[115659,5],[726031,7],[506459,1],[555767,9],[633242,2],[512091,7],[623583,7],[454947,1],[643995,8],[391713,7],[246430,7],[281460,2],[205144,1],[91380,3],[441009,2],[755999,1],[276144,5],[15970,7],[454663,3],[465983,1],[218086,5],[22461,2],[377691,3],[346341,2],[738408,10],[531473,2],[284858,8],[459957,2],[525201,2],[206590,6],[732040,6],[598879,8],[1882,6],[453557,3],[539647,2],[958697,1],[352604,3],[78458,9],[828574,2],[159964,1],[505042,3],[402492,7],[877600,2],[660275,4],[769227,1],[57875,8],[309682,3],[352568,7],[748611,6],[75953,1],[909071,6],[991197,2],[65794,2],[889906,10],[85741,3],[85046,6],[830059,3],[413432,8],[80141,7],[764923,2],[169963,10],[22098,10],[820091,8],[781602,2],[945443,3],[446995,6],[437233,10],[295301,9],[188549,5],[628620,1],[719095,1],[875337,6],[113640,3],[770023,9],[420780,1],[382157,2],[534763,1],[250510,4],[571930,10],[582640,7],[939508,2],[607838,1],[819229,10],[871622,9],[871889,5],[702084,10],[40956,3],[938216,10],[787816,10],[418344,4],[666972,6],[878977,9],[952001,6],[263876,2],[175321,5],[572589,3],[950446,4],[455348,10],[132375,1],[167319,5],[78289,7],[756069,8],[293346,10],[952753,10],[231846,7],[172352,8],[264069,9],[524563,1],[573892,2],[588276,5],[655257,3],[423183,6],[880699,9],[589641,3],[450438,7],[482224,4],[166051,7],[49618,9],[407422,2],[608524,2],[566095,10],[906060,5],[43018,10],[307942,4],[708995,1],[223583,4],[541286,7],[153602,10],[363029,2],[73040,3],[780668,1],[406168,4],[451193,9],[495687,1],[919020,3],[848994,4],[541276,9],[196759,1],[781933,5],[328996,10],[828897,6],[279944,9],[726581,10],[861560,6],[265337,9],[956516,7],[904136,7],[767408,6],[577464,7],[978384,1],[640849,10],[570578,9],[794571,7],[864711,6],[917426,10],[22279,10],[5903,9],[741993,5],[881912,10],[510951,5],[322069,9],[425747,7],[933744,6],[2077,5],[128682,10],[33478,3],[241175,2],[126249,8],[25225,6],[556458,5],[581918,2],[437581,9],[140341,5],[122099,5],[727201,4],[578994,9],[885553,6],[760224,1],[829826,7],[439622,2],[328282,7],[171883,1],[55652,3],[475402,2],[195212,7],[133618,9],[886341,1],[6379,3],[929600,8],[519139,8],[487121,1],[630865,6],[632297,5],[315979,1],[716549,10],[427322,9],[259096,8],[147727,1],[656646,3],[454274,8],[19039,9],[98597,3],[189319,6],[918771,7],[726006,5],[175235,1],[609506,8],[329933,4],[218285,2],[992769,10],[777509,5],[344103,7],[593133,7],[441054,4],[533233,10],[913174,4],[825377,1],[562156,10],[617730,3],[196100,10],[644200,1],[112927,4],[541051,7],[855360,8],[682707,6],[856935,8],[351697,4],[989616,2],[68457,9],[240378,8],[245121,4],[466324,5],[660845,1],[345344,7],[490981,7],[68761,7],[288417,4],[282812,10],[422861,3],[852382,7],[849106,9],[201209,5],[323301,3],[910949,4],[623005,3],[958884,4],[918289,8],[860550,2],[897257,4],[555383,3],[888345,5],[902509,7],[50583,3],[491392,1],[3607,10],[851275,1],[675090,7],[814421,8],[737370,10],[178326,2],[616782,8],[338041,2],[619073,2],[269182,6],[572215,5],[597268,6],[266382,2],[461372,5],[6343,8],[513920,8],[407590,5],[487152,4],[397523,8],[556358,3],[73185,4],[494448,8],[78171,2],[893344,2],[900709,7],[865557,7],[387832,4],[397122,5],[316445,3],[606717,6],[46475,7],[769491,2],[120060,7],[557228,7],[59741,7],[516022,8],[89275,4],[973457,6],[675584,2],[43631,7],[49199,4],[239043,4],[363507,3],[656227,4],[696439,8],[890084,2],[738335,5],[475844,9],[811424,3],[594832,8],[17064,9],[895899,9],[478426,7],[223747,7],[177899,10],[559365,4],[481003,8],[71203,3],[468897,9],[398368,8],[448307,9],[416524,1],[205840,3],[812713,6],[547936,1],[884253,8],[968210,2],[769089,4],[687615,2],[142498,5],[108143,7],[845167,5],[219120,3],[947885,8],[577231,10],[851923,7],[420713,4],[975178,2],[343424,10],[694174,5],[622323,9],[209201,7],[8820,10],[392729,7],[330268,9],[381487,9],[412470,5],[59226,9],[576253,6],[233484,1],[917765,5],[285804,3],[274143,1],[127,8],[985538,4],[168137,9],[398084,7],[321814,9],[854334,2],[310164,10],[398812,1],[581191,6],[519637,7],[2546,1],[117712,2],[321496,3],[36690,10],[665525,10],[672156,5],[566204,1],[9082,2],[57226,7],[32127,10],[238191,4],[342274,8],[180762,10],[32144,6],[797227,10],[295348,4],[425489,9],[93316,9],[773826,4],[484070,6],[92355,5],[659795,5],[940394,1],[995682,2],[370032,10],[761706,3],[73558,4],[588354,1],[976642,7],[401772,1],[202234,2],[693844,4],[835108,1],[69557,8],[635518,8],[135522,5],[262259,5],[66240,4],[471027,4],[190067,1],[701392,5],[678517,8],[670700,8],[141024,8],[261418,9],[643017,1],[327115,2],[3356,9],[330403,10],[882358,10],[594455,2],[181063,2],[572043,7],[245850,6],[443293,10],[240014,5],[188101,10],[736650,8],[413242,7],[692975,10],[355452,7],[167833,1],[380288,1],[527180,1],[117160,5],[716185,10],[351758,6],[399679,1],[364713,3],[278123,10],[963275,7],[558592,5],[978505,8],[60349,6],[327137,2],[922106,6],[998984,5],[394360,3],[711577,7],[381788,5],[229522,7],[640058,3],[604838,5],[991139,1],[835667,10],[891493,5],[356090,9],[935259,2],[546724,6],[192884,8],[62558,6],[482485,1],[186299,1],[87442,7],[981419,8],[284493,7],[313782,3],[605523,3],[537114,8],[348493,8],[357362,4],[163306,2],[87181,7],[761317,4],[455655,8],[726010,6],[128854,3],[545698,5],[758004,1],[737235,3],[544236,5],[277620,6],[148089,2],[291490,9],[510077,5],[227176,1],[884977,7],[92309,7],[483359,3],[652232,3],[839514,8],[59114,6],[316892,5],[874407,6],[686587,5],[758790,8],[990407,2],[613515,1],[147545,10],[886324,1],[264125,2],[571087,5],[470322,4],[707589,8],[775407,7],[970039,7],[46441,7],[735158,7],[997337,4],[979131,7],[890214,6],[675306,2],[524163,9],[399611,7],[610520,10],[780201,3],[153660,6],[743203,10],[111852,5],[101651,9],[998278,1],[905654,4],[842186,9],[703787,4],[79413,8],[128886,10],[962099,1],[194327,2],[999222,1],[770964,8],[18672,3],[824235,6],[989341,7],[561224,7],[229125,10],[149662,4],[731653,1],[484430,4],[479769,4],[497574,6],[998201,4],[504731,2],[804224,6],[309965,6],[763838,8],[556621,4],[437480,3],[847104,4],[270463,8],[194057,1],[930652,6],[458611,5],[299774,8],[15644,5],[694453,1],[760774,1],[114998,6],[857930,6],[770441,5],[566615,7],[994936,4],[372117,10],[216596,10],[492769,4],[898389,8],[936891,8],[583992,6],[625300,1],[851539,3],[654636,2],[246289,7],[152786,10],[242259,8],[590528,10],[363874,3],[96335,4],[640,7],[231293,6],[330339,4],[635950,9],[826757,2],[582261,3],[269135,2],[890876,3],[584868,10],[858555,6],[775111,7],[861899,7],[222536,6],[799768,2],[645855,7],[951162,2],[198201,8],[739596,8],[509845,4],[358325,8],[677347,2],[98749,3],[657099,4],[466956,4],[570638,10],[903758,7],[287853,5],[707910,5],[635520,6],[275713,8],[887370,7],[549851,9],[231507,1],[479491,3],[482240,2],[714487,6],[765012,3],[296324,10],[778914,2],[496437,2],[121505,1],[635395,1],[750129,5],[843015,8],[541117,2],[203267,10],[580107,8],[87087,8],[204429,7],[120983,7],[932282,8],[979592,1],[300884,6],[476876,6],[822605,5],[306460,6],[528616,2],[951690,4],[218130,5],[401411,2],[362368,1],[719397,4],[917265,2],[408953,1],[404321,9],[470705,1],[843295,9],[858647,1],[680683,1],[663707,6],[428745,3],[681326,7],[518262,1],[477818,4],[396243,1],[168875,10],[364249,7],[66619,10],[201992,10],[873982,8],[328102,6],[921885,8],[175744,3],[729208,2],[811660,1],[222805,7],[709619,2],[902125,3],[620515,3],[930403,9],[561061,3],[266353,9],[824253,6],[485772,9],[130173,2],[540645,9],[178688,10],[653079,9],[582823,3],[834577,3],[821306,8],[179251,9],[264024,8],[42594,6],[167976,5],[296481,4],[249505,2],[557263,3],[315349,7],[103779,7],[949422,9],[503955,4],[157243,5],[224371,4],[835510,5],[405271,10],[932928,8],[624423,3],[866280,2],[420350,8],[306233,3],[629369,7],[733023,5],[865017,3],[797476,2],[678073,6],[447922,2],[939328,3],[809157,2],[352253,3],[23555,6],[548951,2],[128123,1],[300659,5],[982967,2],[819782,6],[571238,3],[395861,3],[915709,10],[591909,6],[859214,6],[674190,6],[675284,8],[742277,6],[163256,4],[866823,6],[582181,10],[301367,1],[22200,1],[260488,3],[16956,6],[731521,3],[702065,9],[546710,4],[866275,10],[294583,5],[207743,8],[937187,3],[177946,7],[449455,8],[725586,8],[816019,9],[740346,2],[492921,7],[782473,2],[33179,3],[711950,1],[609519,2],[686402,1],[119732,6],[443011,7],[40350,9],[824723,10],[231477,9],[537242,7],[565314,7],[611262,7],[347839,1],[189740,1],[530771,3],[830963,6],[76101,4],[932786,3],[653287,8],[466585,6],[185618,8],[589434,10],[804202,8],[794573,1],[231135,10],[374132,8],[548326,9],[983629,5],[645497,10],[822889,4],[422431,5],[502280,4],[447504,7],[615246,9],[246787,7],[18415,6],[260235,6],[507387,7],[658985,7],[510602,4],[366086,5],[248779,8],[35612,4],[478222,10],[315268,2],[815415,5],[867343,1],[417873,2],[990986,10],[509070,8],[278003,8],[708689,7],[292754,2],[844038,1],[623750,1],[646075,9],[107827,9],[736624,8],[820074,5],[707388,2],[523597,5],[300617,1],[788768,10],[678027,5],[412239,1],[470953,9],[735634,6],[39931,10],[825067,10],[284322,8],[654729,10],[684625,10],[999481,1],[648281,5],[542694,1],[148173,4],[48817,6],[785529,9],[248283,5],[169493,1],[753978,5],[700725,8],[8375,7],[225426,10],[780102,6],[398564,8],[658345,9],[323321,4],[332280,2],[876536,10],[518455,3],[650188,4],[43029,3],[46280,10],[957996,8],[291066,1],[636156,1],[58908,2],[136252,3],[846785,9],[840746,4],[869268,3],[52329,3],[534651,1],[174306,1],[551045,2],[319884,8],[134150,7],[193673,4],[330570,1],[837176,10],[199887,7],[134363,2],[970902,8],[705449,10],[348365,9],[535602,8],[410790,2],[836258,9],[332401,6],[886300,8],[708309,6],[469790,9],[983249,2],[720089,5],[556519,9],[896500,10],[208781,7],[271300,2],[379865,4],[959420,10],[417574,9],[66665,6],[380063,6],[549630,6],[113690,3],[11229,6],[773885,1],[624185,2],[173007,9],[170468,9],[666385,9],[356162,4],[461867,1],[422646,3],[964799,2],[590343,5],[135308,2],[746984,2],[135194,3],[288232,7],[595433,8],[989253,1],[568053,10],[489686,6],[47957,10],[324441,10],[568850,5],[650051,8],[586733,6],[413614,7],[416237,8],[52434,1],[841095,3],[648032,5],[228592,1],[623824,3],[377199,5],[831756,4],[815937,6],[327204,1],[535542,3],[533634,4],[72625,7],[955385,1],[848840,4],[502643,7],[306465,5],[559101,4],[356741,7],[437991,3],[768252,5],[521603,8],[379529,6],[228254,7],[552363,2],[578193,1],[201437,8],[990519,9],[755778,7],[292075,6],[543551,2],[585023,5],[569184,10],[463776,7],[607034,6],[640645,3],[869699,1],[238925,10],[136225,9],[866211,2],[70412,2],[843758,3],[185794,10],[837089,9],[882439,10],[113396,2],[453809,4],[758050,5],[631635,7],[603611,2],[270734,9],[959378,4],[758018,9],[918861,5],[846828,4],[239928,2],[358077,8],[883229,8],[452165,4],[94068,7],[864442,2],[432273,2],[578778,7],[809659,8],[524764,9],[649377,6],[482216,2],[414065,5],[741869,6],[264801,8],[418152,10],[333623,10],[671716,7],[342826,8],[407696,6],[823440,8],[546991,8],[584565,8],[738213,2],[277056,3],[29531,1],[39562,4],[345656,6],[948266,5],[881835,5],[224589,1],[988908,9],[863314,7],[812045,9],[628655,4],[785026,1],[771658,2],[497993,8],[293471,1],[921842,10],[169845,9],[573406,7],[37975,9],[958043,5],[898284,2],[634893,4],[590318,1],[807890,1],[654381,6],[644917,10],[809888,6],[755146,10],[150071,8],[374529,9],[141064,3],[972896,6],[552262,6],[78933,10],[564011,4],[278824,8],[497423,7],[106679,3],[639436,9],[157698,4],[573754,5],[424071,8],[267159,1],[906672,10],[327165,1],[118021,4],[588965,6],[885894,1],[53378,4],[265645,10],[275049,1],[124437,1],[683795,8],[815886,10],[437432,3],[871488,8],[824114,10],[259682,1],[327823,3],[630402,6],[259173,5],[859489,10],[468952,4],[427107,4],[75003,1],[766769,3],[823954,2],[552365,7],[509903,3],[363920,3],[101255,2],[832929,9],[189703,5],[184673,7],[704578,7],[607123,7],[514685,8],[310192,4],[518677,3],[806455,7],[583437,3],[228334,9],[892021,8],[315721,1],[235562,2],[477987,6],[956434,9],[174727,9],[560189,9],[126654,3],[770230,5],[318845,9],[386854,1],[777788,2],[322011,3],[845953,9],[590604,8],[104228,3],[36680,5],[628317,4],[977702,10],[301336,5],[689902,8],[185483,3],[845211,6],[31842,1],[403333,1],[712420,3],[667729,4],[37163,10],[517876,2],[955176,5],[556052,5],[661027,7],[728435,9],[644912,6],[338141,6],[47442,7],[92335,5],[681129,9],[714087,5],[771493,3],[426628,1],[689650,6],[700959,7],[109513,2],[237587,3],[234586,4],[224732,5],[7543,3],[447090,9],[330202,9],[203050,2],[134396,3],[911813,1],[599912,6],[325336,8],[853744,4],[293732,2],[762392,5],[638856,8],[928873,9],[539807,6],[546567,4],[381599,1],[612262,5],[799071,4],[713671,2],[341658,4],[622386,7],[345595,6],[710543,4],[605943,9],[925993,5],[740505,4],[659924,3],[250993,7],[93401,5],[5280,2],[108985,6],[424851,8],[389701,3],[371735,1],[299827,3],[732970,6],[224830,9],[674784,2],[358692,7],[476806,2],[241214,7],[593254,7],[760512,6],[545203,4],[117442,10],[577666,1],[2956,8],[210665,10],[976926,9],[407020,7],[406368,10],[477526,7],[360927,7],[104256,5],[397388,5],[517053,8],[258050,5],[281598,7],[809731,1],[991903,8],[781869,10],[663837,10],[448453,10],[806947,1],[306059,7],[928039,6],[102576,3],[735152,5],[354340,10],[102999,3],[977135,6],[213546,7],[947663,10],[417123,7],[93798,9],[565595,8],[256217,7],[378030,2],[116478,8],[686727,2],[320636,7],[506322,5],[443193,8],[86533,4],[768134,4],[304141,5],[251899,7],[35471,8],[578142,9],[845722,3],[564285,10],[497543,10],[67342,10],[242637,3],[207130,7],[138840,6],[784885,1],[404139,9],[783246,6],[274166,1],[308654,7],[326748,1],[919171,3],[783819,7],[496293,7],[121781,6],[881309,4],[425394,9],[658569,10],[382742,7],[532136,7],[350928,4],[342390,10],[16529,7],[364506,6],[984452,6],[670435,6],[65652,2],[970539,6],[354207,8],[390186,4],[656406,4],[53241,5],[460349,9],[698562,10],[259136,4],[296813,3],[473055,4],[471208,7],[220576,2],[455249,3],[527632,8],[100461,1],[202153,4],[616823,9],[450481,1],[38097,3],[141201,2],[72624,1],[50909,9],[670734,9],[815735,10],[688826,8],[167317,4],[207170,5],[770292,10],[155528,10],[21078,1],[660713,7],[993995,2],[32902,4],[147946,2],[638875,4],[596937,4],[147383,3],[156602,10],[896703,9],[287061,1],[291145,8],[959784,1],[170947,9],[638701,3],[166272,5],[843532,2],[609693,10],[192628,5],[913940,1],[408128,5],[409963,5],[406398,7],[143527,4],[802424,8],[935249,6],[364394,5],[123073,4],[460121,2],[418710,4],[872364,5],[504884,8],[789274,8],[622763,10],[271145,3],[391613,3],[861627,1],[406257,8],[799940,5],[553921,3],[142584,9],[177734,3],[687026,1],[242095,5],[257419,8],[869254,4],[87905,9],[77465,3],[219313,10],[855086,4],[230007,10],[177175,10],[197941,9],[146843,10],[478788,7],[249207,8],[379692,7],[227417,1],[696258,9],[49830,8],[172649,9],[607362,2],[150059,1],[406400,7],[384049,1],[759949,3],[655664,4],[977965,4],[740245,2],[49124,10],[284145,2],[743704,2],[933439,9],[425524,3],[694233,2],[454175,7],[636139,7],[449940,7],[564554,6],[697884,3],[515993,7],[840082,10],[895072,4],[23731,1],[195112,1],[922311,1],[761512,2],[837534,10],[995106,1],[485262,5],[126950,2],[717744,1],[692951,7],[121523,9],[89351,1],[742577,5],[29002,4],[281880,9],[361572,10],[916698,10],[390126,1],[406752,7],[283910,3],[813741,10],[585059,10],[95211,5],[795725,9],[4493,5],[39153,1],[991832,7],[837580,8],[980041,10],[884925,4],[41422,10],[638644,9],[973970,1],[421357,1],[780816,6],[357595,2],[136638,10],[45847,7],[99497,7],[787098,9],[675542,7],[276632,7],[132658,3],[566508,1],[660809,8],[158006,2],[625987,7],[840494,6],[899168,3],[663421,10],[810601,5],[734071,1],[657802,4],[869208,5],[525147,5],[628941,4],[606368,1],[159336,3],[446509,4],[407518,7],[968049,1],[774703,7],[649000,3],[116135,8],[735038,8],[77737,9],[538235,1],[346366,1],[609840,4],[435595,7],[15841,1],[968305,8],[370931,6],[797622,2],[462464,3],[982553,7],[882891,8],[205821,9],[373331,1],[230778,4],[718596,9],[333834,10],[862456,10],[697828,10],[122093,6],[80220,7],[288374,6],[374737,2],[103117,8],[776585,7],[536850,7],[873016,9],[171576,2],[940139,10],[150747,2],[729237,7],[999388,5],[918679,4],[878423,5],[464435,10],[89880,4],[878093,9],[962528,1],[258665,6],[804301,7],[757695,1],[967723,4],[624115,2],[113298,10],[497849,7],[678920,5],[298329,6],[856470,7],[933430,4],[444426,7],[723515,4],[537282,8],[883782,6],[528246,4],[570525,1],[89920,9],[598133,7],[519442,3],[769025,3],[684690,9],[893448,2],[965248,6],[377424,4],[556008,2],[125625,1],[685471,4],[109948,6],[639639,8],[646816,7],[354949,9],[182022,10],[889816,4],[751246,1],[218774,7],[182533,4],[267195,7],[426475,6],[621874,5],[810114,4],[31488,6],[440194,1],[986127,5],[267928,9],[359380,10],[900510,9],[262190,3],[212392,10],[242922,8],[525273,9],[382848,6],[461259,8],[566630,9],[414272,1],[17354,3],[839815,10],[523720,2],[863256,2],[691210,1],[389485,6],[125608,8],[788310,1],[120671,6],[911844,10],[65427,5],[86264,2],[742723,7],[28972,4],[948814,6],[657639,2],[592153,9],[493707,4],[611709,3],[988086,7],[668293,10],[249449,8],[895982,4],[163874,1],[462892,8],[298102,8],[199769,2],[179427,6],[669438,5],[194300,7],[682210,1],[194164,9],[848627,8],[452267,3],[302112,3],[880844,9],[896983,5],[79043,5],[754762,1],[571111,4],[873726,3],[494737,10],[366107,10],[455642,4],[85082,10],[944097,5],[486664,3],[15710,8],[496573,7],[906847,9],[975871,3],[467681,9],[397655,4],[292963,2],[168486,8],[848150,10],[678177,8],[831771,10],[810629,9],[262286,3],[325874,1],[77152,9],[423799,1],[159556,3],[697309,4],[45612,8],[850995,5],[642669,7],[967756,6],[725198,9],[260939,3],[278250,2],[813606,8],[25626,7],[738660,6],[940147,9],[548986,3],[658168,1],[491644,3],[712293,6],[314957,2],[769621,8],[522401,7],[429623,6],[176167,10],[176453,9],[93571,7],[658911,4],[871846,4],[740825,2],[341175,2],[993314,3],[708168,2],[433416,8],[907448,10],[23990,2],[819378,2],[249305,1],[5967,5],[79291,4],[548219,1],[485331,10],[987980,10],[399398,3],[215582,10],[155235,7],[634902,10],[952535,4],[798188,8],[542727,7],[684858,6],[795930,3],[463677,7],[512537,6],[145343,7],[909779,3],[483904,1],[340757,1],[54100,1],[480101,9],[428005,8],[464749,10],[516015,9],[51066,9],[20948,7],[781177,7],[81301,8],[280171,4],[718281,6],[774641,1],[530518,4],[871656,4],[763618,10],[292465,5],[89502,8],[253363,9],[907986,8],[779244,6],[798402,6],[71210,10],[823200,9],[329378,4],[974120,2],[358496,6],[956851,4],[557546,10],[741349,4],[957342,4],[170118,1],[201021,1],[136477,4],[683223,7],[71122,4],[464891,2],[628179,6],[553478,3],[811654,6],[930565,3],[817228,9],[569388,6],[65688,6],[377736,6],[715198,7],[643514,5],[261393,1],[816556,8],[336931,6],[6460,2],[34830,5],[233800,3],[11148,9],[319958,8],[345310,7],[613671,4],[634280,4],[48017,4],[206533,7],[305930,3],[668454,8],[958950,4],[695456,10],[19519,3],[773047,2],[124312,2],[361760,4],[734309,10],[657565,4],[515003,10],[368501,6],[559055,8],[82541,9],[60156,6],[32626,4],[292909,10],[75741,3],[345659,10],[165491,5],[739791,10],[826596,6],[979781,6],[327203,7],[437322,8],[273838,5],[991440,7],[732092,4],[961765,5],[988007,8],[990293,6],[751981,2],[487199,8],[56381,10],[23934,2],[531211,6],[236424,7],[158511,2],[906571,4],[142358,6],[67966,3],[2130,3],[125909,8],[687120,4],[952600,9],[201604,9],[263209,9],[18565,7],[311317,6],[508800,3],[705514,1],[538196,2],[516158,1],[320030,10],[36964,1],[401925,10],[979095,7],[318252,3],[173638,7],[106110,10],[218067,4],[712025,9],[660411,2],[154059,3],[741077,7],[837048,3],[313603,9],[861908,7],[951865,9],[847473,9],[328323,8],[917535,4],[28536,2],[80961,5],[964889,10],[857104,6],[199839,10],[796015,4],[709662,8],[310040,1],[209760,4],[83426,6],[804606,10],[814556,8],[81161,9],[497882,8],[284875,5],[734477,1],[632105,5],[529298,4],[134553,5],[125966,3],[437016,3],[956297,8],[702652,10],[569159,7],[882433,4],[850156,10],[753373,5],[275962,3],[874220,10],[61784,5],[492861,9],[750444,10],[560868,10],[477012,5],[371786,3],[969241,6],[271502,4],[837020,5],[485998,1],[624603,4],[966322,5],[462445,7],[529713,4],[124458,2],[291052,1],[908209,5],[133559,7],[521732,9],[653205,5],[339607,10],[705169,1],[745960,10],[850787,1],[808641,5],[433848,9],[671249,4],[946988,2],[173918,6],[624840,10],[10097,7],[32259,5],[547503,7],[797252,2],[188296,9],[61271,8],[480369,5],[89079,5],[806123,7],[151443,2],[366727,2],[914349,2],[364788,5],[338902,5],[553325,9],[589919,2],[158646,2],[9013,1],[722147,6],[900954,2],[377035,4],[29131,3],[977570,1],[919556,4],[802344,2],[163235,1],[368272,10],[751932,6],[404334,7],[59957,7],[492165,3],[500349,2],[429589,7],[781474,6],[530100,7],[44264,10],[865127,1],[731062,6],[473354,5],[704337,10],[241493,6],[347310,5],[200,4],[158240,2],[66522,9],[392458,6],[299464,3],[834357,3],[597271,9],[421014,7],[123648,7],[22146,1],[418782,9],[815420,6],[541534,2],[890637,4],[257688,5],[789286,10],[9800,9],[623846,7],[350829,5],[250224,1],[271216,9],[850505,6],[693148,10],[979960,9],[259588,6],[804179,10],[836801,5],[912518,10],[680116,10],[750245,7],[890708,9],[24565,10],[986254,1],[951403,7],[848921,9],[667140,7],[739316,8],[376712,5],[73561,7],[966150,1],[644323,9],[321160,9],[871144,2],[162797,7],[386008,10],[781054,6],[893693,8],[954552,3],[613870,5],[451364,6],[59616,4],[914492,2],[354671,10],[182307,1],[351260,9],[318024,9],[294737,9],[266029,2],[530912,4],[16794,8],[477186,10],[976228,7],[971922,10],[739871,2],[145210,8],[915284,3],[40998,9],[657307,4],[399079,9],[352690,9],[285820,2],[475749,9],[100144,9],[788838,2],[985494,7],[272478,2],[636314,1],[116344,2],[939953,7],[120997,6],[67829,10],[8120,7],[771751,5],[695173,5],[223073,3],[43129,7],[994517,8],[201516,4],[884451,7],[574827,5],[730925,1],[448460,2],[557674,6],[812893,3],[861821,1],[448514,2],[289690,9],[883865,8],[989300,4],[531025,2],[309714,5],[254960,7],[825622,10],[177948,4],[545663,9],[638956,3],[186183,2],[568627,8],[231885,5],[884797,6],[597505,4],[984853,3],[418784,2],[617141,1],[381924,8],[167507,9],[159354,1],[203629,7],[121552,3],[426742,8],[881708,9],[658650,7],[244344,7],[265059,10],[265388,3],[179016,6],[441776,9],[818931,8],[313408,10],[782625,9],[374898,9],[19878,5],[125010,4],[231141,5],[351209,8],[496504,3],[624996,4],[974222,2],[530960,1],[208434,4],[391774,4],[163578,7],[135271,3],[111876,10],[249689,4],[679849,9],[145538,6],[281309,10],[192313,3],[878388,10],[413911,7],[944386,4],[678285,10],[364159,1],[822046,8],[446966,8],[183689,3],[368406,5],[320567,1],[820234,2],[227917,10],[220672,9],[236059,3],[616481,1],[453574,4],[202567,9],[101948,3],[226226,3],[330830,4],[535421,2],[559721,8],[746669,2],[243866,5],[56363,7],[211720,9],[33915,6],[373755,1],[601626,8],[794137,7],[61025,10],[845962,2],[453008,4],[533223,4],[383344,7],[325958,9],[598044,9],[617191,4],[613142,5],[546714,8],[40598,7],[422853,8],[16728,6],[372723,9],[143676,7],[586403,10],[404762,3],[732787,3],[368667,9],[623881,1],[573536,9],[605030,10],[819024,3],[120433,3],[216955,5],[456518,2],[410466,10],[157916,3],[467475,10],[241972,7],[272287,7],[334445,9],[204373,9],[631260,10],[830044,8],[239062,4],[9625,5],[100231,9],[185469,9],[458713,2],[820607,10],[869447,5],[294485,10],[616560,10],[65501,7],[870625,3],[769050,8],[413157,5],[223916,3],[222462,7],[253643,7],[455914,4],[873721,10],[447544,7],[65589,4],[70695,10],[108946,2],[779770,2],[194840,8],[789409,3],[207881,1],[704941,7],[651403,8],[512012,7],[267118,4],[962364,6],[250598,8],[991152,7],[890176,3],[564571,3],[23284,3],[170572,5],[409412,7],[926174,5],[906603,7],[760338,7],[861225,5],[349772,10],[831932,10],[425978,1],[571944,3],[733097,6],[433309,4],[761870,4],[131089,5],[696502,1],[959552,5],[664923,8],[781255,4],[700380,2],[94652,10],[201238,5],[305613,1],[190330,6],[695049,6],[916742,3],[143738,9],[344916,6],[559892,5],[787278,10],[847152,1],[170068,6],[42343,5],[723060,8],[535781,3],[821744,6],[863008,6],[310160,4],[847929,10],[25416,4],[456387,6],[691382,4],[975187,7],[765287,3],[986418,5],[802471,8],[62649,5],[883195,1],[26398,7],[808882,2],[578597,6],[385814,4],[952485,8],[40008,10],[892213,2],[513962,4],[696756,7],[119824,8],[621177,5],[153982,7],[519594,6],[255808,3],[507561,7],[832872,3],[384642,8],[667046,9],[562172,10],[639541,2],[184985,2],[78040,10],[179199,3],[806423,7],[950511,4],[636650,3],[246417,3],[568366,1],[693189,10],[919367,4],[415386,6],[116413,9],[362280,3],[534993,10],[843450,10],[185087,4],[33944,3],[711251,5],[162890,2],[201342,3],[929754,2],[835899,10],[94920,10],[545524,6],[854106,1],[130466,9],[869940,8],[216318,1],[522519,10],[518025,9],[993938,10],[869604,2],[749141,4],[751886,3],[417534,1],[604190,3],[260898,4],[133088,9],[733433,5],[777491,7],[760272,5],[854053,2],[151299,5],[122300,1],[842000,10],[941073,3],[291623,9],[286881,3],[717671,5],[572295,4],[244459,10],[696568,4],[593334,7],[423432,10],[609154,7],[20449,9],[794685,4],[498703,9],[321722,9],[94997,5],[606032,1],[959046,4],[987884,7],[391911,2],[861505,4],[167260,9],[722662,3],[82645,6],[249748,8],[400530,1],[207758,3],[523522,7],[994607,9],[684601,6],[32885,2],[906734,6],[745920,10],[734314,9],[762199,2],[193370,5],[305746,1],[426028,6],[880785,3],[859458,2],[177878,2],[107922,5],[204110,2],[598436,5],[934524,8],[632821,9],[686453,6],[209195,7],[805377,3],[216625,9],[380596,1],[277237,8],[536447,2],[398213,8],[22467,7],[82802,4],[654448,9],[748668,5],[28078,4],[749315,6],[676001,8],[503204,3],[539991,6],[623833,5],[163749,6],[567690,10],[562550,2],[509420,1],[126389,8],[472531,8],[949948,5],[980622,7],[544336,7],[6283,8],[447349,9],[818419,7],[932078,3],[986467,7],[712798,5],[772435,10],[594749,7],[798066,10],[475775,5],[187144,7],[249717,3],[663977,4],[964054,10],[502103,5],[108552,1],[56497,10],[907873,2],[646351,2],[437479,4],[99295,2],[219091,4],[254611,3],[780152,10],[267719,3],[32904,8],[520134,8],[723112,7],[787247,4],[636679,8],[151804,10],[89830,6],[900196,7],[128481,3],[752421,6],[855716,7],[115675,3],[565177,6],[354277,3],[604229,4],[428446,1],[475555,4],[851413,6],[297261,1],[248696,5],[609307,3],[732570,10],[690878,4],[254617,2],[542736,8],[895347,5],[737140,4],[637471,5],[956431,5],[975772,6],[453959,7],[553040,8],[137701,3],[854084,2],[103455,4],[623878,5],[220339,1],[543221,3],[840533,9],[657525,7],[203266,3],[489313,4],[394733,2],[329666,9],[235210,5],[707504,5],[129329,7],[443348,4],[240748,6],[744404,1],[454201,3],[639032,9],[815926,4],[308109,2],[372819,6],[168311,5],[19457,9],[882258,2],[478067,3],[863822,4],[605806,8],[144479,4],[315322,6],[56496,8],[609385,6],[95156,7],[139143,2],[135129,9],[933030,7],[135788,8],[958645,7],[209885,3],[29104,8],[926988,2],[383734,4],[620895,4],[877001,8],[838609,8],[87413,6],[884585,5],[878056,9],[114981,3],[463881,5],[519081,9],[131069,7],[866779,1],[841338,10],[644789,3],[742007,2],[606373,4],[751019,1],[431028,3],[106578,3],[519737,5],[769698,5],[570137,2],[944126,2],[916403,8],[362289,9],[322911,8],[693924,4],[665052,3],[167729,4],[302927,5],[541575,6],[89594,10],[387392,4],[185407,3],[103088,1],[80150,4],[498071,8],[616583,9],[862676,6],[994037,4],[611445,2],[107333,5],[718966,1],[435894,3],[907256,6],[265808,5],[243433,2],[883506,8],[266367,8],[40208,7],[903983,1],[733349,10],[244578,9],[9274,7],[408588,7],[733523,7],[247461,3],[736809,5],[452027,5],[350141,7],[913396,7],[306320,9],[572213,6],[116143,10],[811557,8],[578741,6],[138671,6],[649250,7],[309664,7],[196418,10],[101653,3],[216506,10],[667535,1],[249433,10],[111912,8],[292377,7],[629351,5],[208307,7],[781130,4],[186475,1],[318278,7],[623799,6],[628019,10],[857968,10],[766903,4],[526977,9],[768207,1],[18165,4],[367794,4],[10725,5],[823132,9],[797114,1],[455831,10],[447348,4],[770513,8],[114240,7],[748184,10],[197883,2],[552580,10],[931360,1],[737515,5],[900445,6],[317983,3],[661500,8],[354820,8],[805287,4],[773189,4],[193697,6],[810332,10],[99872,10],[263604,3],[712227,5],[738722,8],[177962,8],[421342,8],[427899,7],[656424,8],[155819,2],[903879,2],[526697,7],[453738,2],[585642,6],[209075,1],[656610,5],[335769,8],[27831,5],[162508,4],[346780,6],[76787,2],[477776,10],[538855,9],[889184,7],[73337,7],[370043,6],[246968,1],[118427,1],[829707,4],[709880,2],[364280,8],[601419,9],[383188,2],[232623,6],[465534,5],[840171,2],[687716,9],[235097,9],[703328,2],[565150,7],[99428,1],[867846,9],[701640,3],[391025,3],[58834,5],[318889,1],[129448,8],[252348,4],[737441,9],[211399,5],[247517,4],[488906,10],[911589,9],[789408,1],[365906,7],[636003,7],[398902,5],[400929,4],[471766,8],[537744,2],[357078,9],[604331,7],[35071,5],[862723,8],[891970,5],[329052,3],[217837,8],[45968,10],[511967,10],[103260,2],[167935,6],[792249,10],[328559,8],[42275,1],[937168,8],[858591,5],[574799,6],[998872,10],[426997,3],[28115,2],[879652,5],[752024,8],[937829,10],[108975,7],[307616,2],[176139,7],[883323,8],[163376,7],[591665,9],[707217,9],[908334,2],[532108,6],[180663,5],[644892,1],[506088,10],[689073,2],[725737,5],[957432,6],[647057,3],[835362,4],[937906,7],[817856,4],[816458,6],[204824,2],[229392,7],[480651,4],[853704,10],[930593,5],[25386,5],[438888,5],[333003,1],[425109,7],[615313,1],[872914,2],[923432,2],[608296,3],[111323,4],[148524,1],[588154,10],[883964,5],[170298,4],[423173,10],[835324,1],[737416,3],[3544,5],[980925,1],[863749,8],[598729,7],[373283,2],[396439,3],[528250,4],[174493,8],[250254,6],[686441,6],[771316,7],[823212,7],[270035,3],[836194,1],[844929,2],[73724,7],[111927,2],[656210,8],[567708,2],[531085,6],[648097,3],[224243,10],[24233,2],[413116,8],[25518,9],[184091,6],[416549,8],[930593,7],[183578,6],[757670,10],[354385,1],[828632,9],[190742,6],[240490,1],[190501,8],[881526,2],[313010,4],[201512,8],[612005,5],[206867,2],[208773,10],[570547,4],[636962,9],[551662,8],[270340,4],[978031,7],[761366,8],[290590,10],[959630,9],[365187,4],[197375,3],[113871,5],[898034,2],[920875,10],[785079,4],[169493,8],[748549,7],[498766,9],[882215,2],[856032,6],[339954,5],[567205,5],[768315,5],[581147,9],[410072,6],[782097,3],[134090,1],[539030,7],[709771,5],[829003,6],[370535,3],[153564,5],[27861,5],[814685,7],[503131,6],[623903,4],[384292,9],[163679,1],[102010,4],[578779,10],[853003,2],[516320,6],[353873,3],[129978,7],[802969,10],[32344,3],[2147,10],[22825,5],[213436,5],[466657,10],[919653,9],[645746,5],[308954,8],[420673,4],[457066,8],[342597,7],[517432,6],[239769,4],[478862,5],[49473,7],[176737,9],[575564,6],[126595,2],[595824,1],[521834,4],[182944,5],[31311,6],[337264,7],[485200,4],[97502,3],[745700,5],[64898,6],[539081,5],[83226,6],[695760,6],[887220,5],[53665,5],[983489,9],[521451,9],[289301,7],[830337,1],[335013,4],[602806,3],[578385,9],[993163,4],[791341,7],[613332,1],[256665,1],[12197,7],[560986,5],[745284,9],[704857,3],[57457,9],[533346,6],[953,6],[652034,5],[328103,1],[396325,8],[14125,7],[566742,4],[495158,4],[909562,2],[343030,5],[107296,4],[772346,6],[752626,10],[363152,1],[517277,5],[818169,4],[340551,3],[352402,5],[865317,5],[15045,3],[176597,2],[878416,3],[855135,7],[750871,7],[105782,2],[670969,4],[408234,8],[639357,8],[171319,7],[619514,7],[193057,7],[806224,10],[907693,2],[490665,4],[62834,7],[806231,1],[103171,6],[924656,2],[640778,7],[6289,6],[766446,1],[458236,7],[535322,3],[62386,8],[324269,2],[302849,4],[900166,4],[306964,8],[445180,8],[916055,7],[787547,9],[184619,10],[979205,8],[653712,1],[189621,4],[461799,2],[860680,4],[492143,10],[250835,1],[81226,3],[285572,6],[640150,8],[509316,7],[993302,5],[591959,2],[567922,2],[445220,10],[555313,2],[155147,7],[246225,4],[976991,8],[538811,8],[73672,10],[396801,9],[532592,9],[5895,6],[260735,1],[332813,4],[654606,3],[626701,3],[540334,10],[2010,5],[913753,7],[841496,2],[223801,4],[513402,5],[195008,7],[607762,9],[702449,1],[753763,4],[234461,5],[796370,7],[932044,7],[996872,1],[469143,5],[520420,2],[877355,8],[228618,1],[421333,2],[264878,1],[823288,1],[62614,1],[883088,4],[455206,7],[318688,5],[313905,6],[224641,5],[432954,2],[726043,3],[530532,1],[738501,6],[628333,7],[211666,7],[358366,8],[401699,8],[817536,3],[419974,5],[259844,10],[242877,8],[854833,6],[118165,10],[689527,6],[981709,7],[123733,9],[422376,5],[671535,8],[614521,7],[724979,8],[779497,3],[981718,8],[477722,7],[864587,1],[527361,4],[429776,2],[653545,3],[837174,6],[434707,1],[600404,2],[43916,2],[598683,9],[727893,4],[990453,10],[144913,6],[532779,7],[449200,10],[854243,5],[832842,5],[381215,8],[399848,5],[214425,9],[502067,7],[893417,8],[239524,10],[965353,9],[484344,4],[33163,9],[53954,10],[636418,8],[769653,9],[856694,6],[542011,6],[829051,8],[173838,10],[316343,5],[741385,5],[885619,7],[570194,3],[312401,7],[757904,9],[466446,7],[708023,4],[608262,10],[146787,2],[571364,2],[954916,4],[371339,3],[329688,10],[793521,10],[607609,5],[444947,5],[9851,10],[705842,7],[26986,3],[119261,1],[643676,5],[485513,8],[226005,8],[668780,7],[647747,5],[39922,9],[78510,10],[663227,1],[24714,4],[536298,8],[548042,10],[85710,10],[644836,4],[992694,4],[803892,5],[426088,2],[457975,2],[288473,7],[491632,3],[936374,2],[688738,7],[519855,3],[897818,6],[514767,6],[941032,5],[4776,3],[961068,1],[744896,9],[350743,1],[161030,7],[696262,1],[805763,4],[828103,9],[44890,9],[612501,2],[583704,5],[70799,10],[302243,3],[130534,8],[916145,1],[456435,5],[1103,10],[342171,5],[782871,2],[884587,10],[286142,6],[952569,6],[284796,1],[375437,4],[26290,8],[81865,1],[91983,7],[24505,8],[813785,3],[676452,1],[496511,4],[704582,6],[942075,10],[300995,10],[69715,6],[983889,1],[752399,9],[758486,2],[270380,9],[895312,4],[333721,5],[355542,5],[470195,10],[284357,1],[803972,7],[710845,10],[695726,10],[424255,8],[232908,10],[510486,10],[374831,6],[982844,3],[944070,6],[519199,7],[505353,2],[844773,8],[993044,2],[802725,5],[791123,1],[730862,6],[558237,10],[56277,5],[45892,7],[958646,8],[663606,7],[667945,9],[661338,9],[287413,5],[931223,4],[454840,1],[897208,1],[398656,7],[693353,3],[579050,3],[537407,10],[796601,10],[182130,6],[48714,6],[871415,2],[955605,1],[164371,4],[193171,4],[172780,8],[458166,5],[652166,6],[846496,3],[306900,10],[212344,6],[176744,9],[288453,6],[8033,1],[132420,1],[495036,8],[9133,5],[519290,6],[776270,4],[296607,1],[974171,3],[255710,9],[26050,1],[464828,8],[458223,3],[249482,9],[854857,9],[88646,10],[365300,9],[956854,7],[813225,6],[404926,5],[790685,6],[531864,7],[572365,1],[552931,2],[893064,4],[926604,9],[539150,1],[237265,8],[216448,2],[923122,8],[361581,8],[800648,4],[514095,7],[70977,1],[305152,2],[616716,8],[283354,3],[606830,10],[702621,7],[557228,9],[913817,3],[380075,10],[743441,7],[123453,7],[753681,1],[680841,4],[432941,7],[574733,7],[718523,8],[390362,7],[768960,9],[375528,1],[378031,3],[746769,4],[325640,7],[655067,1],[471958,5],[105742,3],[373363,5],[680392,10],[405523,6],[79481,9],[902892,7],[911739,9],[843943,7],[201982,1],[852245,9],[697354,9],[504604,2],[102748,2],[241054,10],[982321,10],[364823,6],[155690,6],[413043,3],[83157,5],[101425,6],[310220,3],[483739,1],[172572,7],[557552,6],[794986,9],[558418,10],[821701,2],[312703,2],[455079,6],[682449,6],[359651,10],[55141,3],[529983,2],[520395,8],[366598,7],[797664,4],[517349,6],[514662,5],[393041,1],[364718,6],[460369,4],[847962,3],[799968,10],[359025,10],[900991,7],[964830,8],[554231,8],[602394,4],[534045,5],[382122,6],[766867,3],[865671,10],[724998,1],[553537,5],[186193,4],[769928,4],[427037,1],[738101,1],[639388,3],[432376,8],[550824,8],[241725,1],[933793,1],[866904,5],[143668,6],[54776,2],[260165,10],[132593,5],[401429,2],[903457,3],[998132,4],[567008,5],[184600,1],[904106,5],[846341,7],[385363,2],[171855,2],[835050,3],[151157,9],[154450,5],[145306,4],[878681,8],[304868,5],[948954,5],[523274,10],[248500,2],[406126,5],[216460,7],[409753,4],[810078,1],[251323,4],[954518,5],[60229,7],[397313,8],[111479,10],[39024,6],[621355,1],[693466,9],[130412,7],[699438,1],[616754,2],[897477,1],[473166,10],[986967,6],[209393,6],[68373,10],[218541,2],[240651,5],[964759,6],[605564,7],[290941,5],[249327,7],[833830,2],[75664,7],[568991,6],[241987,2],[81728,2],[53433,8],[978192,9],[884509,9],[412913,1],[822478,4],[247844,3],[332083,4],[694609,4],[280580,4],[701625,9],[869942,4],[633851,5],[521328,2],[481994,2],[781420,9],[466996,7],[226268,8],[18295,3],[879602,9],[354426,4],[542307,6],[134460,10],[327354,9],[889068,1],[475963,3],[294016,6],[286634,9],[21576,3],[445386,6],[300290,7],[734593,5],[6791,2],[516594,4],[465262,2],[369848,8],[837792,4],[84612,7],[371642,5],[974780,5],[519399,1],[647228,10],[817262,6],[255324,6],[342099,8],[923963,4],[702338,8],[931042,4],[23758,5],[634258,2],[795694,9],[724926,8],[261195,1],[147869,4],[339476,6],[440140,10],[688614,10],[234317,7],[795398,5],[416923,2],[241330,8],[574941,9],[387643,5],[289924,1],[608907,7],[655713,4],[130135,2],[525864,7],[391765,7],[57098,4],[391189,4],[999607,9],[732523,6],[722709,6],[802316,1],[588679,10],[590549,8],[680730,6],[709062,7],[776501,2],[770336,9],[654290,2],[383180,9],[540736,9],[931698,4],[459754,6],[612688,3],[758942,9],[103138,6],[515667,10],[940720,4],[886597,7],[192274,10],[68940,4],[23462,7],[854668,1],[760663,10],[955417,4],[121715,2],[802294,8],[665500,5],[412827,1],[589529,7],[524888,4],[291292,9],[344452,5],[539092,1],[465425,8],[835207,8],[896846,2],[170768,8],[902607,3],[457278,8],[770748,2],[142198,7],[575686,9],[178982,2],[565007,10],[405717,4],[513321,1],[742607,9],[513166,1],[936759,2],[89941,3],[961934,4],[710414,4],[960442,2],[768819,7],[706526,3],[922490,9],[683177,6],[110993,4],[493160,7],[158569,3],[982941,9],[907697,7],[398267,7],[86131,3],[930637,6],[571182,6],[76640,10],[193422,8],[391145,2],[909609,3],[202972,8],[292808,9],[818635,9],[283847,1],[498555,2],[929246,9],[701471,9],[387585,3],[657380,8],[328528,4],[686958,9],[127717,4],[489462,8],[346219,1],[283894,3],[129833,6],[134275,5],[818972,7],[293977,10],[691284,4],[428873,1],[555127,4],[329343,1],[970494,4],[60183,10],[992359,1],[390344,10],[101735,10],[225924,10],[834599,3],[80685,10],[806940,2],[44000,5],[558753,7],[169380,4],[479257,6],[596415,6],[276265,9],[951906,3],[891196,8],[289726,4],[148417,4],[769913,6],[891741,5],[127843,10],[794680,10],[444677,2],[592031,4],[307063,6],[282432,3],[384094,8],[372522,2],[451577,5],[702370,5],[299626,7],[27230,8],[288210,4],[47009,8],[403626,5],[556628,6],[724791,5],[153318,2],[549499,7],[269879,2],[299679,4],[963148,2],[203494,8],[753345,10],[170426,10],[486147,8],[238637,1],[930166,9],[855471,5],[245120,1],[636910,3],[306172,2],[535889,9],[778735,9],[941055,8],[788004,8],[978659,6],[345210,7],[955781,2],[361721,2],[455212,3],[64771,9],[625644,8],[372283,7],[474039,1],[144702,8],[879362,2],[19573,8],[932034,5],[741395,10],[240550,3],[370822,2],[560099,10],[904094,1],[603743,7],[258454,7],[157803,2],[9190,2],[44141,2],[685577,7],[102378,3],[84493,6],[530208,3],[477986,9],[865688,1],[275126,5],[436395,9],[479012,5],[462759,2],[616488,3],[750584,10],[307255,4],[460471,6],[188654,5],[585829,6],[692628,8],[760310,9],[169,5],[95100,5],[886441,1],[127589,2],[178678,8],[914507,10],[499286,4],[808800,8],[387888,9],[418963,1],[230185,2],[943634,5],[648663,3],[243233,1],[706769,6],[716835,7],[466646,4],[707767,9],[353556,9],[909490,10],[682961,4],[755898,7],[292865,7],[427987,7],[280004,6],[125319,4],[923274,1],[763039,6],[996854,6],[333342,3],[556407,9],[368486,10],[418814,9],[546365,7],[110557,4],[287031,6],[27489,3],[347855,7],[372826,10],[761705,7],[224123,5],[355671,9],[995433,7],[722787,3],[688972,8],[420134,10],[926743,6],[691442,3],[674943,7],[319692,5],[886615,6],[735070,4],[525437,9],[24886,3],[825797,6],[61035,7],[524998,10],[723604,4],[200542,9],[818853,4],[813554,9],[758515,2],[187950,6],[301966,9],[978371,6],[563130,1],[104056,10],[851337,4],[718357,1],[547136,8],[889109,4],[227884,6],[436451,8],[594437,9],[884687,6],[910337,6],[538812,6],[584304,7],[871215,8],[861868,4],[763410,1],[608198,4],[712393,3],[427989,3],[85919,10],[661624,8],[768392,10],[42312,7],[116093,4],[747319,9],[828166,8],[973124,3],[229125,7],[832665,8],[512984,2],[888784,9],[766027,6],[324647,3],[136128,1],[369746,7],[856944,3],[211652,6],[482965,5],[529088,2],[446063,1],[842023,3],[817441,7],[861027,4],[997920,7],[667579,8],[768302,7],[725625,6],[92724,5],[552259,7],[87757,9],[845669,5],[249471,3],[279642,5],[998175,4],[140366,2],[446715,6],[963427,5],[757086,7],[827673,3],[852499,1],[843794,1],[304716,6],[68709,3],[864711,9],[41008,5],[3484,7],[772795,5],[441151,3],[230116,3],[881736,4],[344556,4],[79922,9],[583058,4],[15723,3],[65174,1],[954298,10],[335917,6],[408192,9],[153177,9],[858998,7],[985818,9],[102164,10],[976352,2],[772539,3],[259718,10],[626094,4],[244425,6],[146178,7],[334908,6],[282440,1],[300827,5],[307112,2],[947534,2],[619678,6],[466508,5],[222246,4],[618242,7],[98299,6],[312828,3],[164327,9],[562385,1],[83670,8],[314502,4],[650838,8],[482706,10],[378187,10],[226708,10],[834491,3],[562654,2],[767420,8],[866136,4],[656056,8],[104671,2],[716447,1],[197170,10],[504309,9],[570153,9],[63490,10],[997583,9],[413931,6],[766923,1],[55634,3],[351682,8],[185200,7],[6845,8],[786127,3],[249912,5],[751708,7],[629991,8],[974636,3],[484345,10],[968213,1],[906343,4],[101621,7],[473603,6],[862856,4],[99248,10],[256683,2],[189711,7],[343710,5],[206638,8],[676996,3],[132112,9],[30301,4],[225049,4],[65087,4],[104959,9],[524952,1],[693458,2],[161829,5],[713165,3],[425297,9],[849003,6],[950939,3],[290969,8],[72378,2],[119687,8],[329587,10],[461321,5],[15094,7],[514689,8],[374990,5],[583466,1],[423079,6],[91060,9],[394672,2],[150463,10],[46808,8],[92358,2],[555495,2],[155554,8],[227353,10],[984426,7],[195597,8],[972358,4],[497420,5],[366021,8],[682328,3],[624155,5],[535855,7],[489674,9],[690443,2],[396383,7],[831644,6],[555559,8],[37827,3],[117215,9],[647421,9],[636291,3],[70322,2],[774378,5],[472688,10],[872822,6],[44431,9],[582747,3],[911609,7],[805671,2],[428165,2],[508532,9],[709396,10],[85859,6],[833613,3],[117559,9],[615205,7],[458941,3],[387323,5],[464213,2],[717552,3],[226919,8],[795497,4],[492796,2],[859768,9],[229601,10],[80559,5],[417060,8],[103930,7],[591161,5],[911442,6],[588986,4],[716391,1],[923578,3],[571269,8],[390170,6],[161543,6],[816642,3],[332633,3],[609692,6],[814784,10],[99410,6],[203623,7],[779591,9],[801876,9],[81824,5],[586681,10],[897754,6],[815833,9],[38617,2],[904968,2],[281949,1],[328054,4],[343218,2],[994308,3],[660482,9],[250827,6],[165329,4],[396745,9],[289991,6],[600652,1],[617650,9],[171704,8],[685708,1],[354138,8],[795718,4],[855767,4],[428740,6],[322683,3],[813028,9],[342190,3],[531064,8],[433739,4],[562112,10],[806639,2],[162683,7],[764773,2],[407957,7],[908897,4],[534409,1],[835941,7],[799869,2],[180738,10],[736208,10],[127492,4],[417726,10],[199136,7],[690045,8],[869757,9],[449996,1],[720789,7],[92094,8],[247687,7],[71211,10],[178889,4],[268187,3],[17655,3],[356998,1],[710249,2],[730945,8],[13260,6],[564848,3],[299362,9],[587708,5],[126076,4],[103664,4],[573734,8],[948265,1],[492804,1],[490828,7],[545380,4],[279632,1],[345728,8],[909563,7],[237087,2],[1520,10],[293887,8],[608137,10],[561898,1],[900808,3],[107194,10],[622026,1],[570288,5],[610571,8],[807713,4],[566191,4],[128284,3],[15209,3],[988867,10],[179008,3],[84346,6],[122345,8],[919984,8],[666620,10],[734057,3],[791437,7],[243186,10],[107601,9],[692849,1],[273312,8],[283601,8],[864119,2],[191181,9],[996293,9],[318227,8],[99150,7],[813725,1],[203061,9],[931591,7],[616950,6],[533782,9],[284308,6],[897051,3],[339145,6],[583742,10],[313762,4],[411310,4],[714599,5],[614520,3],[701924,3],[509627,8],[325362,7],[240843,6],[311447,3],[63201,6],[644041,8],[553284,3],[467120,8],[633964,5],[691445,10],[398822,4],[168079,4],[148997,8],[212922,6],[644491,2],[387544,1],[728592,9],[358310,7],[266079,10],[233107,7],[451760,7],[540076,1],[609975,8],[815409,5],[676015,6],[490063,5],[469552,7],[852209,3],[154416,7],[315221,10],[550964,3],[762761,4],[450207,10],[953601,3],[146151,9],[998280,5],[781622,5],[911220,3],[171991,1],[936991,4],[746809,9],[247287,5],[403199,3],[805647,4],[911542,6],[287092,8],[187770,5],[527314,2],[114376,7],[844750,4],[323380,6],[567848,5],[493237,4],[783047,3],[115237,1],[594281,2],[76951,6],[875457,2],[708713,7],[936395,9],[878914,2],[178858,7],[384523,8],[314850,3],[83551,6],[6964,5],[401998,7],[505000,7],[178496,6],[751735,2],[429904,9],[503844,9],[164034,10],[326920,7],[543674,1],[706260,10],[148008,3],[762028,2],[180811,10],[989264,8],[714819,3],[592407,4],[231250,10],[852302,9],[251518,3],[97527,7],[196586,7],[675043,8],[125309,1],[721763,4],[101044,8],[348839,4],[64453,4],[382069,9],[50525,1],[29182,7],[578765,6],[314228,7],[276067,10],[355890,8],[504353,7],[903116,9],[916382,8],[531284,5],[867236,8],[397473,9],[581290,6],[449270,10],[374881,8],[185566,10],[998685,3],[937227,5],[333934,8],[138068,4],[593223,9],[596446,10],[478164,10],[181049,4],[480694,7],[939503,1],[832408,10],[232273,6],[171513,10],[393243,5],[145781,4],[11498,8],[545179,1],[939160,10],[625599,8],[32352,2],[824433,2],[439610,9],[710452,3],[113873,9],[986408,8],[336029,7],[405064,7],[813119,9],[121425,2],[530190,8],[840940,6],[95921,1],[463707,2],[529493,3],[260549,8],[584357,8],[532084,2],[718632,3],[253112,6],[174704,8],[691624,10],[247661,5],[737182,6],[887960,7],[227494,10],[732298,4],[984904,4],[140336,2],[175048,1],[774683,10],[780264,1],[886483,8],[575190,4],[597744,10],[105785,4],[116514,3],[238098,3],[506089,2],[977607,4],[757961,10],[947628,3],[144906,6],[53982,9],[99025,8],[819001,7],[261985,7],[26936,2],[515446,8],[879313,4],[717573,6],[700622,9],[305288,1],[649357,8],[451369,1],[259070,5],[250724,5],[763712,7],[307930,7],[645988,5],[205720,8],[565410,6],[720713,2],[66431,4],[851543,7],[589183,5],[777964,9],[817760,4],[376912,9],[13986,8],[794150,10],[284935,10],[477098,3],[914960,4],[575928,6],[234940,7],[120980,2],[141287,9],[19821,3],[463406,10],[223745,10],[497258,4],[333187,10],[469152,8],[289119,8],[223895,3],[271898,6],[72804,4],[145368,6],[800152,10],[162099,8],[399588,9],[398634,5],[927592,10],[601061,7],[454935,3],[210165,9],[681848,5],[138384,7],[732035,1],[520291,5],[811729,10],[441477,10],[835894,3],[280343,1],[55324,2],[999942,8],[867016,6],[365882,2],[385623,10],[363835,9],[416158,3],[804273,1],[984592,2],[527367,8],[356143,6],[443366,8],[332775,5],[749490,2],[511046,5],[719472,8],[590345,5],[590656,6],[978952,4],[507598,8],[296024,4],[231548,1],[774818,3],[635815,8],[822093,5],[636479,3],[505335,7],[846599,9],[583223,2],[988885,7],[882276,2],[594506,3],[749284,5],[400984,8],[241997,1],[357713,4],[404748,1],[514521,4],[623691,2],[32306,3],[704240,10],[292668,10],[668851,9],[36999,7],[516620,8],[821194,7],[150276,9],[983444,4],[484633,10],[303131,5],[491544,4],[322939,7],[494417,3],[199052,7],[207749,4],[236679,4],[518567,9],[87689,10],[642394,9],[680464,9],[306949,7],[544813,5],[239823,10],[561707,7],[177673,8],[510929,10],[755381,2],[996562,1],[566082,5],[806644,6],[308375,9],[470702,3],[859728,8],[32950,8],[262492,7],[575118,5],[97064,10],[427288,10],[26341,2],[935283,8],[77893,5],[426062,7],[364269,5],[515709,5],[306009,6],[67683,8],[532671,10],[852763,5],[250913,10],[921578,7],[202237,6],[589343,5],[547915,4],[518304,4],[209121,4],[88767,5],[790580,9],[667330,6],[63026,8],[855383,9],[331693,10],[353949,2],[986143,6],[756800,6],[512617,8],[187645,9],[879397,10],[935006,3],[943886,2],[679542,1],[299138,2],[447511,6],[104242,10],[55718,6],[945067,7],[853120,4],[736569,10],[565464,3],[650076,6],[271443,6],[330503,1],[632977,8],[800575,10],[583467,8],[621885,9],[387356,5],[265559,8],[90345,7],[935978,7],[622540,7],[501776,4],[704542,5],[940058,1],[188633,6],[464446,10],[360945,6],[519326,6],[700396,1],[654222,9],[497506,4],[620967,9],[707905,5],[242017,5],[781654,7],[746772,8],[812401,5],[821195,7],[559099,6],[693306,1],[782664,9],[607404,5],[135009,10],[469442,5],[485990,7],[932212,3],[505531,7]]))

#
# def subs(words):
#     def get_len(word):
#         return len(word)
#     re = []
#     words = sorted(words,key=get_len)
#     for i in range(len(words)-1):
#         for j in range(i+1,len(words)):
#             if words[i] in words[j]:
#                 re.append(words[i])
#     return re
#####################################################################
# Clever solution
# r=' '.join(words)
# print(r)
# s=[i for i in words if r.count(i)>1]
# return s
# print(subs(["mass","as","hero","superhero"]))

# def shift_boxes(boxes):
#     boxes = [int(i) for i in boxes]
#     print(boxes)
#     ones = []
#     for x in range(len(boxes)):
#         if boxes[x] == 1:
#             ones.append(x)
#     print(ones)
#     re = [0] * len(boxes)
#     for i in range(len(boxes)):
#         re[i] = sum([abs(j-i) for j in ones])
#     return re
# print(shift_boxes("001011"))


# def checker(big,small):
#     big,small = list(big), list(small)
#     print(big)
#     for a in small:
#         if a in big:
#             big.remove(a)
#             continue
#         else:
#             return False
#     return True
#
# # print(checker("adff","ffs"))
#
#
# def wordSubsets(words1, words2):
#         def checker(big,small):
#             big,small = list(big), list(small)
#             for a in small:
#                 if a in big:
#                     big.remove(a)
#                     continue
#                 else:
#                     return False
#             return True
#         re = []
#         for a in words1:
#             flag = 0
#             for b in words2:
#                 print(a,b, checker(a,b))
#                 if checker(a,b) == False:
#                     flag = 0
#                     break
#                 flag = 1
#             if flag: re.append(a)
#         return re
#
# print(wordSubsets(words1 = ["acaac","cccbb","aacbb","caacc","bcbbb"], words2 = ["c","cc","b"]))


#
# def stringreduction(strParam):
#     string_reduction = ""
#     string_replacements = {
#         "ab": "c",
#         "ac": "b",
#         "bc": "a",
#         "ca": "b",
#         "cb": "a"
#     }
#     flag = False
#     i = 0
#     while i < len(strParam):
#         if i != len(strParam) - 1:
#             if (strParam[i] + strParam[i + 1]) in string_replacements:
#                 flag = True
#                 string_reduction += string_replacements[strParam[i] + strParam[i + 1]]
#                 i += 1
#             else:
#                 string_reduction += strParam[i]
#         else:
#             string_reduction += strParam[i]
#         i += 1
#     if flag:
#         return stringreduction(string_reduction)
#     else:
#         return len(string_reduction),string_reduction
#
# # KEEP THIS FUNCTION CALL HERE
# print(stringreduction(input()))
#
# def is_palindrome(string):
#     left_pointer = 0
#     right_pointer = len(string) - 1
#
#     while left_pointer < right_pointer:
#         if string[left_pointer] != string[right_pointer]:
#             return False
#         left_pointer += 1
#         right_pointer -= 1
#
#     return True
#
# def reverse_string(s):
#     return s[::-1]
# #
# def palindromic_substring(str):
#     palindromic_substrings = []
#     for i in range(len(str)):
#         reverse_str = reverse_string(str[i+1:])
#         for j in range(len(reverse_str)):
#             if reverse_str[j] == str[i]:
#                 continue
#             substring = reverse_string(reverse_str[j] + str[i])
#             if is_palindrome(substring):
#                 palindromic_substrings.append(substring)
#
#     max_length = -1
#     index = -1
#     for i in range(len(palindromic_substrings)):
#         if len(palindromic_substrings[i]) > max_length:
#             max_length = len(palindromic_substrings[i])
#             index = i
#
#     return "none" if index == -1 else palindromic_substrings[index]
#
# # KEEP THIS FUNCTION CALL HERE
# print(palindromic_substring(input()))

#
# def PalindromicSubstring(strParam):
#
#     def dfdf(re,token):
#         ptr1,ptr2 = 0,0
#         ans = ''
#         while ptr1 < len(re) or ptr2 < len(token):
#             if ptr1 < len(re) and ptr2 < len(token):
#                ans = ans + re[ptr1] + token[ptr2]
#                ptr1 += 1
#                ptr2 += 1
#             elif ptr1 >= len(re):
#                 ans = ans + token[ptr2:]
#                 return ans
#             elif ptr2 >= len(token):
#                 ans = ans + re[ptr1:]
#                 return ans
#
#     # Helper function to expand around center and return the longest palindrome
#     def expand_around_center(s, left, right):
#         while left >= 0 and right < len(s) and s[left] == s[right]:
#             left -= 1
#             right += 1
#         # Return the palindrome substring
#         return s[left + 1:right]
#
#     if len(strParam) < 3:
#         return "none"
#
#     longest_palindrome = ""
#
#     for i in range(len(strParam)):
#         # Odd length palindrome
#         palindrome1 = expand_around_center(strParam, i, i)
#         # Even length palindrome
#         palindrome2 = expand_around_center(strParam, i, i + 1)
#
#         # Update the longest palindrome if necessary
#         if len(palindrome1) > len(longest_palindrome):
#             longest_palindrome = palindrome1
#         if len(palindrome2) > len(longest_palindrome):
#             longest_palindrome = palindrome2
#
#     # If no palindrome longer than 2 characters is found
#     if len(longest_palindrome) < 3:
#         return dfdf('none','cyot71w329')
#
#     return dfdf(longest_palindrome,'cyot71w329')

# Test case example
# print(PalindromicSubstring("hellosannasmith"))


# def ghjkl(big,small):
# ans = []
# for i in range(len(small)):
#     ans.append(big.index(small[i]))
# ans.sort()
# return(big[ans[0]:ans[-1]+1])
# big = list(big)
# small = list(small)
# ind = {}
# for i in range(len(big)):
#     if big[i] not in ind.keys():
#         ind[big[i]] = [i]
#     else:
#         ind[big[i]].append(i)
# print(ind)
# #
#


# print(ghjkl('my name is fran','rim')) # me is fr
# print(ghjkl('i am the greatest','imt')) # imt


# 2661 first completely painted row or column
# def dfghj(arr,mat):
# # arr = [2,8,7,4,1,3,5,6,9]
# # cols = [[3, 1, 8], [2, 4, 7], [5, 6, 9]]
# # mat = [[3,2,5],[1,4,6],[8,7,9]]
# cols = []
# for i in range(len(mat[0])):
#     col = []
#     for j in range(len(mat)):
#         col.append(mat[j][i])
#     cols.append(col)
#
# for x in range(len(arr)):
#
#     for i in range(len(cols)):
#         for j in range(len(cols[i])):
#             if cols[i][j] == arr[x]:
#                 cols[i][j] = 0
#             if sum(cols[i]) == 0:
#                 return x
#
#     for i in range(len(mat)):
#         for j in range(len(mat[i])):
#             if mat[i][j] == arr[x]:
#                 mat[i][j] = 0
#             if sum(mat[i]) == 0:
#                 return x


# print(dfghj(arr = [1,3,4,2], mat = [[1,4],[2,3]]))


# 2017 grid game
# prefix sum cal prefix for both rows, second robot can either take partial top or partial bottom part
# so we can use prefix sums to cal minimum of both
# def grid_game(grid):
#     # [[1,3,1,15],[1,3,3,1]]
#     pref = [[grid[0][0]],[grid[1][0]]]
#     for i in range(1,len(grid[0])):
#         pref[0].append(grid[0][i]+pref[0][i-1])
#         pref[1].append(grid[1][i]+pref[1][i-1])
#     res = float("inf")
#     for i in range(len(grid[0])):
#         top = pref[0][-1] - pref[0][i]
#         bottom = pref[1][i-1] if i > 0 else 0
#         secondRobot = max(top,bottom)
#         res = min(res,secondRobot)
#     return res
#
# print(grid_game([[1,3,1,15],[1,3,3,1]]))


# 1765 map of the highest peak
# init matrix with -1 for land 0 for water, create queue with water cells
# for each cell, check if cells is -1,set current height + 1 and add the cell to queue
# def high_peak(isWater):
#     from collections import deque
#     m, n = len(isWater), len(isWater[0])
#     re = [[-1] * n for _ in range(m)]
#
#     que = deque()
#
#     for i in range(m):
#         for j in range(n):
#             if isWater[i][j] == 1:
#                 re[i][j] = 0
#                 que.append((i,j,0))
#
#     directions = [(0,1),(0,-1),(1,0),(-1,0)]
#
#     while que:
#         r,c,height = que.popleft()
#         for dr,dc in directions:
#             nr,nc = r+dr,c+dc
#
#             if 0 <= nr < m and 0 <= nc < n and re[nr][nc] == -1:
#                 re[nr][nc] = height + 1
#                 que.append((nr,nc,height+1))
#     return re
#
#
# print(high_peak([[0,0,1],[1,0,0],[0,0,0]]))


# 1052 grumpy store owner
# sliding window, neetcode soln
# def grumpy(customers,grumpy,minutes):
#     l = 0
#     window = 0
#     max_window = 0
#     satisfied = 0
#     for r in range(len(customers)):
#         if grumpy[r]:
#             window += customers[r]
#         else:
#             satisfied += customers[r]
#         if r-l+1 > minutes:  # if left customer is getting out of window remove it
#             if grumpy[l]:
#                 window -= customers[l]
#             l += 1
#         max_window = max(max_window,window)
#     return satisfied + max_window
#
# print(grumpy(customers = [1,0,1,2,1,1,7,5], grumpy = [0,1,0,1,0,1,0,1], minutes = 3))

# 875 koko eating bananas
def koko(piles ,h ):
    # import math
    # max_k = max(piles)
    # for i in range(1,max_k+1):
    #     local_k = sum([math.ceil(x/i) for x in piles])
    #     if local_k <= h:
    #         return i
    pass
    def sim_k(nums,k,h):
        re = 0
        for i in range(len(nums)):
            re += math.ceil(nums[i]/k)
        if re <= h:
            return 1
        else:
            return 0

    def higher_bound(nums,target):
        l,r = 0, len(nums)-1
        ans = len(nums)
        while l <= r:
            mid = (l+r)//2
            if nums[mid] > target:
                ans = mid
                r = mid - 1
            else:
                l = mid + 1
        if nums[ans] == target:
            if ans == len(nums)-1:
                return nums[ans]
            else:
                return nums[ans+1]
        else:
            return nums[ans]
    piles.sort() # binary search
    print(piles)
    min_k = sum(piles)/h
    min_k = math.ceil(min_k)
    print(min_k)
    if min_k < piles[0]:
        while sim_k(piles,min_k,h) == 0 and min_k < piles[0]:
            min_k += 1
        return min_k



    while sim_k(piles,min_k,h) == 0:
        print(f"min_k {min_k} re {sim_k(piles,min_k,h)} ")
        min_k = higher_bound(piles,min_k)
    return min_k

piles = [110584993,678677526,365233896,500349133,321855969,908948962,443608436,692383846,579550790,82970504,491902151,994871672,423934352,360385578,599761257,248292492,711586417,86318252,513987703,682875968,521044914,609892846,720042387,516809231,287516931,250345464,66320053,874012997,314920532,395111368,879789400,651409451,676420602,684397255,575139416,280565041,107208465,340375787,616774967,379060211,244018331,28013211,265869551,759732099,369619727,656464649,337716955,497069948,559968092,163931898,36801883,190798207,916415622,19643790,267705737,200307888,273424043,189725520,113509031,511081802,510096463,292599261,406149678,188257910,213008050,493365648,956033372,650970345,488287210,550651348,437664245,352192065,376122043,632427302,35229660,495577039,112307863,785267545,494163113,262951660,250391969,823323888,184219041,226061605,947190295,607447811,286398895,223019053,704990225,823648730,975249081,244516786,410937649,928706270,708386968,839870557,449509483,257019794,144839217,303391226,770647241,687924557,305820178,130732381,383648430,451765242,550337826,588394699,115176003,624103273,435063873,953709081,205885894,656133461,665229494,904036633,976241096,735518577,525316836,954836241,489314894,756639503,404937002,404305997,368833878,417948101,996578993,639864930,130492027,680487462,336366664,873337101,201889059,125622260,53529506,311320676,648666440,485345882,722507696,229534256,157020696,790111722,288718407,992545487,992043363,538217010,498949595,457391865,426580376,88563879,217901810,545821506,274622603,864726762,608595915,658693107,548145197,385837764,523028705,230500837,227052811,665199175,179732862,918013147,670836212,35592648,577837797,349038119,858574924,527195363,736690191,3793087,306283229,799419532,190500526,288972536,915514962,669936626,148051447,998531528,350228413,816925771,798193177,2073468,69307544,19402044,436625168,882918834,422679586,940693524,797212480,228372067,475058587,671888546,985484962,969192315,463453465,495341985,954960392,475747815,994951859,685680543,719770382,913740759,575957202,903340493,479719625,933554190,490059578,669181836,391182149,253668047,697228346,454260444,990896408,834524267,349674072,962626287,274537373,182194495,668083661,981598221,730754542,89304305,956437809,151207849,127009775,151054845,183449612,417067195,610018455,535652861,365082215,188849792,951759616,579634132,560073641,540900475,877730213,406345461,675835058,146101418,192384127,305677193,332319355,292908128,412054250,38079740,215034524,767292539,266476582,89967127,809423129,262440518,62872442,127262896,54174457,334914185,12756277,654080986,377332868,169093292,702402836,344236902,77722838,140602149,769231961,241780195,8218560,502989367,810108350,967931877,764742970,482477283,409649613,665640828,808373042,346313990,72687365,236394865,800523607,558407137,949346811,197975094,537604245,4289763,769432571,663334328,343817483,128361770,149490198,889663182,331005319,451044464,948191746,104212729,414203813,689594054,832479523,544860883,991478638,488102051,822950657,837526334,152192343,709770544,545318492,711622601,146381536,452269090,649343171,194404141,331918150,21424905,324237838,660431188,904035203,29555635,131997379,958603429,100517600,316323858,603749813,502535522,235865282,941984048,702676071,654557372,308346776,377157594,146227318,172750862,447049682,774340861,647695657,510739270,516941028,488056438,765904121,724445502,264337372,54976439,329538917,783479519,807482883,198616258,310914859,828548821,572642177,34686339,632636519,867151635,909908821,170854780,906849562,858677088,183516683,741083346,416555798,933842546,554187112,446768485,235185233,559353751,106144743,908444319,815578468,220483527,255568517,714278566,496288320,876686058,929028484,138449202,215177256,520069349,27427797,334136186,24996844,433144028,495113821,173757955,567526880,48406726,170681415,161174225,592703283,275713366,36099418,416456331,136710276,723896787,190959423,410793180,772694509,514724911,395381893,429676787,305926967,852308755,809492410,385398899,173839127,993928166,591792561,224477987,295126471,586283579,643185479,424904500,470565875,190791041,72822306,109411308,875432949,580065957,182645021,901613995,870157635,49015866,855220497,237558885,38072906,124859943,721689795,703644203,358794427,250480847,490091452,828082907,334700073,599635783,183742493,563832854,690497848,375770067,953765739,262561870,999133659,922504768,166783296,340113537,959788335,562174847,302462400,370239403,920818938,806099110,904496937,11189587,60572310,595609497,635216999,198052785,513503804,52947901,47368661,395761644,459966861,212194575,782603249,324848235,120341680,699657746,586430416,105153318,685147544,631607221,115938679,118586186,90035617,385170526,846974480,80133257,128341575,990256911,784257690,106097549,150052307,356869811,396703852,414067774,786152317,289562550,406591285,45357441,99521493,791747513,860234427,504875310,208927335,891852583,251893283,708209902,299237536,137026432,831015010,274407375,433902868,735243704,561792168,165371875,502012144,859871136,39020358,266266477,311544474,149947324,66432356,769235580,998058355,211914270,396157645,252023226,130095779,571421363,459538292,365045182,949597974,672260018,912238900,720747310,545129912,792268733,508522013,155460719,120696351,69877531,928843575,85039810,305659757,740085816,873931012,397875272,172760993,182502492,46872124,492993578,409521519,631177076,415973158,707009556,432912537,869396883,871445113,312662911,610160343,933071647,144959253,535462883,545223713,763644419,506657705,820141438,494073252,326101884,80253715,434050200,570860313,564104286,182891901,938032630,846820463,995224092,626965053,220666134,546008465,816930162,744401153,781465173,725364099,11077001,565450297,206677127,384639191,383584781,497799112,918136005,627018936,523154049,650592860,432923421,833109758,838333780,163639365,819897250,226614244,289561687,751629779,483064894,726808275,790599910,573609708,136619619,9737836,559731307,976280582,952702963,299664704,898099684,783182100,15974121,474298202,912253452,222964109,138600362,546836719,237290333,568545180,686198491,228904630,87510173,448567455,887745185,476386034,228667047,345088978,988761705,942314590,773976162,273130439,611838833,994666431,7765044,141558059,79651010,116103380,442421613,291518956,310439162,931703206,641390696,381538402,958607723,530972235,453954081,703502267,869905319,140146490,363915837,793662172,865953568,170356746,524303401,16863035,13739874,770344266,961315228,905455201,289477837,454124771,592732715,936082593,723650328,673268888,16899261,233759167,267233480,80834289,950012686,532317619,383334015,822018951,359496233,158788799,40142839,38227797,332054231,822911652,471244643,723935286,246333346,515242606,367536490,330077110,444812200,711902485,408755154,388530164,100702293,848095175,402686122,8188717,460360074,626452567,148719015,670341243,359972378,530272115,919741540,111126797,518891127,754274822,868636963,767410346,937522180,459812414,26877566,665442466,134852897,800130893,344069461,285708287,55183655,788620837,695772050,194604317,878698298,933239478,85280448,626008607,330440616,293856371,640132872,408469885,223173285,667395050,9379620,373763373,794306300,707265894,871187283,919953422,573664021,43921272,261914521,482974410,268451723,541648969,179589037,96246861,117186130,962997095,571042255,371798652,557684690,904270826,30954733,783855514,920037832,861530773,923599838,591692052,630731474,506538372,46806641,484999455,778695219,280849204,194902840,32905420,992211910,96257499,206873515,987183133,12857289,831003840,55437217,543268788,155132663,55149501,766951142,156164016,175901929,949924594,782674445,851898842,924883716,708948986,955397094,132302969,599342942,554020239,589750515,714392874,889984463,716506683,633315560,689151392,596241992,821930552,581725924,834610766,703021632,648362619,395820577,498553160,694812891,866167024,690313370,185760995,518156301,894774513,715931257,312371615,569833865,796030501,633740684,531010654,213625403,362375928,136833669,216456882,332007117,745280166,472437496,431151932,554444803,58920331,299864774,691645592,987239852,427806284,638638507,975966099,729576508,744593319,283829012,833240137,752188316,778997244,966377284,397026899,411079199,31387935,45116239,50041455,605937608,372317798,373313272,414501708,724653903,383524209,889032056,65148146,390487222,798183267,68826888,397106989,605154778,809740581,290907826,387859318,922089780,161828175,802195888,658576768,931285981,903450457,696789267,923246552,752139845,938420031,253565986,19114176,198608254,793663151,910617453,136973548,774128429,312510906,675349614,593381968,49727599,932142789,109533549,834229541,6789984,944823096,929775838,888131820,570937363,95111445,722869326,702061511,12803196,27059894,233788405,110311775,453936608,635162674,307537733,91403693,959723515,804419168,892168032,266911277,125483783,367390980,851552381,836521214,496296465,800355653,24216311,799017917,39546555,966948631,536143474,198253153,50086124,918292669,115348999,224577382,273769715,214680970,6369393,515686048,972626686,19031212,326512421,437716565,427487399,892193563,804215548,63615696,725170614,515981212,910242015,127426350,502947709,156095344,209348952,761858415,999921667,938298586,606332103,344164634,268810920,378236590,645938476,819409685,927175248,438024334,39846259,555432630,873545687,80907985,234667973,79312982,329994291,450185781,745681627,555123288,478949308,516809997,453531496,948862524,375758238,44726711,612746002,460159945,301671448,186722874,1677282,665518691,443520835,757361951,999313599,362584359,275574181,99192304,690808669,239132692,64720287,425266937,709902129,392950479,214804314,391408770,341210479,477158795,646980381,561998617,824433050,414177366,653708687,638656870,751584939,177974692,165453920,616565288,213325367,115727497,578494795,881258010,883162486,863011766,80208455,661033698,251860559,368089590,870917458,67834317,912336834,214954630,72379105,367462888,575733206,203414569,248974323,106479194,34954515,272076702,46461130,608466751,536905345,383078901,623187183,562852846,548120497,522906937,657424774,926692692,846622663,719146841,298893813,363666336,855620412,516333890,689876629,27746647,633333632,765260198,489328970,494565760,669889498,724538519,275253960,608592776,210070614,876723011,375224570,214271894,192350780,929732482,561481541,579049185,822535790,368552098,749335194,709550077,282149286,379640756,866189149,686032837,316929901,442087712,865350877,736367058,411063048,244965473,238677139,182761747,774837789,288371150,923032822,299578977,386551176,106723821,724658482,799333549,869800429,914471686,161660187,458940258,61686491,867699618,311615970,846466820,453094942,308242914,601385863,983203256,631500353,725622634,446580548,564716330,605938619,160136199,971325951,765978568,995811709,787858578,752733779,864520637,670153312,375283550,180606715,362916211,595833164,1925372,912599734,887125359,706515578,773935953,355061076,802321493,266736324,338249464,629105250,758120050,276002797,105438092,369189656,408879287,324949788,543067549,898473588,357749405,737099757,728612021,5298811,36865445,844099935,426179950,391449197,338180337,873831971,904452444,148402735,256156687,73875816,226143891,419412682,71936365,450391480,401105758,375630899,491857524,609619610,12839494,626256079,109771804,306755984,69643914,584020911,883657231,573730140,4839922,538762791,177769211,675008577,860257010,104411515,537435615,707916827,984691275,675329620,384356452,15354020,970528961,262773056,866683965,741958382,587492703,361497962,275486896,842218262,85405504,217966565,760055994,774395103,687322592,921646201,833788566,510706012,320719275,467600790,315757514,864019147,618799933,173905201,704933448,351470621,593835514,623344441,471041146,562817152,27416351,599221456,301986866,756890007,574302243,607576596,782790330,664412662,496132985,166867304,305629860,587030470,139974191,379665809,12193329,526395677,756739685,129334534,187418277,612785698,565851410,745213743,579382577,660448447,835909575,828160688,854664603,556884543,150626390,140012554,380704516,874282483,218215929,365799859,267598217,159961601,347147579,263312748,13702861,7444021,447916364,351480860,936309808,597066116,423908635,763841319,108261892,100906819,753202963,365553709,365849181,551672795,910050210,394470701,352663701,447283582,753863712,671806363,616917049,55112083,456179058,767187079,640622679,601271265,420449120,457729862,388008482,192364118,386147343,890306185,121479605,903501542,932888019,999871266,534508021,784375879,529391276,116500279,779088585,963623178,591617675,962602520,652199047,482313633,329258887,535653227,641562427,912117530,232822396,758798548,737233546,234962438,605589338,216698698,548109980,710391828,250897283,551187341,90315404,465806527,252172183,971628830,537319513,249012737,247852448,453365499,914916171,434912021,961873812,295824452,600162827,692036533,646847421,167566016,316053545,488267229,930584162,386274015,117354819,777275765,853087777,562093909,300527635,532597905,776722640,281367088,259726667,930118077,543903458,741672370,637216195,492728213,406079092,266214467,660150628,303450413,218405113,302803307,918672937,357868,581110813,780905967,968790082,838632954,857812809,638018240,241137980,971919649,189693606,408761662,235527783,667616097,547151256,153360771,657168119,51187154,595488320,368627779,359586255,725925812,747937676,776728941,206775261,954722586,142894092,985222568,743968612,443317683,412118828,109084942,369415062,112695562,66443458,105733284,989758434,518620829,567009387,390209135,55432444,967328122,776734946,748748140,131163124,177270027,51288502,787190562,919352556,988983200,3499736,21473730,15380970,332508529,442457055,568860482,805054416,274480027,850914449,29380177,841655189,718675530,555161871,913509169,256489294,577854783,569411548,691466785,492738060,692951731,415596670,461058919,107120005,371409733,125269829,549801415,523529159,120548849,815280356,284895046,217320607,331121406,750174357,175099194,332887145,144758900,357898269,425123962,526191105,761335704,120096958,49095659,554421308,770789854,310051032,697093041,758746140,280930714,978409733,652817388,632593351,275683992,46027187,910806489,566356635,401716011,645541451,806925297,538656255,620904507,790189733,829705497,522775191,779422767,100474583,946541087,243360880,289727233,831177915,328299662,119863696,489212818,373355717,648781266,648475687,428629384,859361545,197777293,530742671,873694589,324064933,662546893,891623386,463716738,752597073,495595853,436348735,699933007,359490156,489665298,86223196,397569082,358187021,678950901,701357043,308371505,638726974,196650647,893097098,505751610,867378723,328778754,359935297,495975894,441850708,166503666,467349686,270213988,60310119,864330119,809555199,478495294,298352923,386818513,464107116,725651741,538952699,580466005,876567488,554342290,932535595,695445666,48686693,284592620,625471791,650476138,270253191,122673638,544214396,128004521,319021004,313172781,43960777,578676847,187426990,317257969,191249227,953685787,451136396,481819993,689216424,51284580,778215482,917738719,401648625,30438277,219142873,68675391,771393941,874737092,311010892,78097133,96297027,193615447,811448941,131794454,575830612,794715970,229988291,15765531,911286135,556076405,812638951,73039341,460471494,982635948,930575027,490369935,561097626,450035758,347296579,307302218,431297980,518665034,708167046,351187056,294015116,893242867,91931541,650549986,838139176,94983492,991261422,665486746,517968651,592195290,979383861,97544266,636295296,964422361,72137515,61894655,624979421,112614699,20016612,982289251,815971348,207162122,882704963,280282570,748313259,85622025,197138740,880083126,226192924,889808378,47575540,431523311,330816935,800392425,519719744,69173881,796102105,146414477,725716412,447359233,491007953,972469666,664554104,9380507,990259028,994970307,589418742,345159590,899488078,933669084,673492025,549879979,643700493,155708922,889055767,278220158,663209492,251817844,762852891,521483647,310782543,80342115,35930093,237284461,503084963,553305077,177804062,612302912,286025149,321978880,156650982,436764826,987683330,320737349,394387021,805615040,174757194,307028698,228402739,767200516,996492991,585055179,700830062,149916827,556501206,235501142,64682335,386675075,505047214,9598690,343383195,8512730,559110549,499489119,930751446,375470073,398339457,815760557,32683560,882046701,640367823,940284480,821851678,327140282,850897922,612729031,465498492,458387208,863750239,933143965,646931458,348904863,620124359,382894187,561225707,114983507,935754521,288251396,514603883,65981322,241248629,994500578,352492585,342275953,363399786,989782718,592805639,388948269,117019600,323853135,859164123,623982984,224314977,125401785,197145097,322486065,901710611,940040048,206484921,459431780,522405235,273882888,97905967,554386109,759912050,89256764,273095987,745570756,981652593,660432592,49260745,210696200,376045689,33648486,108945344,227819585,82911952,140310583,163434878,946288101,700767797,684864673,444679668,56824949,416259958,295302170,742035058,715124135,26383748,734691286,587769354,505454327,60560104,77592476,60784837,296533771,356775530,696964552,193705060,979768264,507736547,200389931,755877093,285192592,525392803,620785144,917100367,133112418,103206021,311557515,131784455,588057719,797585166,785696941,25945755,894089705,668513213,126984910,708905593,58368120,748403971,325728921,481663654,836565073,823776807,960938067,974431396,684223553,646366566,205212744,451823045,625839335,317301660,813504735,197648376,779804851,173835179,885738226,146962558,908841496,185589729,577283293,496063579,468790425,506448091,309830465,22124132,174755031,62106671,229103994,944082600,584998875,322015007,245760413,983099854,28591693,937855317,698936101,39518143,266270943,585819640,148277363,88445972,566824824,257275723,991717845,876116480,797185545,470279288,568618314,627673525,779504695,290117121,362653600,567884353,148810168,891759812,190432584,316480694,234432445,59785490,134776527,900789528,579457741,221252153,659354142,186235058,585699414,66788837,76648018,457747173,300769027,868208701,364541279,555026838,869464588,66129056,484767688,66779673,270696234,805495920,191670722,414408078,387621812,282336862,963551508,641942569,232325173,801152711,196709849,780428751,639592677,918161605,532950437,325661802,202202574,415450710,302536317,871594114,310228205,330912536,902348535,116481265,857953091,921311272,298760053,587978444,586964619,947763339,822312998,806079896,260668008,562282432,928709196,952366364,708997725,289847779,81703111,3997946,536420744,279968891,329641935,952133382,805019854,771619741,351193390,873652755,422899724,947496831,407999796,610732978,660714442,80396432,172744848,700138999,217293926,175519912,202963449,45594496,194649437,564287223,180976051,298694603,702580939,404646484,446520613,648703028,703217768,561031088,343203080,581612624,327468357,607373933,491201056,559481940,861628440,12271116,897701289,81020103,341250428,454675965,701069820,551437452,352016440,755764749,955687596,565135344,439494192,14522072,273172313,247002112,667605166,593430789,690641209,387451962,623354945,508635585,282146012,240357260,893554819,901536870,187760892,31986147,622166718,11488,104309637,686340071,134360983,803245651,402900427,707582869,342719409,345470915,994146720,604611895,717761715,125544974,371069679,970071876,208812706,152290619,246078266,20280269,914426889,147761976,228334891,960253610,396726058,852200338,351091402,591879150,522478564,869476244,699856032,733423592,14148852,673954667,450035335,719386556,722651224,733410424,785382496,854506704,868553680,380751201,346516727,687210521,284843078,462154476,174986701,532989958,822312221,265674447,875743398,20971758,150861281,621183295,395577159,800634619,730999241,423875299,761377150,109613122,252798899,756141102,576859778,796231343,791026756,94511420,930094483,816766111,225327652,872055869,539887713,981343652,277219589,545141618,671799245,199063793,512816582,114099118,19345356,88773067,920462411,926808742,272782609,696562169,539453932,142179656,492999967,348353279,951268110,721398569,231926017,90453329,715752701,550813128,928282970,439535883,170494576,192807174,692609400,868914668,743977503,988353675,140368184,960878317,483523360,913572986,223264701,109599196,350175805,19270797,551288044,815265027,904384091,500499829,598680893,940454082,661673462,726098442,26541504,429911626,500392263,961036038,791576654,623921367,209135382,842187139,414837127,108996314,829436350,98180306,805051991,438053195,252985602,281823834,882830238,481909380,724619990,500123480,482718109,13022754,561471160,784901108,178861002,258190334,911356564,169088072,345350924,84498807,801118020,889990225,243787134,906402344,263303398,156159243,318401836,785000665,910570456,360430156,429816674,558513804,812064690,668044857,82443928,342399952,404414783,876162858,868685692,875813764,412760702,381091837,759786766,12956003,619899342,98450075,64964989,576677511,7232625,694196310,290963730,402814139,27187016,282428504,819569535,882093475,243089837,768813679,581119369,226099590,33685308,682357145,10555593,461990638,896523329,721498951,419748905,72061830,466921655,592310713,324563479,666446846,774305567,364819657,175771085,119476587,249582351,313359333,949173154,546466595,990006918,234625938,741730732,816119740,124530293,71043874,205712292,763159406,328229777,877917168,248741790,144517278,769879712,860652000,94206922,963415024,418498911,234467113,913369605,905032577,923461584,874567102,829463327,799028705,614884220,315811665,860674717,83281330,322203896,398788782,993409324,825464953,784071025,353090145,60485628,827164059,270008281,55496525,984320608,814279897,192844713,804975162,48133713,847081207,501156973,121848135,408203017,515138944,724877494,564191056,424068076,451230689,14585750,489722237,907146763,286597602,941514693,169467060,832051910,973808821,371381101,620706904,276700259,365706527,64125380,937925353,148630413,183483102,708019975,882814534,937694418,975543464,321358113,343508499,424813856,220815417,3020444,939396371,357171998,680295880,894611691,900374004,239265615,5698817,422928835,69670859,146062905,329015490,751362133,61294050,337558694,566766542,324165635,976353508,582829235,176463982,557512845,835799798,865711246,494330924,456307533,895880994,55145286,274844286,965800856,90370366,256578097,657114700,182119038,832117713,556155413,282877347,33042184,296586513,24899065,918316168,490800943,813880687,675170461,626408044,602246340,318953817,941390901,872150315,760915755,403026940,115494081,734143380,912192947,905156264,133630812,338798208,966263324,556555359,896522287,927901461,80855832,434014198,409009610,652020832,403025838,97989984,220358366,261726674,333284792,892436721,986850834,78604538,222907469,211116315,667804399,706093221,320042939,932794277,838103780,733962317,495037441,970741674,859464246,765095486,493684434,705984975,989382051,205945551,306960800,627541980,846749773,744110115,916856721,727796959,690532047,486339865,436074195,852926431,813710957,535636289,342046265,354047128,222526759,208021890,776460361,13207323,424763266,863034984,274390196,218252033,375401826,769044650,271988857,673850502,153971288,20850234,785884911,144327033,911317475,316661417,270231374,554559266,399944367,915902957,83258596,99141803,531107520,825322078,95797959,394543265,525321570,933949941,440829948,886415867,732949474,585206678,747454414,259689916,902829991,902516906,840837860,128852071,783284200,449713846,281432457,611305046,289629830,50881296,936054732,789761487,882746704,836858448,849269694,317599545,968182456,906784691,656216691,292318794,784973068,194947733,454965493,262231501,569974945,823387665,999071241,337196582,920466209,98398709,504841270,452381563,621885464,180318511,555925770,252634365,331657562,989546055,567917118,764665208,67576504,510341350,574655030,72436109,842282460,986934820,587237803,399704509,633092334,576434608,104406470,576601517,995115510,153635511,882203078,699002456,246086786,680447095,850834128,564418104,252046155,496420480,807417689,729329100,577964755,989301136,893990440,935450078,944658119,61479167,642952593,246879864,742220996,428929971,342995554,380868597,956752657,653741581,724639507,694140947,490424447,424299859,134039095,934607101,656206574,604483793,866921577,928439804,812421213,294818723,167527943,228618517,846238295,341314593,983959252,479849727,41095574,191850017,344441094,867813724,339572499,518727658,277393037,997639231,837437186,178088920,901056118,321882187,481570935,95219198,807457194,245372246,988399265,225912237,428084310,952348844,56336155,281373308,857838270,626806377,748467330,813675260,360017732,563463091,247712602,725846949,4625339,737825423,898553493,991368828,634251616,536682529,323294343,109311389,771664148,296525613,642062559,550051161,822913028,406515097,87783402,53766536,800967479,413124519,917659517,930135165,264539642,663739885,335283830,365163642,760316636,287834743,82793813,218976418,353156744,121073657,188142700,194523540,616858143,351999291,897435852,278750229,647218759,756244366,39268028,822108722,319771270,123333955,64302837,220000660,445306342,631577877,458758093,496790273,321172150,401541735,752231942,660076637,984923197,192916564,383947955,872981681,835575178,803375303,752346977,107909726,325732835,690963587,164663915,90854886,425945341,569588594,217234614,778558647,409120719,375539872,686368575,553201628,990233449,625228198,728809420,975359572,789563317,555648998,573855203,81606473,496637745,362170588,748868404,735283427,351922303,664748386,656637816,485240711,314058588,89776162,615283382,514793245,413223252,16844489,970986774,378101866,265113272,959127379,760785232,766892231,510712820,550888712,942466875,886424210,998155828,624445520,991324078,697728826,468846060,907027741,459139072,843307421,556586426,519357599,738791607,496821167,151665651,64875226,90557055,835888783,904105900,530049610,893142692,858092569,895205958,766942694,545384588,37020697,349325569,816102170,139198092,840991078,402760888,265266358,114775225,456090910,305468544,775991849,29379383,110218752,729002287,752813351,333221220,873528888,527977463,575501348,586499198,222667170,685264405,810983575,849873621,473407873,664730129,959069072,545966675,207103457,67557829,408521523,324106154,65056455,614529858,536279857,152364505,485489401,71113950,600922336,397454231,880458158,810541319,778926376,150819110,849475557,56651524,618915831,774175990,647445532,582958763,149266013,852296356,933057977,64018153,469013246,106270010,920099038,467128264,600737955,696799625,786440838,519975212,159640184,440712795,605758101,399567743,564897117,727222059,218857739,684105874,414681235,130662076,204108265,696666144,198613129,756450665,831232933,613344087,609301939,494841196,744978281,381987252,679638381,277844290,251243966,278959727,146565066,780391785,596103604,49173070,354385272,283793711,979567217,146042081,130112539,820551297,850806659,748834269,499359065,791624802,475430261,975494184,175553011,235581251,689495460,685742953,272757826,149988402,772691033,835019171,206422758,383898667,798455089,507578236,744168917,229975340,777965691,998435952,328549226,184332679,564701161,466781232,548450453,167954380,259843344,926632442,754744927,663361803,663305810,354293463,427098582,311056310,102315222,852377202,281192436,7882830,406161971,528001732,193650980,963983728,394771417,226773766,263817897,525504174,954699285,704592272,113824714,762432598,665695865,616157518,306571926,228922046,178095254,534172741,759759624,92983367,537309537,562274971,694039449,724464802,577748322,702260044,190582434,132458146,372725595,527406153,910423111,740329990,392190386,780013847,610248546,15910898,157878601,414181085,481645176,504733577,726474754,889395340,864174350,76319992,584401466,243063482,459094326,882040578,473612282,942613829,656973018,972494994,287049166,850196471,100821251,614675656,374072878,799167871,628274305,592293924,83246812,429040523,969098352,34400872,302292977,559673369,40161744,382855114,427641212,90849776,436504241,687686820,657864215,304714350,588160268,89978581,596900127,249305578,415143131,806478645,537324487,875247643,91842669,245145425,959442763,839868702,32782811,858766222,271461255,684513680,368329820,819291871,275174300,850567521,984575881,953410547,725697049,718060104,133709322,506169019,981466162,411142398,820758021,215450548,361931106,358573504,412672645,354372602,65164923,447514701,850540316,775369935,805749407,962735585,960979465,157389610,465728048,402925035,587382951,686059943,662803361,222878843,579520807,437592848,427953681,580930578,403008896,182497570,38072182,750692522,903162594,436960399,622508251,890361658,285220944,933723708,478018941,253978404,873383898,407493737,238465432,721405423,696193645,51126097,216455629,695622176,942877690,237657071,280460330,437332857,799493405,255409327,187441135,782007023,927633487,879196234,339598997,599601692,919716240,7334227,887331648,681813430,254459850,80627713,792506443,527379504,389551930,672618701,759362715,356108266,332678867,460352902,309011708,783750765,709504002,687424257,735862398,172545599,522051375,607690942,99629613,579910728,289492671,408971835,833191314,735921699,318537580,631403077,834432414,83776228,268211235,373545727,197543370,665984379,992270144,663937457,335764800,936080361,820701451,142529802,310893206,853554471,436121100,345928537,786811734,353910494,781129099,497550779,38399931,585569773,104649648,365863452,640548506,862091077,151166057,325438499,652026411,582463235,727656515,508333060,539441690,951387690,997131022,491464399,889372887,116974766,143571828,891755375,918668368,96562539,838673165,524144387,652094155,176709532,552884222,117683416,190033880,118520267,102041789,768136922,206213227,492578963,128588329,313573243,880239104,474751537,17866544,194225105,58507221,586069042,699977584,272368445,362469953,946986862,167441889,63704573,704936669,967503336,654665461,761758717,780253715,463426754,534160119,490887090,98674927,655485219,143958680,639911167,268772934,474927611,536403253,758384460,570488674,22601739,856256478,356338826,949449021,65311800,256041307,170012064,382175693,105380509,468568742,155074293,963498603,21929821,188298799,247117138,423379574,140064638,744048944,56116829,632137502,184752038,454143575,666691130,428021511,25198224,755399918,827838329,228408639,706543513,604227681,753722681,717073506,114574166,891112659,410983929,978516373,31118679,988251126,610762665,727197305,121985826,573582088,946838010,172953206,265774594,305109089,917128377,979857648,820480018,168574604,973236682,199934035,744060621,581909726,300467972,381409238,38391949,741686405,279953413,857441170,349611755,233760594,493529194,71731693,16855574,795553276,487636103,633516895,768782284,955232425,32808535,696998604,746026788,408482494,860693429,615167254,760856609,15775557,31883791,625947402,398820109,856509925,157125362,156503031,280095753,178446691,993868131,98480698,939138258,106843144,372245309,59649833,136752432,902430594,709943609,398683073,439793844,617747940,65168776,471338403,455559031,688206417,443975086,797687183,414357170,474230025,598737553,104404597,7299934,569215579,167335167,330162367,250680087,882410966,182664955,937902423,510747013,433770208,83245949,196380470,685663854,849619720,675160331,773536797,361144901,122676137,831186303,937832211,841323304,587583109,367617174,172710875,513530016,375397307,412386875,738987572,591285989,782491282,818118993,573457806,577147329,105081438,644488994,986006107,757499941,439751118,717772955,382058918,182379843,168063560,119250858,114050327,666520861,33140563,657145371,751126273,454829105,180659025,76567692,311608688,178071240,117919705,356099060,855946837,554392412,142961826,477162904,601210256,468247272,919981268,719334297,530661038,238620755,680824670,701930903,597553112,70601028,602832382,740207457,827401985,818963550,557166179,112245985,591540523,876969475,842287338,734229579,525088369,163134051,603993395,325992261,184666047,980291932,656471615,214271524,764450720,661685695,487984752,173059052,104630544,677458757,809388594,529733083,96712052,799466452,258172207,479681133,748557412,92514034,855712874,706983461,511689337,26733475,814480811,559722145,392259772,856857161,695997701,819224007,356079241,696225385,733009673,698096692,911490191,846136172,560881791,358317133,38697444,29425249,94103005,212510065,2375166,890271577,498054842,437433825,716600255,197035131,446777186,806736056,122510230,84213122,246288992,819492384,929766662,730961756,78297671,19436973,903764976,345470409,391794945,515448864,777296122,892294144,826551223,824024021,802703095,436766476,921213941,846194244,933486219,973787975,621388223,528941377,54791518,916668453,4578057,900447453,178690446,265310730,655976274,232677890,477118625,380577401,623297027,894102572,982844069,384978638,533477578,668753830,47854943,832353175,199306126,172978674,943829159,91632841,721838275,958576209,509925166,932351163,569850764,856999789,674027403,879259242,600821117,84880537,24374664,763178280,31437764,722564683,823310444,901145164,734330167,626595215,389669900,152578451,505627481,53037572,209645286,356222017,130426540,428112233,412497246,301224527,731503258,105705171,392853740,783373508,832131267,860323797,50342707,683447759,229390657,367363256,188320045,827814209,748052104,907724804,513622406,682723240,628368814,208528547,722223554,256150055,386862600,991064131,888240027,798932592,392085844,880530112,930897304,58959827,481805877,959630556,237213618,354310412,860200887,286597805,963648519,556872582,35607991,825454744,916840763,125514852,593648665,971091539,854722405,445411739,984691825,531428404,228780623,983040392,626468192,386271925,917500295,135940019,634969629,887528865,850209714,447177489,556279175,681761158,54538085,16642821,617115208,329759090,701565778,923237529,74761066,840571330,726724122,891445919,260701097,275703630,41310161,110671498,405560333,572812745,211703861,169242766,386116511,215178229,814615799,965216207,726663462,599647150,932925407,481759131,163364044,174281002,60629003,753110398,128120487,151963739,550438181,859823831,122532490,454977480,275607454,332205904,440602463,899593613,279541939,642048619,909579391,493534156,989932816,486686063,516688663,799233692,1115951,441156133,379001241,45834387,217208147,647827679,395278844,751330048,276970159,886510933,524194453,845713488,127092560,684149380,780791736,481777610,988208156,668551655,82910931,536832089,432557644,181003974,732024785,142720087,374896713,987982877,111098709,574760300,15152660,466919524,303230779,207775631,962804598,486718502,744741545,957947148,810826122,112328760,512232721,261150608,90174458,922946639,329629632,760683329,357704745,241609355,538339758,657444130,43574101,690411547,522875780,375557416,730779941,76893277,630077025,466825462,87502486,124170110,591006956,361969774,152954599,151459321,428602706,762314013,813517885,718397498,333247621,719916379,693654223,100348122,361826767,188545356,595566200,98654350,105407422,963846232,693813511,141894663,767496610,53442590,727718076,726910729,846974166,215687278,185379867,222328460,4284760,168153528,160307988,269864927,274271632,446901458,521646424,55699364,725487736,963005382,809086159,329894509,7943905,173063078,772344196,288660014,550066131,335845447,587697120,10948781,879394107,875303506,754597042,325728254,783457378,428485804,481241729,31863999,712396628,442922068,652811544,946421551,654687764,656590342,79114520,658842052,377773822,959151089,302641300,244838264,735978075,931348271,924935795,774965378,74786032,597799588,415289835,646510872,96742837,110510653,768548536,831993441,812898222,658699332,313258729,413417467,309967289,103129816,865913925,584178637,473044152,398141909,177581091,283372015,232412832,402583496,843100556,334236059,197659614,71803677,578420651,664661052,393706009,54708478,367129171,728566797,736189012,484639349,386168506,539800685,861004981,573497247,208292190,238737007,196407980,712632831,811629935,586704485,733048496,661465695,533540073,60685808,175749463,91322914,147484505,266441752,842965057,808131380,187024473,403672451,871472457,956149758,44359666,883803567,133078685,293280692,397390726,507221568,170117296,497597473,10549538,614245104,57989934,416809499,354865194,74017161,525270661,42850085,338387746,862067473,501091128,429961280,710937629,831226539,305278243,960502802,567084306,531836987,578730988,239461894,13853586,634726662,231505877,861756329,696347915,888935749,484316969,186281803,979525523,111956071,306373048,986895328,739160890,805548255,796289746,375031798,45233122,189297108,520917861,188813727,88289778,395558380,854456531,290190501,879281999,7309423,134517504,167636270,234070791,167482979,741972907,775269319,472518150,800973873,408828636,299503455,85298599,10232873,785780325,424024886,276129168,840774488,828544525,455306339,269219898,78721859,980550241,278545268,234562095,924900900,149988398,668660625,897298623,68516282,387336604,278584925,64558138,235036827,266496961,835978184,2560950,235723008,930107110,432959006,206700537,761834769,790432291,80429540,803179760,378583903,944560130,434718948,835138715,506286021,572719824,299202619,173477900,222617318,237981785,114454427,323591292,746961779,479682342,252860973,675210511,774133967,392965804,453629730,437439019,207597150,403441350,628359363,177302144,172530317,614370124,713468712,313374056,140953462,300156974,737028601,27129759,848570336,553430032,385600906,912295942,686145068,185036447,581289305,185383871,713897827,379094082,7732838,706371526,434977906,599845539,891143048,353984249,423545602,728220811,305684624,489532659,311711783,639054156,645809452,109592861,503711459,376190661,359497109,216487568,985076305,371176991,325186246,194291478,79248877,743817419,429784406,228820668,72958686,416243918,830331450,688414606,434963902,760957565,766749338,938348637,446926572,18380862,274884881,257377572,242391556,727131828,732617227,866634024,693827850,595998739,297375743,281826374,79525967,611534596,885460830,303079379,365943998,519037734,718512472,156105156,260556284,345939205,996639874,7643498,123781321,746309430,849888494,213442502,284610791,120796821,751408765,201420950,235067858,573111547,289946471,618712303,465728698,371126729,92713273,179660055,744623567,7706231,938001310,206058311,304938589,785025243,298146821,824611864,312257591,511324594,470628186,849336003,926597090,275332546,417247589,579832907,325559057,900912916,322428259,29660823,650903473,304267855,976080364,802418975,936697503,955985014,34686835,221244987,966717934,941139080,234849116,825343710,516300805,972764534,990665078,977247674,543864035,891928911,140950905,628979277,78539026,425514420,430637780,583482141,352346291,510968637,207492435,957604824,848072118,460095072,165894730,592269539,769766639,723800541,588449205,911169175,414892260,58526344,240621088,971532803,88425754,917578740,238763679,779266212,225370327,824564891,892036474,867547480,827255465,499318628,640348249,604516680,577017012,538837136,192213777,969119529,172492841,579171737,562335469,61491264,875419624,726480301,811571028,404148938,652881708,541528619,990754911,977785800,356691375,156118614,923061083,113217734,994414501,540734324,857761476,561140617,368453446,142013185,726526140,838845809,116763535,932636743,833514312,629702490,312013502,184681210,779720183,457023258,145513416,199969059,743220769,108154570,625466670,214004826,592731360,785865482,90508206,137769038,799121437,172260122,538616521,900151156,484457131,375828802,222503648,321586882,336735470,189600490,894157489,988384287,846440707,993172881,319619764,917959652,735305600,513981129,95995095,610029737,193888255,666546179,77006414,664381744,652413922,337466666,459142575,187559563,520628212,902651206,420690274,360172860,360907163,882511797,7911576,498132038,178485234,44937322,764494538,588701735,24095814,624907589,962501762,337825279,60117615,419771615,976491135,255982779,876665666,138734965,758766083,755609668,435545164,299760651,934743217,353843852,948562575,844714877,527597415,74123699,793593470,886994055,733596516,229027390,772125967,741386515,500557165,854279424,511606158,490626623,747811894,480685322,139601327,174733323,606367906,771116816,364065508,266182889,201955470,890486602,858298218,64662154,916374997,988852777,245553582,595418164,808876982,994609464,509568095,116361388,327060464,72436974,998730935,873334165,325401961,523269196,725075699,140961984,223611251,762363966,151483238,333216732,579854616,692065106,877364138,250642616,980320663,455542741,139965814,184307512,822468050,310034863,828273434,329078467,273009032,223608832,246081464,19510169,978006327,229181532,311904678,948023665,426362249,323936646,328451061,264737740,998750593,276645576,514452627,316306170,291199683,423981606,447070594,850383259,163096622,190598820,769671540,57870359,944141099,448640214,387714943,987272639,950496025,813599121,792546708,96356019,960510,401776776,4522211,569951982,245620399,676333413,81345657,462373948,430060909,254029893,600145305,433516168,482099647,283427484,924413149,622330170,98714028,43765437,224118029,520333672,345442485,210973146,227379079,298473050,864842979,428349667,433899267,33166119,804260568,957033475,227335352,912877028,416320366,730982536,772120760,540850101,407061202,569237713,909826007,241089160,45664708,859866276,803428805,292957855,794378950,659074361,22162036,955154343,707975761,996910473,742101258,836019221,703245545,344515017,649616164,290510760,898322706,440262287,787833763,688029281,537617914,65114699,276324208,597788656,675577671,389612907,31368403,6296479,614906514,967517540,434018916,217328326,95132669,624808743,738980689,623877626,882301686,616580070,208464216,824135371,77918640,591626571,169335707,519775215,872871736,320439484,245864307,354369412,81044364,773749079,11668026,170430799,576642242,172708895,805307618,490416092,214578072,144393790,438885748,678716960,741407704,342323551,140946611,427900271,184265838,569693442,92090629,600016147,389415524,943207734,807242003,915938632,756345187,835832972,341452896,853124231,282202756,669410813,349687019,595567707,701375139,645878495,854122969,49666973,145283447,275154101,277100725,806711597,699639281,41169282,75879306,381135391,978591449,843512252,449303721,660237906,345457861,466071778,359399886,511179819,373576751,132601743,247509289,408177217,499217627,146777615,996781702,473725095,745824598,764504276,225325372,528846938,419258651,991048824,434888345,509909667,402367421,818189222,885752804,71753394,498257110,605841257,866977289,256986824,507167943,123541507,964577492,972436137,707757710,41917489,376744428,406741943,870894840,187488273,642203850,263645961,375097922,407687377,302610920,563475501,313929583,846690798,421594801,719407048,273132689,16824532,194795764,976391331,314724375,667811371,578989424,125397861,293298310,141514712,660871384,373720763,236607147,806560512,669251046,905496086,591857493,593540751,713481412,200405907,998624350,858039074,969762371,921491982,899127656,208828939,204035663,944295648,546051035,177987976,45713292,777303851,87117063,253737597,529031202,224716967,937395482,714471337,68214587,503565567,105022810,45897438,940935460,45115723,707522176,966326290,573359100,846101161,371612882,254652217,456491166,226169093,601242032,927090098,463306066,673430444,154157497,781933426,436884017,433577545,957430329,643327121,495624596,153085378,139728381,570900774,128440337,132403869,573789647,320909965,339395550,101451900,127698687,159488209,792518586,228455665,881025439,55252619,859095827,584358745,876540278,452354404,102557911,746126814,361001650,56920349,971567828,286807273,455634434,144334636,497335569,217143908,134820025,172470240,485907649,35775873,432239600,835600284,720456396,661395617,904302667,574474732,642435000,444534632,363617991,543444525,928894,416246126,729300726,224823507,43894671,339801395,152264193,255354874,181497067,640681804,924033786,89693151,369841399,344506048,771018052,798089797,554540300,385510737,211918685,582812335,722187802,146525662,749029020,472073986,158308006,970478419,702468832,40692540,741467377,887384434,864607380,327529654,627229689,582354206,502178197,861248953,604211798,668909054,876016676,100745739,91098142,747258496,24332220,745903302,473044437,555281529,83810514,407673595,549451128,293484001,230030307,390870907,610545394,110735836,153186256,206944514,289109460,836534314,50801579,206335959,538243779,609249039,116289610,348659287,195284541,159478275,289631007,436962237,148544647,815545942,600179860,574131652,270190553,94797608,17904719,73016644,135547129,643349173,119860312,383106847,960512899,556474190,642491490,329227553,713639768,955847186,272611771,197998942,862581450,728146611,271717275,850291522,467458353,139942603,852391187,939958623,305558658,640186619,781077755,243248590,402862791,560154691,409564783,159694041,310239040,282682289,457276744,96074061,982699786,326184385,514422994,317661882,997214814,249868411,760458585,899239482,619454022,960790522,238074144,107718966,767935821,792915310,177470040,638622274,544529193,959609176,669857639,351830275,292423567,147576447,991615075,475838558,291035353,526342282,835479985,81863998,546249309,810901389,309516278,663120492,888740677,915074978,658405191,740702092,956717267,621607625,342203679,712816033,552821744,17212805,876340613,386310600,963129771,822046634,601203699,161262020,405492032,751177768,856469841,86661992,153448378,36010520,938120287,744440537,233566527,680656910,913670569,790268626,900035111,227688113,251582330,381142099,2467046,593208101,356605265,608641909,513785959,32571315,56547684,682727533,108755995,109278838,902840657,416054981,156053379,287563956,528281977,529820556,662834890,995938684,848641986,3798580,954887294,384383931,863684587,101121726,699178227,562234406,900575376,162748178,447305392,223502326,816323716,893148425,256219260,51456805,873985714,2294886,495473760,184536755,64696851,188923406,475287171,726721129,518117175,162324272,934935030,661585762,695934142,487399385,634676491,59449996,739589040,976536218,642715336,353805413,356301195,184314251,726174761,253760668,947121792,47241213,979278917,67391478,623246520,581820065,578588930,718120344,592184529,450706582,775142554,94868688,889955779,987346192,415058938,743931696,656125390,612489711,520307394,523147499,722199658,404595816,576034031,644336941,261997993,329819941,599724018,467622779,793248889,690586,437988609,963052985,309052062,100757115,847055935,247701193,773637807,91074112,550368957,265308714,275774464,813745951,335359541,539673250,955067540,701424264,314898810,921500490,290043642,712932684,157512771,812869786,930691419,382568354,567310930,542764444,880853559,526095055,54029723,259604879,54174922,34524856,698823977,163849959,740851727,502357779,104618386,794559470,169035297,67605519,327074916,25788251,13419247,531583657,980558455,366990832,767144304,669358232,877898313,841412342,459620375,330526900,772720501,673042593,839331823,204636953,611820307,536101981,665972485,957281715,546410851,298420237,116768244,283634274,180600802,615552987,910940614,418179253,490181527,662261583,916696474,763660221,283477507,832005315,710389796,367439948,124843944,347640218,909010528,323555189,550388463,320256799,912641110,973888680,972098941,707794154,698767533,954714860,240690223,917638016,680277979,676268491,550583626,439548546,813842206,612020444,300265097,30313213,80948529,156631693,956957974,228499098,797323420,505632144,803423620,327027011,640224025,953303009,274184331,412999705,765834979,529207926,520187335,160790072,692643882,11702915,419274612,752712598,586863572,235626830,88004998,945973716,388355600,427929149,865564987,951295872,314986409,553827138,943603315,263501795,854552619,202140852,818297827,530683024,936570121,328358834,885731057,239285795,829147901,552550540,352576323,617747218,636436122,594902093,849667903,760397290,480201763,150304038,308397930,838651944,927416165,931535419,789314696,199573643,173787960,804530369,419805348,920432477,25245069,767231891,146152625,577250623,763990877,389992724,720581293,138330021,103347201,942119958,980499125,128563794,584393811,543393462,767581064,152241132,948637624,221879166,311110216,478624379,675871989,678329549,627843205,176469763,135791816,17719904,771482432,90902461,758714496,445256251,911123750,132012112,969767552,688574700,913511231,433822896,702221333,646941808,586294762,306562592,52522143,121958270,947315991,235799270,338249470,778603129,693061777,500611412,915981109,892037953,191147452,846867941,253507253,745704801,635290599,436612820,834014177,377503393,890902527,666297766,915453849,589549128,911607582,534570867,877103547,534426694,597694204,708266592,888517424,205034519,655443232,793027396,488351415,771733727,635642279,164130867,984440190,726564628,190184249,533339297,462662677,819042734,834517749,380502665,12140301,329119901,483388222,240790175,295630103,681867799,87819824,755097147,995714066,270321117,973967613,419110641,485205602,388646230,470110424,434938572,304609835,570769679,133159289,652138070,417889260,62984346,48660915,533343906,260549330,433480468,749235296,358466458,370056445,221986264,393996754,63588192,849388787,34160137,104569693,36621525,160849635,748318047,463933738,997850430,176958733,910640257,485905272,401937141,252685244,606090472,592697089,914682650,701345253,386797255,71546109,307255046,184462481,171144821,733063911,967764339,648366162,737949374,117295499,840359969,897379719,191045987,881997009,397541206,378665152,860606752,851828519,422943160,247232208,700164545,51077377,270281137,818035680,51378648,349930390,80785369,765399565,21899029,950597585,655409420,364801345,656289239,949118730,633693826,950854733,419955536,696479385,651715535,438635431,249051841,124351860,765918773,106423500,541625409,467341882,259579020,676039490,889277556,908087989,277814454,238936915,904232692,970899104,877004636,942823893,251234197,606070909,184649002,70493655,93903842,115115915,947721005,730994439,793072960,302593809,371017575,147220414,497904468,118456683,423422031,238720936,915548940,81696098,488860563,882715583,10075338,723685529,299929795,916605148,377115110,267489355,753173617,208744433,563529521,822643484,369305931,650050490,473035931,673608179,285775559,766768963,419594767,870881341,958096776,644340368,660298943,883276634,726453148,411787444,158405627,633663420,46865294,22690624,345661363,202717405,440873126,943008090,33659022,457133316,878509839,91577313,202963781,805436890,45099795,116197426,933499374,721700496,725856897,452126301,803325164,614203702,239531243,135475493,356734609,287570979,616954126,393314513,210638340,810594806,670807078,190610141,820742359,280431596,751966508,310859909,718635695,72654173,939302493,323429283,509551794,655414356,679556284,997627690,230244525,624594570,423814540,110977124,372085646,539377210,104321144,657900140,435974351,487583860,150837753,527914124,735424627,266106635,270669396,796405481,184307227,237551206,634588505,64935239,45014960,622852591,942741191,748532924,782888889,774057131,769373298,315080861,807636590,118233275,878153752,27119220,326219926,434034512,854970482,168398402,966189714,609996319,676957474,793044745,405022024,572194201,454372255,901369060,596025172,509517369,823628152,981112064,518704441,644669943,132809404,554990312,633710328,710140205,72661250,64229627,758878725,606701748,674243491,892082257,384735862,184085398,882964938,691580015,784229065,328767368,749830090,138938708,432876535,981830321,160963075,578931905,890078812,874391373,283882668,505781217,461215393,553564947,107949666,657122808,552666809,443346374,424173733,111906448,390737121,58266849,933944294,629982864,421667463,765400662,603483988,542766153,520171017,791711882,774126405,215945703,87728300,177287479,400185530,449160442,981728491,182256553,580500979,384756831,181135239,646253686,887251394,217348941,478509235,761258388,495107900,785563569,285453186,391719396,828922186,612527410,14174605,834520824,379518611,990420178,431870078,205240050,848992152,953974467,856601617,76623649,781866239,460504988,462357388,850348596,471147917,497625007,14841852,823072519,496288909,158374509,648102870,50311097,23314200,916412428,451771059,13334550,44877783,538905626,53437112,175751478,381022764,194846806,192857386,784995350,561317396,185243644,775675638,196621131,420299020,120957841,752266309,317145430,25142046,452492317,892138900,608496538,543665063,345498939,986547388,769779989,27261382,246699957,763971680,437890268,798525823,380837059,510639885,739161131,419935972,851740849,145024574,647589947,691611839,22100387,995358739,269941711,767556059,244824353,84951072,761599856,622531667,886382218,378796852,802612749,447754411,956680747,659975263,601598133,797113556,567252496,863669870,48903631,765833569,974009244,952122526,498477488,939478487,555486053,791292821,501442015,740100378,593715642,727569626,32654132,198359587,597751094,590196923,420381411,47567388,521772896,378982214,262742734,385811941,963260122,98990967,978800844,923879628,286773467,630087701,902098528,27420905,523473680,308181780,176532951,753739624,675331880,867369762,7847649,76926145,482121845,733948351,871148375,170486237,494739331,823713540,706440793,213363730,643599185,558568058,498125442,472032306,2571984,168285863,953112789,251953432,737357546,564792029,102690972,386149750,817519441,772191461,88694000,529953885,996965069,182381374,72405009,738792562,983597969,315268901,648272890,335645975,520062965,259043828,943639279,715330394,40707449,878389771,712592219,23106727,817159582,103038821,124841260,767001539,110319115,116151594,658088785,627274724,579710972,96552729,948479130,81378099,554605631,41361304,343722519,125672520,4876035,728430186,489073965,511435157,463323528,850487720,289072501,162612151,578069954,189996542,815551972,510436460,954356414,836308332,555225396,185885905,513509692,435721088,202028598,98483242,428938024,8784122,555888923,643114862,201272014,788885770,432425904,270116815,560780833,560692734,695866332,224734974,985942373,730359500,703763415,564713247,420345556,964163255,998726845,147535726,222962779,693158268,586547530,268422110,796022636,617615643,865228731,627822464,589128400,30812923,288952219,34171287,588431780,358098000,888432683,428775976,910335271,380838040,28984772,157764207,377570191,953142622,400945709,395641711,769680615,100646873,683607416,973797186,182518048,552797494,558039194,910612629,483072363,589701788,315463974,148195110,674468623,54317078,980211839,101098004,868259351,988610640,459082298,25057309,547850613,406956363,467115511,671198876,469151019,73462171,840252518,248113998,506526383,712182678,351808423,381596052,284987212,423656686,182081006,800190532,973689806,181116854,357911753,247005649,266173657,629072452,763960415,2708042,806926577,568289761,902892117,740303821,203511168,805312034,114265853,914286997,753801912,493071485,623133994,728986191,34690994,922518329,358401078,481097109,821833698,823686040,747040994,505698095,578272008,85082711,241120199,883906253,509185407,602977498,556580189,70133431,569246737,327638207,247683300,183918145,395618694,571377013,254346829,863524621,862673794,396684410,923259992,643759053,969804034,5338761,995040352,274914323,137656792,212361377,186524845,947056901,135475203,714242692,274976952,935817101,311805349,927217597,411072916,824902900,86074259,410312082,534901370,509568572,272655854,711388500,217562405,220355965,718874523,657731523,919995865,749505863,602951613,379129938,875158629,382256028,850306162,381503092,869314913,653061553,740182115,974283027,723744080,126183391,41855857,745120942,149721588,633652031,624245118,989213106,372645862,87203207,161625900,312536955,828113069,853972633,637716283,292960150,461260701,325641524,416230731,764985547,226379569,127977487,453761787,511955260,37548708,961859217,7599727,985140399,137669371,904302665,710983084,280040379,586474911,30780293,526136653,250857880,597040462,120155990,882760401,206767194,256332019,502634620,949609125,701365831,217893039,58296040,536997158,909933702,369224630,532037723,240302995,249632141,157653210,498957492,219079046,343389222,234572559,497529547,357934410,62896461,765549588,20867171,580483283,894515970,56644294,591663006,765328466,958021771,702668097,549218697,854914660,428523731,826782478,399429270,20389022,461428335,768706121,19420305,798423450,484714181,198286719,469744580,44834762,560041861,261096042,510341137,50208106,702755404,979057662,58492447,588165441,329844832,920287196,707181509,953275551,48002997,943046846,51136084,570356480,616923928,264665038,179725933,992724822,816809897,882021504,975408497,305296920,563971321,600957274,669045134,648369410,571569356,901308715,650798608,149002733,289446127,135073477,136646907,839526759,8366102,120371065,773065469,866507626,506527007,161350328,70273760,579881067,427400985,266647031,312233224,356531354,337760522,875539066,883255895,460875483,500155861,222213681,515300175,91742974,238750828,714280182,433259616,774169255,162556916,328042134,829866991,904234490,115865186,627625615,328287532,223759232,613587662,915630195,141319561,637755485,441472239,165872216,217156526,146366221,86355385,789995671,988440675,289454559,11759438,935364561,989559553,793087022,959660059,267272996,548000574,799584848,740196541,581597109,750975642,319836452,761737247,795887263,759546370,602859364,349476180,436886421,505217837,744355976,125247463,548239074,625618942,601232466,700436472,599812408,564121428,256288889,242155922,319080895,605808685,416238853,892700133,920695436,203692302,416908642,667503306,204107463,753159889,410899507,221186083,406347768,796950145,397573723,894261514,86586037,987871189,389609753,488932471,953360749,985186202,330681447,863267629,848829984,601839913,833001351,741964409,867829186,187937673,221742997,211254499,898119439,646329124,292595451,450435069,838631732,688188346,7974328,452588779,471558846,594576001,329101466,849832504,800483405,106455793,747461885,721276468,566157552,655713226,313201745,811484934,611304316,98995829,101033710,113499171,327840443,205814064,234007871,198546773,547807224,226894713,636021146,841118826,178791275,436358065,810765981,687162357,696389039,44555523,281919392,824911364,505938341,455588917,766385982,294365408,17641429,183037463,745393759,16836542,431857864,919122509,256150335,227207687,249034081,798246369,550303285,14378643,716193956,661677250,312218249,553796678,291990508,834647111,849495240,519411602,632620077,637571845,743273361,389182984,647568781,607045797,462879973,967854918,539838340,537734087,128968799,472257507,387520789,10740668,607379170,845472784,149258658,861191666,303382188,365089057,262132308,239710360,116403146,710309168,915872446,811564251,686873449,946409736,253083051,821970144,533287789,119799483,690752722,979457849,741025372,791092976,188813752,631842590,272090653,41838489,407351990,764168037,785739167,591498157,698266881,328175657,439795666,756532016,794217078,336120090,131861177,931669324,317245346,778513463,73276091,973335182,885187031,402186000,817335867,707905646,93065010,943061647,766125532,894791492,990094301,996161546,914868349,599511053,518155526,303312508,343803029,765511241,168467163,459290647,202028995,442645402,248556317,940148660,861743632,820964097,59327615,159048804,400292901,13765954,89238489,925962652,932642821,445715147,997945721,634941519,376606894,642432327,446530534,611510186,664260277,193369750,184554937,125062793,741222377,59319807,941431391,75673526,665863324,650346631,352758497,489907875,623083980,117813906,741406071,513504672,577294473,57961911,862125913,903000234,1595664,582706089,719382911,647837590,43005378,202767350,704725236,924797187,759244424,564231149,386925262,833327333,682975078,326411970,766863518,168969121,714291180,56295260,746438553,708931887,997880126,824224104,891800768,201885219,291036249,736338782,528271330,478508958,523149557,355949686,519515826,242180438,190136901,48138917,499844190,704469901,23444171,434766967,574351220,582312061,552104733,679889777,492297954,990825895,493295837,585773821,61535051,409477706,117864423,751703390,848880793,277665744,700138890,580292918,637921981,265554471,149332652,86031615,25364437,204694362,990909603,444371209,117335024,892591602,75074366,71718138,158071876,735579609,422041130,274405405,291855717,550347356,341843499,75568414,412850834,772667208,845694721,587007993,938680809,863469227,3770971,605985438,565263804,926010511,854150148,534049665,164588121,204839112,464078222,459768194,36142681,645232287,406783801,725382493,163662278,230180454,440334251,678066691,750098007,173903333,193259641,911066968,675322296,45360294,77751370,389945061,215891450,323363232,132099615,412875623,260247123,271787168,955396035,461555982,388159669,680182977,481995687,305803487,409391560,72206650,520470111,414788356,412970506,495271116,243240374,358573043,353769564,177512162,647710361,737868869,527306488,580509168,54749884,320941152,833600471,522652840,169388432,782475913,273142476,214892170,829847320,965939350,180565735,185158878,167204002,141647267,206859539,419528056,159326405,713731517,9066007,605831819,965601826,444809854,312244525,722249547,788810520,934388275,96824853,494687835,41014513,518056868,863049000,4124494,611535325,990479,584805361,862708810,309173153,340116554,752327493,948137722,364402172,451336190,272775196,126414783,72583940,990622961,972202332,357366701,504315091,681177903,647541537,967939022,728689365,362572430,413127537,537578947,9010261,911534531,561242252,790638499,319315403,970063559,679720027,570174373,356012358,754451139,267393792,720261646,214892357,976320135,388769902,591973046,319456688,1226246,152844800,291427808,414561116,88769849,621674689,531912004,793854252,406063215,484686897,616110625,48118068,109069088,7340420,563218053,957115471,553543607,438175275,363089311,549486716,948075035,47522473,889877444,880835803,542099409,53763378,374979596,95067370,307031699,893603348,467008903,660196410,750945357,653587246,894821039,73416882,600992464,599973980,461518517,393880694,86988176,306056968,354937543,182794702,184595989,75617075,510377846,542157159,146285210,639338255,19178704,880496601,772824650,29863797,996659545,500335858,46293444,426310322,708284993,205232413,97865385,527206202,733880792,205730418,353741162,789068705,504509039,944010296,651078023,67767448,99940175,767623104,928335517,653978398,772292186,356266337,672219606,474751421,769506598,966662844,671411628,617105514,894953635,892918029,26880599,899976433,879316169,186300345,500703382,540878967,790047005,62281180,313170499,109052384,442483354,963872635,69628281,323016129,9475898,11473191,374971071,380352238,788742831,280297365,257403664,448493718,611371462,208715947,46666335,944017127,287260937,86412772,481809289,147636579,786822823,105734287,257114771,443510717,743439963,895573630,794584597,691407319,65278194,91046296,341259035,652198232,111479861,158750899,786175801,718054267,5097667,421744708,653365242,821826371,760564187,14306965,719290027,515061922,270486465,982943838,630475362,282343947,23707124,369024042,776000256,150320658,104498885,673050783,988773464,532955505,1115323,330419493,93495917,706349066,854731171,874637294,700573142,257620603,999944086,82434986,665350623,124987599,982261216,476828457,391439434,342548032,630463139,239131228,598047488,942458789,50586346,621528702,473419856,929914742,640342597,155582528,464115749,981403587,989980312,382534787,630098383,918416936,891745286,507893816,148512538,284087336,127800583,959747290,659705227,75411149,487057994,315215514,108432104,285727493,919016013,234342314,944488696,422501231,488735870,169152617,683117581,485500942,92196009,793393566,49708829,559343150,28649253,48057405,508686253,308046407,145894715,428234120,253498859,39534736,997919465,73192243,676207972,110393679,812495601,872189853,376681012,470859627,389509564,773407584,719679801,243239080,478140073,360273896,16885343,992209504,63420982,521869461,38594767,868700054,367543259,281998603,828163335,669460844,856675338,262928077,570585261,133720829,448354251,974333,975015523,866826792,997594641,703230986,799717223,368945100,907417396,576625630,753902635,208180983,145316730,430329510,940613348,177365694,735444839,616911455,715678067,10709786,171198441,460033611,743487369,950567923,401069323,475764995,869603515,825006759,690590219,985388905,922692769,635139528,783745172,455723738,686630339,579630553,185537388,611901722,996926981,255576417,30213930,43409135,159186137,13705347,850782698,895874993,863264085,862464322,970174410,12303329,134909340,769156673,646992784,989171533,724580534,414185225,703657041,574567231,862622514,886008962,758911967,918297175,89569342,994903818,668841327,986110442,421932866,345761395,505392057,171607338,983821458,186702892,286742235,176446313,306771034,174026790,960976126,977905015,940053390,166866477,254565687,367899675,570744130,741383174,954287090,197642543,956631496,903606140,747635027,130281077,819820531,542989794,300229303,903498486,129877239,624419664,617125303,47623430,159184181,107197363,596654904,902122705,612358972,722987569,421736882,981631768,348659892,717722361,541715912,225750399,342715657,82455785,112651873,376130612,211760211,237589137,701714984,708762919,643364110,971934192,23005054,894266458,722286736,95947521,301344918,192668146,353826110,694878347,97784512,242666654,470841322,534208945,514492307,882629173,237290261,493400959,640158296,29550250,363058418,952694613,880689684,363457932,281240796,884068601,415028749,320480787,217506366,559125673,811636664,508501131,906662009,531962089,15119707,696131169,178286053,515643896,423478154,692211658,168799013,501306830,532032936,288618175,40043004,935116350,394390430,512613661,302607188,201019287,745527225,452726926,863460248,814349344,329925083,285731645,69483591,145642070,132801785,588318864,237582264,661866250,760443421,245775186,725559396,184160706,807141957,509597823,319891409,126893393,240866364,687578864,702652124,47679413,490983349,465605106,774309933,337413228,981425819,356336539,454890201,594471230,155741448,858597696,72706224,488856588,486410624,733336883,447577471,578139709,432484051,228873551,682941021,84594380,990056638,685532873,235473057,422458785,535164033,514388697,664034654,691224048,999157776,739098362,83439592,550257631,808040217,131151610,141568141,259956463,176628531,21605927,698797967,819309913,825612782,866166348,370970868,183987680,196995243,850849763,543760240,824812360,786704808,602818814,49133712,224525907,449911961,559718305,811231078,455765846,449448343,620112520,449816823,973921146,912262973,462032233,330690169,83204323,531013423,143079217,653203007,360750369,282961249,162309795,449590197,9745646,902945905,124162967,741488886,380492725,719910811,75852668,192799937,908460775,38872682,693317493,717597266,503352209,715261958,767440516,426799623,360765125,243482474,123252292,464948989,802513004,759897214,575479263,990882939,393624126,277198915,473365254,553899742,919557883,16053396,354118905,889789778,418944211,15003239,891590584,53981970,586445146,467308195,154594827,46546405,522846298,686659331,342717375,920842524,227404962,951123167,232489121,812887878,916848467,254516197,524906424,418196959,314571169,258144112,109689039,585682418,862034247,683308832,176754435,973844073,935709158,343576749,967837344,389706812,82044837,565645275,677544170,536487189,559728313,669073817,728902836,947137451,352313026,277751389,697071381,466212851,993589849,952305344,232994625,947371481,331252174,886135714,326168182,990147939,199157318,178964331,229820933,464575194,519643989,871604903,962714837,141540075,804398898,597094376,993649291,549662689,438229906,603408070,552574611,686433105,471445659,53768829,84383930,72892415,628333673,374080260,933488778,537869476,326769332,361754455,834139529,478116184,991610100,262676320,180781212,996866496,780134377,964795135,80961741,127786746,580504063,469682300,485757546,54395593,990670519,306646384,380076813,181921154,565817897,811724367,338528302,782269755,587518623,139999919,957969301,720142346,540710842,501751970,686207682,493588926,196430795,823311267,382841968,771225411,124472756,319158541,106842580,17760880,621832889,103940082,714469210,516856,749441224,86949018,729978714,344532721,242424696,294688047,674462773,500650798,113755846,355128808,908621726,538141619,937893373,609037945,974040802,608844381,333263614,912806406,400371815,342973465,962734029,709050997,730821600,335835005,956410221,707475201,885157921,618801749,549704825,633598710,305144947,430835241,640871296,825069413,899516408,196843390,591005289,284692148,563104851,196121460,611119231,788045025,759664357,63659200,797096778,279765423,91652719,787580376,718190168,567666092,13219289,367414726,90880553,916127321,897066673,340055164,127491767,679298811,245606425,8311804,252844515,925334578,771660782,850851906,596692044,695986587,574897439,705858770,747683173,930126902,277225360,311653010,692110668,795873032,827918193,853337698,600430965,484568463,530521636,366414453,846912688,340332347,998572417,601708374,99164864,55450042,21460358,683059325,604182361,918141277,451443939,252244760,435972371,585616479,452321103,768867094,223429379,391626983,53619869,901122665,455414717,118664243,637792490,73236144,915226517,91885954,259717428,807456694,688393045,744153378,987260296,452505643,142140391,815493731,737787050,485893747,975757240,914119478,499378036,60168207,315217625,108096002,850902847,17717933,745289333,176092828,674306553,213996454,75254719,702433396,365907937,100687575,940555687,373666904,459420872,111211859,394908008,670353749,692267892,235001273,33695911,748071453,658800688,489672452,204770424,260508696,126678186,855618267,463557176,644448290,371902973,763210959,645906762,535893801,709742733,2028760,969667708,448676850,259367734,864349785,155119387,414595256,376380517,789572546,712589814,683538404,807097965,21156672,301710058,866636945,353301900,252110351,704120698,971569657,440948034,735673321,84671965,376046280,585528064,816196525,988174161,879606803,293695053,309492077,738593123,142641269,152470730,670164743,584015564,556301365,549469395,629116070,523569031,785337510,747260624,740217656,528929385,821795806,379700088,480757895,65890410,630920448,694343358,126543539,212219854,172127557,532336781,188340525,819396031,834877725,378824266,565282458,279342187,886473839,474598498,333127176,196615015,853816165,459095166,627740679,316548209,161683881,918598295,807148387,894893348,895081263,245829753,84197214,330824286,812927316,727091066,669710907,663257774,492558679,149575819,271102736,817888697,164658434,574348760,136777526,173445395,264489266,787115380,63464232,399617825,117431282,160719088,991362592,514245336,905901345,241636247,416213171,728152553,773173704,215306102,450910217,45710980,995385930,706784119,851772151,638290401,562186698,827529556,72664994,892688775,726505464,925437,940743497,523129765,387769257,666761005,514268416,172286575,997811176,897902908,609969601,272865018,657348221,452344262,644893091,729716352,422893157,380419867,124687226,773664781,831124748,527145529,700411457,501848812,120392769,85034059,349516512,855548048,426272149,370424281,818848794,333831235,508541374,429700813,58892115,641321855,119528124,230664399,45754437,226799076,766450621,997928048,836372449,722448447,891689336,701957353,788052834,483047836,492498918,381960272,261267415,946227539,729770791,658317166,882045207,630535717,816188314,416300298,589216666,99647531,962789746,440260721,973405026,808683017,16088308,777425335,608903353,326247227,499919494,532676017,441498128,229018747,624089782,184485872,241602597,656700201,315293974,162980833,486140453,819934083,714586561,97861866,861687055,425725802,440530421,806585181,900036821,169607972,627137924,281108467,529395219,903108622,481523516,606274753,666304907,560289584,55612891,918984867,878755071,338744981,416820236,547785226,625378957,69093773,486865329,630018116,724808189,82089504,243625974,154573323,568308466,466915941,92264608,880500523,157849428,217889318,185549124,764400015,599758899,374381084,498885752,958114674,86444799,732105945,1032969,504507739,361514732,663885466,143242559,150548733,76565694,225143713,385638280,527175625,964537752,968907459,950088466,745488399,451243039,177402119,297675438,535911033,357899194,973381606,269810441,873860351,441404659,750252309,51276918,61943659,760958184,122874250,443408819,616303066,714384942,201901527,36099296,896812528,573165244,76736129,571094666,650234692,702713633,424892664,689839658,981435126,17531056,115537873,852512347,691449175,168894247,86636824,6710372,320952710,941975756,571303927,567422948,812318508,136798302,317807056,348050592,818189889,696347191,297585979,379252025,890511320,712131735,59148857,309669928,939632298,590566275,261878457,898281455,154079792,650980097,988310033,54282564,959019288,563549903,233925462,511992740,195748483,950929518,593875754,211026334,980224645,363769262,243941832,491797479,407158986,818286247,165264960,79304345,410465175,441947926,612567973,882529904,41021320,535990921,88718021,873888346,633962437,541479946,529411488,760073574,127953152,831207524,384518163,540232328,329328111,73162198,622498765,141467595,455108317,775651798,116000337,544938308,394188799,349884070,803230275,771295813,446611823,809768078,395538610,233436885,279575788,474099324,535726985,798877861,944197454,875076220,346225412,366436831,495509076,510269978,474274907,815976002,772882535,868853097,688514397,726236055,225049367,853907732,947194077,735120105,217650126,310015642,929224985,9731979,602824702,518715676,583627694,145518894,817517086,621645753,163241804,204097325,555816418,341202393,582098023,531505555,278616768,852664260,860735517,277104826,892139593,382160000,673618837,661760416,18851248,814027793,122420457,354036142,490171802,336645174,822911069,585429166,251375266,618714705,702897121,143338983,181106929,969421309,971721971,849110286,991302794,915052327,509445993,333964722,885350870,774863937,905457816,880791898,848028953,257728010,911589568,778783679,922456389,625703816,995733467,268849150,342231050,711849960,516475660,164147448,717508916,982550697,399364051,535793745,422882546,696959492,954885269,590155386,27908192,249390977,884901223,939224737,576523306,993070181,980347803,201570380,691897503,525538091,646327644,7302461,495922574,691819120,514296620,545550746,682491680,19015152,744519121,556547511,202961671,27356023,110705421,581839624,73099331,229328315,923886758,616056073,392617007,670215461,405635211,262086326,667909980,237329631,199281428,699644163,315573333,312992789,160250209,52285108,221231955,406121111,76179596,206309048,318028282,657359760,371600952,245065911,158609194,660307426,47100791,191472694,988976819,770192413,732321614,302342539,4863150,710959255,779646444,678466196,949887680,260779371,263915005,847925902,924836554,606875668,137172728,839986440,406983391,570382599,408556119,515251003,288373690,234807680,308860736,528277458,451886644,507672709,394676109,815174670,890365401,477393114,191122723,506613315,904452457,818021111,365087331,380839204,789858675,402694593,360601453,415328008,804872210,271210486,416971890,973368305,14434206,545168873,344051689,273451468,478388073,279037539,852523146,416859267,710226717,920482051,715888239,695217923,745027797,134980719,101457639,371602863,323667852,771811211,355203114,437791533,257013200,681811229,229586030,744375734,499395681,547474775,854851825,828699231,313715866,833786026,143940446,514642024,742335347,63441946,550505875,342894595,443532690,392699284,546307295,996884804,838491513,690737165,533258911,392786907,184119786,339901997,963382034,10384422,99110070,479613403,854727148,584970905,501484895,321522159,903305843,869521510,501601557,836541068,752585163,194538909,755596494,685306883,87059609,427240317,903432777,644552187,46204272,588656945,306335229,753022576,201100569,729100563,253441054,305058814,386586906,165297150,616863624,94783250,999699838,315275323,64787648,743357668,601111117,433220188,785395812,639946190,13416951,981067291,169247341,225290043,904354162,496630138,735638940,621324490,676719582,118309666,77512125,459894046,235033938,817410307,126343133,138822867,475679295,592348766,500683175,244453085,577807024,263743482,525820002,50396615,235242063,28982241,841601770,558177249,144256292,609688991,289747928,442815686,220741125,389629357,920779889,506115984,736450272,5368253,487685611,935087768,233488451,218472259,137602454,571721153,900031577,448019880,271279664,241887439,961479074,218584675,783211468,779456580,553373337,289630584,909175345,214644477,949410506,787680050,143972118,256695570,49390861,881741521,975470577,412410491,28199072,254460371,686904253,829474700,16624659,232777285,975463998,807372585,897596292,916177061,665180104,654392948,922617113,493197390,935687658,618533501,311279969,12712169,604129806,360611016,931309510,717686044,54806956,175366531,529098049,970310871,819004195,360002428,585393661,257643404,997925215,940607183,649064249,240195953,953105698,750103991,929020931,572944616,948445050,640178988,326139298,477474786,398519598,16886479,905196405,625795409,606515088,83483133,675832870,847206164,81091154,686664293,988426315,621242962,655407475,875977984,119505710,752897150,986635425,264084444,871310837,173504547,246846398,775130617,348693168,250584794,154083117,709536664,791165423,126021105,454884750,389178068,898774559,498705070,296742665,900965143,981514372,6390057,374391770,641400873,876095540,214837330,687294389,639099538,684879223,990526291,729686971,754263496,179104786,422975341,269747710,722187079,531614312,930172209,366234941,998002680,657530713,687056705,407637201,696834397,616361352,415193027,296460511,235627253,883235512,129772264,839853273,633687908,125898998,250741663,38780135,442179576,190369938,960006170,70753575,144897736,826779159,407266512,572976184,480719013,49155873,881984936,656376389,563020750,130654516,775912635,490242523,825702140,733596839,740143161,694653128,664921813,738470868,336966106,384982414,137459547,959909830,100881066,477693436,67612702,62353233,68172993,118281862,615537150,214370365,271474007,615892889,585856574,967460735,334344890,198723575,716134876,541199766,351847403,748699109,471474917,629771905,931122753,690094249,368582475,335128836,561574279,678870820,212003626,755456529,26795273,314317151,67716943,609954651,85944730,228262937,618342284,413423717,646986243,943145989,64158610,855518639,844380960,79045255,107719719,268912090,69239106,589149265,525812944,466978540,928346856,122144117,531014614,270735066,589353630,461455861,172268150,929658723,747660418,179246275,480534744,199908930,885786450,224396582,617438503,797508906,760203688,435698544,880672182,317528509,667265395,84982831,740409856,617978937,618987020,71581239,370886696,924965480,585689084,135070774,924494922,976219038,163885454,491954229,662586057,507710276,358551148,551058863,123704057,94770137,447448593,377725337,584767431,977287880,850637280,192464351,453293839,527345094,266038362,67673013,163958851,308045636,11870118,308285872,745830674,442374320,329174435,849098871,398871385,181433908,476967945,607504049,832302508,574342777,806631723,425329375,7891035,238753083,987452100,840728689,913980506,109972873,440231047,565721575,999458555,209738312,704374397,768103886,37093194,947008201,75457931,503162954,764897558,13227403,882147690,135070714,564484429,946618016,442723567,24395574,279668556,636315351,539572412,86823702,60774296,844426744,79972538,535619009,794361582,743389012,54372759,823570794,822795818,48751167,704199143,209922639,456538793,90829534,166824599,568306470,767568156,672792947,209074959,399082025,616978661,766597545,59428306,993559403,964443837,174540950,194585482,490399617,851121011,409918948,92621247,286783519,906300808,477812810,579885625,828369594,29518003,420772431,617510860,304293284,907781809,963336479,602731024,28075460,471093262,205055100,592946078,119079818,574036335,378696800,615569285,326047448,622825583,282132122,826847791,626774736,123685224,527270428,134960634,554872133,56259727,573761796,649174856,451649105,373198271,902867391,690262656,349130520,55223228,939598284,680519431,196772204,566744601,738720111,831611239,173219407,962120124,777819165,173915530,367620481,321985985,532968486,76991401,419346182,247006947,260262904,5745156,750950837,957183584,281718682,68425072,684235642,466786167,262560536,722571498,578313417,834771358,208361012,595242880,247926950,50694655,303825009,494652905,495784493,984312736,606464495,895302567,473592143,907304651,173828326,517711933,789140983,344220256,454846289,995450031,191679554,159598490,809996039,277072179,312888742,346975522,103950548,79538219,838787324,963531030,292672491,491602460,171928607,174634199,991368376,288963734,938016456,83407831,688065643,332456021,817147972,833402422,443769604,486554296,397380420,469211744,779961902,998763689,754425069,338943293,62816534,138559547,4287696,292511206,637740824,715469079,269925172,880800742,608252512,596449737,856779080,775633924,649250092,247433596,765202859,398240512,948280901,986131290,197563963,671821825,96441867,983059002,68485104,411409391,119766655,163008821,913398189,995783794,7979038,163419836,703006541,586597984,858456554,751426716,208279042,649307558,362969764,271699039,339851844,705611118,225300394,706037960,659097955,139925930,144419180,628113907,989387706,431244762,45932539,826169588,569775861,973062209,199431063,379010035,547322076,485299473,394101793,606260905,355570783,616174299,986735610,168888128,364370654,882187698,314329005,614719902,166960705,194521571,277518598,131013472,104392163,360496534,650984722,789306755,916260410,373204693,511116123,774877032,450028719,987923987,108100287,664868132,88749008,123173047,779164651,865441316,789607876,206965173,858182831,877866633,326012810,659144413,430754770,802029632,991213943,600668738,272154550,575589486,882857078,657088396,238740439,310439169,380935365,840049047,351509227,372401138,311902223,936729866,59552207,31806426,474435850,569552356,422335395,424804063,994104037,119566665,281814896,780574363,955804753,844269087,954482345,501730410,886150347,347650192,359144098,760836698,298782154,669918160,522952123,153909799,990535176,442754728,744365998,754249895,519508884,970561046,238367577,76820723,285484171,339941163,55295287,254085577,632777544,865444579,952536195,659717991,179104957,718612886,428834884,355298898,106741026,422934108,47784856,496677507,832247012,614227809,154887839,771563298,380982850,140196174,172384292,330699548,629412906,929713028,455846177,399657658,53272602,895923202,46313348,940953972,737701585,213697444,207617187,258347521,149543402,325874425,18378715,25800524,137617727,721062626,772664203,734683740,200032389,699758124,563547301,67372146,820464171,811603343,841110898,570172561,352986266,513722265,973882303,864680634,852882767,286669983,845851761,545407822,424985098,338566703,869919173,970176620,577869535,633023536,961551249,5408310,990517204,776104775,828535491,848421838,331978793,842986227,587244330,122785743,875390461,774625600,636114274,941728165,442870293,552163077,903441877,39177822,809701524,254089394,484657569,518662433,541284562,722306992,949985380,607391361,850422843,636969561,788184079,622495566,572198558,112957033,154895808,723324747,516911417,167537936,226153800,406314204,806802185,215286687,630333143,424983438,30451758,885068730,947650467,517208134,32916118,485285450,32506349,595845434,212456642,79740271,376652166,212114085,506421171,693768278,821803046,320011762,579096780,629303366,120564995,745820336,228138218,48868866,816076242,674028403,169784156,829744311,367906598,728562197,508805358,658987048,234939920,654216913,226784677,822596879,624726703,186130676,265511132,955835424,496587193,73925583,297225347,671051314,871775864,898389726,606408148,627701398,717196201,35951530,942711905,627364349,298400516,186204653,687988731,4523798,770948154,264749475,501497947,413075940,701186590,963754584,91505688,177980009,241489907,250268170,308981488,2664639,188157951,711197818,280463509,683395319,986246899,796521675,958842957,151808221,395971142,714571233,579963059,760226174,577481268,128414012,786986012,565345318,898766155,229023845,481038643,913264349,940041479,233049175,809496162,429377406,978100906,626786746,54939430,81682724,773673341,886913192,217923974,38996811,575156444,467014190,528273999,840551319,780197323,549714843,347659801,313191544,827178980,462880458,231084750,289661251,178344260,858592550,216743850,207946286,313353157,469622889,387462090,516471364,453224548,353286504,809965637,502389635,696349515,8846337,244682596,380494512,289040806,653106629,653735327,873679070,666777487,96506814,448173669,448886572,675912714,929159995,841506612,882631471,609972544,8871244,614160790,140042047,412846716,890431164,644193388,936026510,88716284,127170840,403820753,369773108,876819039,358588481,395327903,195942894,837448189,572538474,370665869,908262893,713600322,16047752,762561524,547712803,794269628,407300411,972503768,318152097,531456713,426009676,36944168,196371858,362673253,894333225,567771944,208518761,892225858,841493154,371218615,423834473,655524452,565967591,479344307,231117679,25895762,567811672,113807064,484851893,445387662,623009717,887981942,629161557,154531761,480689314,173835193,789995499,704039650,845458479,585766657,472511565,690096873,639508185,787589408,471639572,725146888,955200727,439069714,935231025,950053165,350946000,76822263,592187895,584436581,821973265,308017392,684405176,412770465,931332982,823631421,581484166,234541664,752769710,564353138,994779953,915851597,499992955,659807457,346443639,696903919,81550693,878746752,892799753,390181572,432219439,842290932,239198144,443664188,934520677,10362104,185759613,982695279,764731379,738826050,75774871,181675564,808875848,983871107,341880181,436399475,981983735,790241448,731175056,173818732,494327357,262701639,354981745,557848917,216588086,656438815,913426091,489028490,210124942,214798998,553056481,908854640,389934077,555174195,533838,173214789,74843845,875924905,836643383,176848160,502595530,985267885,269638878,963551513,364011630,949406308,844128569,58324237,385005805,85451249,973508328,602521722,99016745,211583389,43345365,736566498,482646777,171374265,514281820,757935827,300563735,39320176,900920221,948334648,75502578,128145260,320683628,158984389,106586171,278289156,961942311,905659012,325259680,576171309,92976467,907360461,158207823,136763526,408347024,16135676,341275032,158724571,972036582,851751218,115757764,999278233,796062338,139074061,902976004,666044293,538926679,659567889,208927648,361032767,620844944,862813384,345936936,746465867,342864714,658068015,596582009,287414634,814113788,597988893,948948972,280472354,216121594,838018131,712562016,151872683,569516098,496360878,333442578,614972816,236563593,409794037,743188572,793916287,94119942,814196320,181828871,236118763,287939868,557687641,593163785,128054960,102332377,414761812,324241487,172940027,915826308,219702212,800461489,55405889,659529895,941546368,605836289,865765912,965710775,254097639,269842067,119156337,209917596,719259045,923262282,72509818,397284447,666270048,290635729,679656135,825667834,489133976,376835449,484322643,923130749,232559669,380354235,615532534,32717400,288531243,502050308,341368343,880560038,830652151,247161902,906187652,462537985,528941715,564904069,745686023,393136956,248174516,657601336,744468323,379294159,49423488,910750741,338773652,643570726,732982432,620066084,619753923,386442071,518148121,384721086,258032270,76075378,66528772,657484818,159775992,757473656,503524299,322411217,23411882,112621399,487850275,193362841,263533493,945928402,287167140,427102687,963576331,379432011,754884007,619594924,73230209,775516558,642823488,930034655,58625953,394911697,367854746,932886883,266826639,480986700,839882564,181660908,121706903,306710877,496938522,629450890,15790383,717787565,115975330,990543828,778182760,768587071,603460930,839526964,999361833,307826505,937504714,539833228,288053208,566998003,360998823,205972787,607147211,212009018,675625821,911688278,765374556,550234544,991881664,48260372,729326577,782896003,984438605,302896352,409271671,49871921,615856391,1362246,913165246,55490260,848065698,1010871,486269113,895155249,49145466,826638894,367950899,685435484,220167092,229932094,679558980,377128988,880508841,983892801,363047723,219213140,480171351,404347336,139959171,57225241,927482246,296620869,781366202,8656454,80105422,625520342,684097163,701754387,333928781,850065008,289799649,744471173,731265652,180368007,202689271,672894729,181486210,598334881,493032244,209337316,65233088,337294708,972253591,332798851,340209365,182370992,203319660,919265701,402172829,325060430,956626142,231176528,956987053,999905648,459749797,491060555,591308725,880424396,889227011,653754206,344834259,525073663,354230399,809153002,674872175,96133375,222876278,400709594,806222661,551510798,293171703,438145639,848198729,511070183,476722336,660144554,518627637,264803023,450019551,858307046,613571301,374911449,363176688,717047851,82825457,279568486,849751536,279177712,492352762,379781373,911087807,41429410,658995858,816989870,166557565,386844512,520825934,12569758,97629813,62774430,403933470,372160894,43390244,466443407,112961334,699777604,325229400,387654888,699043420,281518701,807196984,6262931,948712094,650685565,463717121,86561124,611097749,762654889,836598257,280341,66193652,916857833,590076198,727989587,337283431,896668948,749804866,631969315,350021723,241542222,648936510,559300428,316737141,309365416,473775031,212807535,192980424,432696872,166542074,663218147,916567145,475263705,792672104,534887917,600880626,743736433,544981935,805941532,952754581,399371138,416246374,703938479,551540100,232554367,122185010,342330303,496887686,162268922,514643521,342353848,97367605,501565652,439024739,184407340,703485612,317303389,855181649,977918707,253887769,174668204,290405636,512183547,514021981,862648261,601615246,563457932,809535575,727626710,818348686,221752475,923926951,570656554,737141116,674626,402966688,35769920,733882662,456058593,189492514,441523302,971763454,235770190,370963807,486191417,868383706,455012809,589263246,690861603,237319830,875410720,767213366,634367264,104100425,539224183,465686440,435365456,625911703,759016489,613310297,27987425,401654792,397842332,14809149,252676178,415833819,359484678,677925182,47736327,827073356,784082197,590041824,66556858,63481244,90519013,337445224,14988102,774784815,341756174,944713669,860735576,871996799,411096447,803599464,253310903,23067114,331689694,961211479,189186864,13894158,545857617,711803170,303607144,786094064,398430232,845858312,678607132,852606025,285598422,43695826,23564704,918214775,688610727,206889076,350573679,723060177,283144191,5402646,625706928,695466115,28140581,176378695,924464958,306455769,425653267,73798105,32852423,914772084,74762538,291645452,954684060,208215628,378521838,27050028,256415332,517882862,605524419,243739138,308001679,659644402,687669305,908765013,11262693,352073062,138210181,559629602,348643553,175358634,682863725,117486100,532618681,694396640,484600957,192998829,193737490,290795614,213075022,600131092,602210336,715389522,740296446,702386367,637764102,426080445,800116770,273782054,495775766,902108584,682569012,708471132,415876027,360188999,278417810,780681449,890992970,721615936,227937553,181684393,506745999,948513912,339967640,453645141,999656300,974334902,820006387,84945411,234008045,766679792,188800152,31721346,675974578,506948481,99089362,852468705,329631817,602039523,210009746,469417383,571658244,381000192,563195697,38412484,366592775,416664735,436090769,711820903,634871463,504262139,203505433,866684562,594080396,891468513,299109990,532920194,197364227,868139472,423464237,438072616,675647509,907577436,922313956,767999210,417317775,628311188,898271523,440728299,274486234,268282381,608646494,72889241,766575795,25521858,395332530,729831287,969741405,47014357,690186261,107032634,250147824,558130909,308183422,855699468,904519235,446035631,729230778,514694385,993234702,281331799,179458756,246738275,517140289,30930481,933123377,868968888,572016525,572586039,442014965,257220856,693254889,614786849,792294397,844424813,723325309,16443090,718217235,714676000,291435247,240329829,301031521,372302259,272836156,238601577,668119813,527179610,902663308,353808997,323457372,8656091,691310728,355554255,672625792,996470387,60003169,646835129,900887203,467285965,182964290,398799054,712125347,652096998,925431849,751632598,455211311,363591681,648978820,386894767,941058240,959619341,88259861,521623925,64286464,659142073,30386708,475638536,664439967,128318658,822795332,235884257,357270702,66631308,430367979,944663684,553529841,813238491,989661515,903130512,254462495,411786285,690185898,868547956,666216913,659042746,160549728,371465872,156307263,270104821,720927834,228504466,844061751,30488706,100091807,855476462,2361238,469411753,132695557,59623959,884170932,593170014,706807523,190136465,490640303,452291496,665807413,739407687,78064124,484048263,624787491,40771008,786312128,444985937,921533159,639709438,376684148,177462435,225009317,977968171,571523160,763251082,93719305,814732622,858622492,68603213,576021280,470214679,666329421,11767378,786515772,885054407,481675998,675211365,699964211,255343304,855350260,492994176,123685519,26783571,146964151,368574017,116813432,365873350,202083088,481740577,313945594,683150545,50209077,463432083,887862740,2256535,945324639,907501275,403369054,227257576,190390866,211119573,168367167,319095769,979063351,579755180,351304503,408906733,458496534,962557089,272878674,521869048,242188764,784064606,540683049,220214958,858541246,330862429,362498981,301485472,388091063,51592166,327832110,913607077,193469505,308375136,448143050,189180210,540296299,483877421,816938220,169338840,796287504,710683996,780367704,183134898,958994090,922013462,444457236,5869397,918203394,974571965,433616477,853081217,533727509,962807965,19949748,478043292,254844266,952483843,904420402,31994895,132964329,184601499,132352050,318046920,913417949,916172988,553344614,178102401,834453784,888584957,358303730,576805722,410497484,271433647,316768973,132780876,425392405,841114855,929862791,760028595,130362980,639945690,483439404,595561333,81726474,606522943,259896777,565282420,592600065,5239549,605879123,678650697,249457777,730376752,704501997,595747641,206743708,335030527,615608001,8888895,669043969,145905363,745412837,978678617,663751120,781351194,332284323,931013457,295757828,984879462,80118488,453908261,497542664,454614351,169353755,155025993,863103354,878935554,187819849,594538183,616083537,587394689,891472191,37023177,674226547,623255650,894600824,4665218,160550321,856382515,419485504,632666662,378844082,976972639,602766213,320783068,357497014,722078833,235593514,308133602,522003837,875769908,923049975,178276480,287407220,673468285,162018757,787229231,190667868,116997285,862573174,942343182,31165161,963926255,822439590,365425142,118343885,93643827,254134939,612820072,503805256,16967170,398944525,264636711,959240778,512302082,868188244,729904198,40930638,773727877,214586132,757578008,916284114,241647127,436843406,288378896,986959224,277207668,300206602,901822286,721892100,144979636,941012749,173081254,656616948,587439312,291610080,399841547,769177656,754166874,772611551,935743013,500794048,528568269,21781226,288647157,948665420,229797809,221995574,770999826,23254758,24216352,905093494,751030904,447946665,378467490,78151062,256719642,465222704,452693978,385101968,107644441,164115591,416368939,197326477,142736566,395645091,110004553,426488470,90719883,64472804,731404961,865330011,97946374,932455118,371420077,902372390,958455599,927994813,408712454,898657502,717343466,145058804,127133225,712409078,972956382,198233082,346237680,927205766,779355789,502790146,748417390,815785485,195065073,668216056,759932274,428270909,309639896,881265463,290326989,835536262,777882762,608534324,48138266,543650904,270764388,553296736,233143224,995691011,116685564,857284743,765996374,111964401,614896630,680183047,726045874,972166251,804288649,428183510,414593145,247679646,136425107,645343448,349419538,114230148,677903242,956259581,78359449,575954677,977041908,787358425,756254341,693946243,743837195,826841079,970536342,635128669,185756683,431541404,57662690,514917411,179441992,276758375,679507342,970053816,739683591,972686549,588747945,131343908,809700129,803407571,734216248,334410290,492850193,34003463,650401410,854367598,238401291,194728154,554212087,115309721,23322064,858896516,417897644,694050319,44507680,703364099,263909600,888368070,671678635,23589840,786771169,387543211,508526633,206557846,362095587,880503446,468784991,900140379,881568742,256142822,476413859,920917819,163282718,441440125,124992246,491978240,549852554,715775921,674671790,442664351,86433626,690046955,977569229,255383101,614095393,895747837,865212298,952575711,241320066,398419523,695144259,144648313,999303206,878155380,356202589,885843963,512746454,569338994,695798171,831907477,207190588,811135531,592311649,870876242,827586880,18626392,788840342,530093791,228900882,892327393,190829568,887951248,888731863,946104244,174658817,199542468,871362533,571342354,305602382,642378894,958591343,604186256,886308339,597211364,210678451,470176309,964552624,78492077,462987627,763701871,513250791,673445351,674799153,696886301,950551466,133593524,333634600,800048836,545652141,912164035,675818822,52907574,508725945,314875793,846274426,618445452,292789418,389727365,871784375,499128333,792931071,146532289,10257248,180507126,65330179,283624168,29462856,632997706,255769944,469042816,258452285,812319796,83475305,60503059,311089643,841455950,670358868,565427519,806530607,138350059,465440319,857823122,570334336,485441998,272523417,941342545,764944632,369996311,849214867,248392698,585161022,947745049,426765786,62418773,204784257,28266789,302759656,905824205,775244513,460266679,77222621,873375078,288631509,907334079,849710269,967375755,29141827,773417215,984510148,42818990,249603487,611064414,955120374,422301499,959040421,760418934,586739706,643653322,793469474,829628841,746766636,85278308,731791304,761618184,510743023,810023281,828248929,348935472,207887036,727988569,153563474,183953804,954157768,759146402,558444496,565173886,119646593,96996034,4729230,217657261,189052659,873978196,499942287,646261511,213303112,905677366,950234576,458503164,943234528,747061529,436124217,132157966,10042014,364472478,416524707,248108227,628083022,575107450,335550382,303986117,629793950,358814174,981348221,623746458,187335460,431730531,39931408,539270512,522199253,41651754,678179358,546493844,199866596,893644372,178644910,873973470,217774581,275823209,905903777,698233576,253182617,363068568,950097204,908151043,147471181,947878719,602727666,418607872,203114503,665238821,185424531,966895243,713212614,550464210,46361314,150779183,544216288,604568036,514667903,177459084,798252353,427690351,718089836,677984144,451715884,286814325,116165373,293289594,786976540,598129477,219307008,469176562,179732114,833402020,757475750,961906665,874752191,314073206,799561203,233641160,561344959,469839336,701562889,504626046,627994654,104110825,848460025,206236543,657347319,679417771,106935927,133258542,974474802,113514382,241479291,95418638,767377347,703536156,155904051,429705971,748659888,116960182,644814881,376317073,841670205,933015621,849410378,366434134,729037905,292753238,522371535,862360813,978227,43784820,883459605,811114299,2091182,798421088,619912777,479849305,650163219,776699369,541479670,697009970,181913198,3149223,965495322,854848485,786072922,75943672,785516111,797728987,76934993,982993116,716254755,199121196,443459873,85614100,9315754,855825727,235175770,58894185,395925342,142271620,982592599,710394546,699035328,218509109,690830237,63956062,680507956,193159265,310788245,925731913,505892542,852043424,904523361,306024811,599507615,101619034,512004050,718124280,510758030,468842699,329111417,583595259,610849574]
h = 149271126

# print(koko(piles,h))

def koko2(piles,h):
    left = 1
    right = max(piles)

    while left < right:
        mid = (left + right) // 2
        total = 0
        for pile in piles:
            total += (pile + mid - 1) // mid
        if total <= h:
            right = mid
        else:
            left = left + 1
    return left
# print(koko2(piles,h))

import math

def findMax(v):
    maxi = float('-inf')
    n = len(v)
    # Find the maximum
    for i in range(n):
        maxi = max(maxi, v[i])
    return maxi

def calculateTotalHours(v, hourly):
    totalH = 0
    n = len(v)
    # Find total hours
    for i in range(n):
        totalH += math.ceil(v[i] / hourly)
    return totalH

def minimumRateToEatBananas(v, h):
    low = 1
    high = findMax(v)

    # Apply binary search
    while low <= high:
        mid = (low + high) // 2
        totalH = calculateTotalHours(v, mid)
        if totalH <= h:
            high = mid - 1
        else:
            low = mid + 1
    return low

v = [7, 15, 6, 3]
hr = 8
# ans = minimumRateToEatBananas(v, hr)
# print("Koko should eat at least", ans, "bananas/hr.")







# 71. Simplify path "/.../a/../b/c/../d/./"
# def simple_path(path):
#     def remove_slash(s):
#         re = []
#         for i in range(len(s)):
#             if not (re and re[-1] == '/' and s[i] == '/'):
#                 re.append(s[i])
#         return ''.join(re)
#
#     path = remove_slash(path)
#     path = path.split('/')
#     print(path)
#     new_path = []
#     for i in range(len(path) - 1):
#         if path[i + 1] != ".." and path[i] != ".." and path[i] != ".":
#             new_path.append(path[i])
#     if path[-1] != "":
#         new_path += [path[-1]]
#     print(new_path)
#
#     return "/" if new_path == [] else "/".join(new_path)


# print(simple_path("/home/user/Documents/../Pictures")) # "/.../b/d"
#
# def another_path(path):
#     def remove_slash(s):
#         re = []
#         for i in range(len(s)):
#             if not (re and re[-1] == '/' and s[i] == '/'):
#                 re.append(s[i])
#         return ''.join(re)
#
#     path = remove_slash(path)
#     path = path.split('/')
#     stack = []
#     for i in range(len(path)):
#         if path[i] == "" or path[i] == ".":
#             continue
#         elif path[i] == "..":
#             stack.pop()
#         else:
#             stack.append(path[i])
#     print(stack)
#     new_path = []
#     if stack[-1] != "":
#         new_path += [stack[-1]]
#     return "/" if new_path == [] else "/"+"/".join(new_path)
#
#
# print(another_path(path="/a/./b/../../c/"))

# def min_max_diff(arr):
#     arr.sort()
#     n = len(arr)
#     INF = float('inf')
#
#     # Initialize DP table
#     dp = [[INF] * 4 for _ in range(n + 1)]
#
#     dp[0][0] = 0  # Base case: 0 elements, 0 groups
#     print(dp)
#     # Fill the DP table
#     for i in range(1, n + 1):  # i = number of elements considered
#         for k in range(1, 4):  # k = number of groups (1 to 3)
#             for j in range(k - 1, i):  # Partition point
#                 current_diff = arr[i - 1] - arr[j]  # Max - Min in current group
#                 dp[i][k] = min(dp[i][k], max(dp[j][k - 1], current_diff))
#
#     return dp[n][3]
#
# # Example usage
# arr = [4, 3, 1, 5, 8, 7, 6, 11, 12]
# print(min_max_diff(arr))  # Expected output: 3

# def four_product(nums): # can be optimized
#     freq = {}
#     for i in range(len(nums)):
#         for j in range(len(nums)):
#             if i == j:
#                 continue
#             else:
#                 if nums[i] * nums[j] in freq.keys():
#                     freq[nums[i] * nums[j]] += 1
#                 else:
#                     freq[nums[i] * nums[j]] = 1
#     print(freq)
#
#     def comb(n):
#         return (n*(n-1)) // 2
#     re = 0
#     for val in freq.values():
#         if val == 2:
#             continue
#         else:
#             re += comb(val/2)
#
#     return int(re * 8)
# print(four_product([2,3,4,6,8,12]))

# def rotated_arr(nums):
#     rotate_points = []
#     for i in range(len(nums)-1):
#         if nums[i] > nums[i+1]:
#             rotate_points.append(i)
#     if len(rotate_points) > 1: return False
#     if len(rotate_points) == 0:  return True
#     if nums[-1] > nums[0]: return False
#     return True
#
# print(rotated_arr([7,9,1,1,1,3]))


# 3160 number of different colored ball
# def color_balls(limit,queries):
#     def get_unique(nums):
#         nums = set(nums)
#         if None in nums: return len(nums)-1
#         else: return len(nums)
#         pass
#     balls = [None for _ in range(limit+1)]
#     re = []
#     for i in range(len(queries)):
#         balls[queries[i][0]] = queries[i][1]
#         re.append(get_unique(balls))
#
#     return re
#
# print(color_balls(limit = 4, queries = [[0,1],[1,2],[2,2],[4,5],[3,4]]))

# 2349 design container number system
# def design():
#     class NumberContainers:
#         def __init__(self):
#             self.number = {}
#             self.index = {}
#             pass
#
#         def change(self, index: int, number: int) -> None:
#             pass
#             self.index[index] = number
#             if number in self.number.keys():
#                 self.number[number].append(index)
#             else:
#                 self.number[number] = [index]
#
#
#         def find(self, number: int) -> int:
#             pass
#             print("find",number)
#             if number in self.number.keys() and self.number[number]:
#
#                 return sorted(self.number[number])[0]
#             return -1
#     pass

# 1910 remove all occ from substring
# def subs(s,part):
#     while 1:
#         if part in s:
#             s = s.replace(part,'',1)
#             print(s)
#         else:
#             return s
# print(subs(s = "aabababa", part = "aba"))

# 2342 max sum of pair with equal sum of digits
# def max_sum_equal_sum(nums):
#     def get_sum(num):
#         num = list(str(num))
#         return sum([int(x) for x in num])
#
#     sum_dict = {}
#     for i in range(len(nums)):
#         local_sum = get_sum(nums[i])
#         if local_sum in sum_dict.keys():
#             sum_dict[local_sum].append(nums[i])
#         else:
#             sum_dict[local_sum] = [nums[i]]
#     max_sum = -1
#     for k,v in sum_dict.items():
#         if len(v) > 1:
#             v.sort()
#             max_sum = max(max_sum,v[-1]+v[-2])
#     return max_sum
#
# print(max_sum_equal_sum(nums = [10,12,19,14]))

# 3066 minimum operations to exceed threshold value 2
# def min_op(nums,k):
#     re = 0
#     while 1:
#         nums.sort()
#         print(nums,re)
#
#         if nums[0] >= k:
#             return re
#         x = nums[0]
#         y = nums[1]
#         nums = nums[2:]
#         nums.append(min(x,y)*2 + max(x,y))
#         re += 1
#     #############################################
#     re = 0
#     heapq.heapify(nums)
#     while 1:
#         print(nums,re)
#         if heapq.nsmallest(1,nums)[0] >= k:
#             return re
#         x = heapq.heappop(nums)
#         y = heapq.heappop(nums)
#         heapq.heappush(nums,(min(x,y)*2 + max(x,y)))
#         re += 1


# print(min_op( nums = [2,11,10,1,3], k = 10))

# 2500 delete greatest element from each row
# def great_row(grid):
#     re = 0
#     grid = [sorted(x,reverse=True) for x in grid]
#     for i in range(len(grid[0])): # 3
#         temp = []
#         for j in range(len(grid)): # 2
#             temp.append(grid[j][i])
#         re += max(temp)
#     return re
# print(great_row(grid = [[1,2,4],[3,3,1]]))


# 29 divide two integer
# def div_two(dividend, divisor):
#     re = 0
#     if divisor < 0 or dividend < 0:
#         divisor = abs(divisor)
#         dividend = abs(dividend)
#
#     while dividend >= divisor:
#         dividend -= divisor
#         re += 1
#     return re
#
#
# print(div_two(10,3))


# 1352 product of last k elements
# def product_k():
#     class ProductOfNumbers:
#
#         def __init__(self):
#             self.pref = [1]
#             self.size = 0
#
#         def add(self, num: int) -> None:
#             if num == 0:
#                 self.pref = [1]
#                 self.size = 0
#             else:
#                 self.pref.append(self.pref[self.size] * num)
#                 self.size += 1
#
#         def getProduct(self, k: int) -> int:
#             if k > self.size:
#                 return 0
#             return (self.pref[self.size] // self.pref[self.size - k])


# rotate array in place
# def rotate_arr(nums,k):
#     def rotate_one(arr):
#         temp = arr[0]
#         for i in range(len(arr)-1):
#             arr[i] = arr[i+1]
#         arr[-1] = temp
#         return arr
#     for i in range(k):
#         nums = rotate_one(nums)
#     return nums
# print(rotate_arr([1,2,3,4,5],2))

# interview question: divide array into 3 parts minimizing the difference between largest and smallest element for each
# subpart and return the maximum the difference for said subparts
# def max_diff_three_parts(nums):
#     # i,j = 0,1
#     nums.sort()
#     max_diff = float('inf')
#     re = []
#     for i in range(len(nums)-1):
#         for j in range(i+1,len(nums)-1):
#             local_max = max((nums[i-1]-nums[0]),(nums[j-1]-nums[i]),(nums[-1]-nums[j]))
#         if local_max < max_diff:
#             re = [i,j]
#             max_diff = local_max
#
#     print(re,max_diff)
#     print(nums[:re[0]],nums[re[0]:re[1]],nums[re[1]:])
#
#
#     pass
#
# max_diff_three_parts([4,3,1,5,8,7,6,11,12])

# 2161 divide array according to pivot
# def shreya(nums,pivot):
#     less = []
#     equal = []
#     more = []
#
#     for i in range(len(nums)):
#         if nums[i] < pivot:
#             less.append(nums[i])
#         elif nums[i] == pivot:
#             equal.append(nums[i])
#         else:
#             more.append(nums[i])
#     return less+equal+more
#
# print(shreya(nums = [9,12,5,10,14,3,10], pivot = 10))
#
# def shreya_2_ptr(nums,pivot):
#     re = [0] * len(nums)
#     less_index = 0
#     great_index = len(nums)-1
#
#     for i, j in zip(range(len(nums)),range(len(nums)-1,-1,-1)):
#         if nums[i] < pivot:
#             re[less_index] = nums[i]
#             less_index += 1
#         if nums[j] > pivot:
#             re[great_index] = nums[j]
#             great_index -= 1
#     while less_index <= great_index:
#         re[less_index] = pivot
#         less_index += 1
#     return  re

# print(shreya_2_ptr(nums = [9,12,5,10,14,3,10], pivot = 10))


# 2570. merge two 2d array by summing the values
# def merge_2d_arr(nums1,nums2):
#     re = []
#     ptr1 = 0
#     ptr2 = 0
#
#     while ptr1 < len(nums1) and ptr2 < len(nums2):
#         if nums1[ptr1][0] == nums2[ptr2][0]:
#             re.append([nums1[ptr1][0],nums1[ptr1][1]+nums2[ptr2][1]])
#             ptr1 += 1
#             ptr2 += 1
#         elif nums1[ptr1][0] < nums2[ptr2][0]:
#             re.append(nums1[ptr1])
#             ptr1 += 1
#         else:
#             re.append(nums2[ptr2])
#             ptr2 += 1
#         print(ptr1,ptr2)
#     if ptr1 < len(nums1):
#         re.extend(nums1[ptr1:])
#     if ptr2 < len(nums2):
#         re.extend(nums2[ptr2:])
#     return re
#
#
# print(merge_2d_arr(nums1 = [[2,4],[3,6],[5,5]], nums2 = [[1,3],[4,3]]))

# 2460. Apply operation to array
# def arr_op(nums):
#     for i in range(len(nums)-1):
#         if nums[i] == nums[i+1]:
#             nums[i] *= 2
#             nums[i+1] = 0
#     non_zero = 0
#     for i in range(len(nums)):
#         if nums[i] != 0:
#             nums[non_zero],nums[i] = nums[i], nums[non_zero]
#             non_zero += 1
#     return  nums
# print(arr_op(nums = [1,2,2,1,1,0]))

# re = 0
# def hjk(n):
#     global re
#     def rec(num):
#         global re
#         r = num % 3
#         num = num // 3
#         if num == 0:
#             return
#         re = re *10 + r
#         print(r,num,re)
#         rec(num)
#     rec(n)
#     return re
# ge
# hjk(2747)

#
# 3356 zero array transformation 2
# def zat2(nums,queries ):
#     re = 0
#     for i in range(len(queries)):
#         val = queries[i][2]
#         for j in range(queries[i][0],queries[i][1]+1):
#             if nums[j] <= val:
#                 nums[j] = 0
#             else:
#                 nums[j] -= val
#         print(nums)
#         print(nums.count(0))
#         if nums.count(0) == len(nums):
#             return i+1
#     return len(queries)
# print(zat2(nums = [2,0,2], queries = [[0,2,1],[0,2,1],[1,1,3]]))



# d = [3,4,5,2,12,15]
# c = ["divisible by both" if x%3==0 and x%5==0 else "divi by 3" if x%3==0 else "divi by 5" if x%5==0 else " " for x in d]
# print(c)

# dict keys as list

# for i in range(1,66):
#     print("{:02d}".format(i) + " ")

# chars = ['e','r','q','w','t']
# nums = [2,3,0,1,4]
# def give_ind(char):
#     return nums.index(chars.index(char))
#
# chars = sorted(chars,key=give_ind)
# print(chars)


# 2551 put marbles in bags
# def gemfuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu(weights = [1,3,5,1], k = 2):
#     price = [weights[i] + weights[i+1] for i in range(len(weights)-1)]
#     # print(price)
#     price.sort()
#
#     re = 0
#     for i in range(k-1):
#         re += price[len(weights)-2-i] - price[i]
#     return re
#
#
# print(gemfuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu(weights = [1, 3], k = 2))


# 3259 max energy boost in 2 drinks
# def boost(energyDrinkA, energyDrinkB):
#     n = len(energyDrinkA)
#     dpA = [0,energyDrinkA[0]] #energyDrinkA[:2]
#     dpB = [0,energyDrinkB[0]] #energyDrinkB[:2]
#
#     for i in range(1,len(energyDrinkA)):
#         dpA.append(max(dpA[i-1],dpB[i-1]) + energyDrinkA[i])
#         dpB.append(max(dpB[i-1],dpA[i-2]) + energyDrinkB[i])
#     print(dpA)
#     print(dpB)
#     return max(dpA[n-1],dpB[n-1])
#
# print(boost(energyDrinkA = [4,1,1], energyDrinkB = [1,1,3]))



# 2140 solving questions with brainpower
# def brainpower(questions):
#     print(float('inf') < (float('inf')+1))
#     pass
#
#
# brainpower(1)

# x = 10
# def outer():
#     x = 5
#     def inner():
#         nonlocal x
#         x += 1
#         return x
#     return [x for _ in range(3) if inner() > x]
# print(outer())

# a = 10
# def f():
#     a = 20
#     print(a)
#     def func():
#         nonlocal a
#         a = 7
#         print(a)
#     func()
# print(a)
# f()

# 416 partition equal subset sum
# def part_sum(nums):    # 0/1 knapsack problem
#     total_sum = sum(nums)
#     if total_sum % 2 == 1:
#         return False
#     else:
#         target_sum = total_sum // 2
#         dp = [False] * (target_sum+1)
#         dp[0] = True
#         for num in nums:
#             for curSum in range(target_sum, num-1,-1):
#                 dp[curSum] = dp[curSum] or dp[curSum-num]
#         return dp[target_sum]
# print(part_sum(nums = [1,5,11,5]))

"""
Same as (with a slight modification)
https://leetcode.com/problems/contiguous-array/description/
https://leetcode.com/problems/subarray-sum-equals-k/description/
https://leetcode.com/problems/subarrays-with-k-different-integers/description/
https://leetcode.com/problems/count-number-of-nice-subarrays/description/
https://leetcode.com/problems/binary-subarrays-with-sum/description/
https://leetcode.com/problems/subarray-product-less-than-k/description/
https://leetcode.com/problems/count-subarrays-where-max-element-appears-at-least-k-times/description/
Please upvote (only if you feel helpful) , so others could also see this
"""



# 560 subarray sum equals k
# def subsum_k(nums):
#
#     index_dict = {}
#     pref_sum = []


# 15 3sum
# def three_sum(nums):
#     def two_sum(nums,target):
#         re = []
#         map = {}
#         for ind,num in enumerate(nums):
#             if target-num in map:
#                 re.append( [num,target-num])
#             map[num] = ind
#         return re
#     re = []
#     for i in range(len(nums)):
#         # double = two_sum(nums[i+1:],-nums[i])
#         double = two_sum(nums[:i]+nums[i+1:],-nums[i])
#         if double:
#             for each in double:
#                 triple = sorted([nums[i]]+each)
#                 if triple not in re:
#                     re.append(triple)
#     return re
# print(three_sum(nums = [-1,0,1,2,-1,-4,-2,-3,3,0,4]))
# [[-4,0,4],[-4,1,3],[-3,-1,4],[-3,0,3],[-3,1,2],[-2,-1,3],[-2,0,2],[-1,-1,2],[-1,0,1]]
# [[-1, 0, 1], [-1, -1, 2], [-2, -1, 3], [-3, -1, 4], [-2, 0, 2], [-3, 0, 3], [-4, 0, 4], [-3, 1, 2], [-4, 1, 3]]

# def two_sum(nums,target):
#     print(nums,target)
#     re = []
#     map = {}
#     for ind,num in enumerate(nums):
#         if target-num in map:
#             re.append( [num,target-num])
#         map[num] = ind
#     return re
# print(two_sum([-1, 0, 1, 2, -1, -4, -2, 3, 0, 4] ,3))


# def three_sum_divide(nums):
#     re = set()
#     n = []
#     p = []
#     z = []
#     for num in nums:
#         if num < 0: n.append(num)
#         elif num > 0 : p.append(num)
#         else: z.append(num)
#     N, P = set(n), set(p)
#     if z:
#         for num in P:
#             if -num in N:
#                 re.add((-num,0,num))
#     if len(z) >= 3:
#         re.add((0,0,0))
#     for i in range(len(p)-1):
#         for j in range(i+1,len(p)):
#             target = -(p[i]+p[j])
#             if target in N:
#                 re.add(tuple(sorted([p[i],p[j],target])))
#     for i in range(len(n)-1):
#         for j in range(i+1,len(n)):
#             target = -(n[i]+n[j])
#             if target in P:
#                 re.add(tuple(sorted([n[i],n[j],target])))
#     return re
# print(three_sum_divide([-1,0,1,2,-1,-4,-2,-3,3,0,4]))


# list1 = [1,2,3]
# list2 = list1
# list3 = list1.copy()
# list1[0] = 444444
# print(list1,list2,list3)
#
# list1 = [1,[1,2],3]
# list2 = list1
# list3 = list1.copy()
# list1[1][0] = 444444
# print(list1,list2,list3)

# def f(arr,l,n):
#     mul = 1
#     for i in range(l):
#         mul = (mul * (arr[i] % n)) % n
#     return mul % n
# print(f([100,10,5,25,35,14],6,11))


# # 38 count and say
# def countsay(n):
#
#     def helper(s):
#         re = ""
#         s = list(s)
#         comp = s[0]
#         count = 0
#         for i in range(len(s)):
#             if s[i] == comp:
#                 count += 1
#             else:
#                 re += str(count) + comp
#                 count = 1
#                 comp = s[i]
#         re += str(count) + comp
#         return re
#     re = helper('1')
#     for i in range(n-2):
#         re = helper(re)
#     return re
#
#     # return(helper(""))
# print(countsay(4))


# get all permutations for an array - recursion
# def get_all_per(nums):
#     if len(nums) == 0:
#         return [[]]
#
#     perms = get_all_per(nums[1:])
#     res = []
#     for perm in perms:
#         for i in range(len(perm)+1):
#             p_copy = perm.copy()
#             p_copy.insert(i,nums[0])
#             res.append(p_copy)
#     return res
# print(get_all_per([1,2,3]))



# 31 next permutation in place - two ponters, IN PLACE
# find the breakpoint: start from end, find a point where value is smaller than previous FROM END
# that is the prefix
# find next immediate number greater than breakpoint
# arrange rest elements in sorted order
# def next_per(nums):
    # # find breakpoint
    # breakpoint = -1
    # for i in range(len(nums)-1,-1,-1):
    #     print(nums[i],nums[i-1])
    #     if nums[i] > nums[i-1]:
    #         breakpoint = nums[i]
    #         break
    # breakpoint = nums[i-1]
    # prefix = nums[:i-1]
    # print(prefix)
    # suffix = nums[i-1:]
    # print(suffix)
    # # find immediate greater than suffix[0]
    #
    # for i in range(len(suffix)-1,-1,-1):
    #     if suffix[i] > suffix[0]:
    #         new_first = suffix[i]
    #         break
    # suffix.remove(new_first)
    # suffix = sorted(suffix)
    # print([new_first]+suffix)
    # print(prefix+suffix)

    # find breakpoint
    # breakpoint = -1
    # n = len(nums)
    # for i in range(n-2,-1,-1):
    #     if nums[i] < nums[i+1]:
    #         breakpoint = i
    #         break
    # if breakpoint == -1:
    #     nums = nums.reverse()
    #     return nums
    # # find greater that breakpoint and swap
    # for i in range(n-1,breakpoint,-1):
    #     if nums[i] > nums[breakpoint]:
    #         nums[i],nums[breakpoint] = nums[breakpoint],nums[i]
    #         break
    # # reverse rest of the array
    # nums[breakpoint+1:] = reversed(nums[breakpoint+1:])
    # return nums

# print(next_per([3,2,1]))

# def kdane(nums): # subarry with max sum
#     n = len(nums)
#     maxi = -float('inf')
#     sum = 0
#     start,end = -1,-1
#     for i in range(n):
#         if sum ==0 : start = i
#         sum += nums[i]
#
#         if sum > maxi:
#             end = i
#             maxi = sum
#         if sum<0:
#             sum=0
#
#     return maxi,start,end
# print(kdane([-2,1,-3,4,-1,2,1,-5,4]))

# Boyer-Moore Majority Voting Algorithm
# Python implementation for the above approach

# Function to find majority element
# def findMajority(arr, n):
#     candidate = -1
#     votes = 0
#
#     # Finding majority candidate
#     for i in range (n):
#         if (votes == 0):
#             candidate = arr[i]
#             votes = 1
#         else:
#             if (arr[i] == candidate):
#                 votes += 1
#             else:
#                 votes -= 1
#     count = 0
#
#     # Checking if majority candidate occurs more than n/2
#     # times
#     for i in range (n):
#         if (arr[i] == candidate):
#             count += 1
#
#     if (count > n // 2):
#         return candidate
#     else:
#         return -1
#
# # Driver Code
#
# arr = [ 1, 2, 3, 1, 2, 2, 8,2, 2 ]
# n = len(arr)
# majority = findMajority(arr, n)

# 229 majority element 2 - at max 2 element will be in answer apply extended Boyer-Moore Majority Voting Algorithm
# def maj_ele(nums):
#     cnt1, cnt2 = 0,0
#     ele1,ele2 = -float('inf'),-float('inf')
#     for i in range(len(nums)):
#         if cnt1 == 0 and ele2 != nums[i]:
#             ele1 = nums[i]
#             cnt1 = 1
#         elif cnt2 == 0 and ele1 != nums[i]:
#             ele2 = nums[i]
#             cnt2 = 1
#         elif nums[i] == ele1: cnt1 += 1
#         elif nums[i] == ele2: cnt2 += 1
#         else:
#             cnt1 -= 1
#             cnt2 -= 1
#     cnt1,cnt2 = 0,0
#     for i in range(len(nums)):
#         if nums[i] == ele1: cnt1 += 1
#         if nums[i] == ele2: cnt2 += 1
#     re = []
#     if cnt1 > len(nums)//3: re.append(ele1)
#     if cnt2 > len(nums)//3: re.append(ele2)
#     return re
#     return ele1,ele2
# print(maj_ele([1,2,3,1,2,2,8,2,2]))
#
# # 1366 rank teams with votes
# def rank_teams(votes):
#     count = {}
#     for i in range(len(votes)):
#         for j in range(len(votes[i])):
#             if votes[i][j] not in count.keys():
#                 count[votes[i][j]] = [j+1]
#             else:
#                 count[votes[i][j]].append(j+1)
#     avg = {}
#     for k,v in count.items():
#         if k not in avg.keys():
#             avg[k] = sum(v)/len(v)
#     print(count)
#     print(avg)
# print(rank_teams(["WXYZ","XYZW"]))

# 2799 count complete subarray in an array
# def complete_array(nums):
#     k = len(set(nums))
#     count = 0
#     result = []
#     for i in range(len(nums)):
#         i_set = set()
#         for j in range(i,len(nums)):
#             i_set.add(nums[j])
#             if len(i_set) == k:
#                 count += 1
#     return count
# print(complete_array(nums = [1,3,1,2,2]))

# def binary_search(nums,k):
#     left = 0
#     right = len(nums)-1
#     mid = 0
#
#     while left <= right:
#         mid = (left+right)//2
#         if k > nums[mid]:
#             left = mid + 1
#         elif k < nums[mid]:
#             right = mid - 1
#         else:
#             return mid
#     return -1
#
# print(binary_search([1,4,6,7,8,78,3455],6))


# 33 search in rotated sorted array
# def rotate_search(nums,target):
#     # step 1
#     left = 0
#     right = len(nums)-1
#     mid = 0
#     pivot = 0
#     while left <= right:
#         print(nums[left:right])
#         mid = (left+right)//2
#         if nums[mid] > nums[right]:
#             left = mid + 1
#         elif nums[mid] < nums[right]:
#             right = mid - 1
#         else:
#             pivot = mid
#             break
#     print(pivot)
# print(rotate_search(nums = [4,5,6,7,0,1,2], target = 0))


# 2962 Count Subarrays Where Max Element Appears at Least K Times: Sliding Window
# def count_sub(nums,k):
#     max_element = max(nums)
#     left,right,ans,count = 0,0,0,0
#     while right < len(nums):
#         if nums[right] == max_element: count += 1
#         while count >= k:
#             if nums[left] == max_element: count -= 1
#             left += 1
#             ans += len(nums)-right
#         right += 1
#     return ans
# print(count_sub(nums = [1,3,2,3,3], k = 2))

# 20 valid paranthesis
# def valid_par(s):
#     stack = []
#     s = list(s)
#     for a in s:
#         if a == "(" or a == "{" or a == "[":
#             stack.append(a)
#         elif a == ")":
#             if stack and stack[-1] == "(":
#                 stack = stack[:-1]
#             else:
#                 return False
#         elif a == "}":
#             if stack and  stack[-1] == "{":
#                 stack = stack[:-1]
#             else:
#                 return False
#         elif a == "]":
#             if stack and  stack[-1] == "[":
#                 stack = stack[:-1]
#             else:
#                 return False
#     if len(stack) == 0: return True
#     return False

# 32 longest valid para
# def long_para(s):
#     stack = [-1]
#     mx = 0
#     for i,p in enumerate(s):
#         if p == "(":
#             stack.append(i)
#         else:
#             stack.pop()
#             if not stack:
#                 stack.append(i)
#             else:
#                 mx = max(mx,i-stack[-1])
#     return mx
# print(long_para( s = "(()"))

# 1295 find numbers with even number of digits
# def even_digits(nums):
#     pass
#     def say_even(num):
#         re = 0
#         while num >= 10:
#             num /= 10
#             re += 1
#         return 1 if (re+1)%2 == 0 else 0
#     re = [say_even(x) for x in nums]
#     print(re)
#     return sum(re)
# print(even_digits(nums = [12,345,2,6,7896]))

# 2071 maximum number of tasks you can assign
# def max_tasks(tasks, workers, pills, strength):
#     pass
#     tasks = sorted(tasks)
#     workers = sorted(workers)



# 838 push dominos
def push_dominos(dominos):
    """
    # def get_next_state(str):
    #     state = list(str)
    #     if state[0] == "." and state[1] == "L":
    #         state[0] = "L"
    #     if state[-1] == "." and state[-2] == "R":
    #         state[0] = "R"
    #     for i in range(1,len(state)-1):
    #         if state[i] == ".":
    #             if (state[i-1] == "L" and state[i+1] == "R") or (state[i-1] == "R" and state[i+1] == "L"):
    #                 continue
    #             if state[i-1] == "L" and state[i+1] == "L":
    #                 state[i] = "L"
    #             if state[i-1] == "R":
    #                 state[i] = "R"
    #     # print(state)"LL.RR.LLRRLL..
    #     return "".join(state)

    """

    # FORCE APPROACH
    # dominos = list(dominos)
    # right_vector = []
    # left_vector = []
    # rc,lc = 0,0
    # for i in range(len(dominos)):
    #     match dominos[i]:
    #         case "L":
    #            rc = 0
    #            right_vector.append(rc)
    #         case "R":
    #             rc = len(dominos)
    #             right_vector.append(rc)
    #         case ".":
    #             if rc != 0:
    #                 rc -= 1
    #                 right_vector.append(rc)
    #             else:
    #                 right_vector.append(0)
    # for i in range(len(dominos)-1,-1,-1):
    #     match dominos[i]:
    #         case "L":
    #            lc = -len(dominos)
    #            left_vector.append(lc)
    #         case "R":
    #             lc = 0
    #             left_vector.append(lc)
    #         case ".":
    #             if lc != 0:
    #                 lc += 1
    #                 left_vector.append(lc)
    #             else:
    #                 left_vector.append(0)
    # left_vector = left_vector[::-1]
    # print(right_vector)
    # print(left_vector)
    # re = [l+r for (l,r) in zip(left_vector,right_vector)]
    # re = "".join(["." if x==0 else "R" if x>0 else "L" for x in re])
    # return re
# print(push_dominos("R.R...L"))


#  3343 count number of balanced permutations
# sum -> odd -> return 0
#      -> even -> half sum -> get groups of len(nums)/2 of numbers from sum such that sum is half sum ->
# def count_perm(num):
#
#     pass
#
#
#
#
#
# # 2918. Minimum Equal Sum of Two Arrays After Replacing Zeros
# def min_equal(nums1,nums2):
#     def helper(s1,s2,z1,z2):
#         new_s1 = s1+z1
#         tar = new_s1-s2
#         if tar <= 0: return -1
#         if z2 <= tar:
#             if z2 == 0 and tar != 0:
#                 return -1
#             return new_s1
#
#         return -1
#
#     z1,z2,s1,s2 = 0,0,0,0
#     for i in range(len(nums1)):
#         if nums1[i] == 0: z1 += 1
#         s1 += nums1[i]
#     for i in range(len(nums2)):
#         if nums2[i] == 0: z2 += 1
#         s2 += nums2[i]
#     r1 = helper(s1,s2,z1,z2)
#     r2 = helper(s2,s1,z2,z1)
#     print(r1,r2)
#     if r1 != -1: return r1
#     if r2 != -1: return r2
#     return -1
#
#
#
# print(min_equal(nums1 = [2,0,2,0], nums2 = [1,4,0]))


# 3335. Total Characters in String After Transformations I
# def tran(s,t):
    # re = s
    # for _ in range(t):
    #     s = re
    #     re = ""
    #     for i in range(len(s)):
    #         if s[i] == "z":
    #             re += "ab"
    #         else:
    #             re += chr(ord(s[i])+1)
    # return re


    # mod = 10**9 + 7
    # cur = [0] * 26
    # for char in s:
    #     cur[ord(char)-ord("a")] += 1
    #
    # for _ in range(t):
    #     next = [0] * 26
    #     next[0] = cur[25]
    #     next[1] = (cur[25] + cur[0]) % mod
    #     for i in range(2,26):
    #         next[i] = cur[i-1]
    #     cur = next
    # return sum(next) % mod


# print(tran(s = "jqktcurgdvlibczdsvnsg", t = 7517))


# 3337. Total Characters in String After Transformations II  "TLE"
# def trans_2(s,nums,t): # "abbcccyy"
#     cur = [0] * 26
#     for char in s:
#         cur[ord(char)-ord('a')] += 1
#     # cur  => [1,2,3,0,0...2,0]
#     # nums => [2,3,2,1,2...4,3]
#     print(cur)
#     for _ in range(t):
#         nxt = [0] * 26
#         for i in range(len(cur)):
#             charlen = nums[i]
#             char = cur[i]
#             # i ke baad next charlen element ko char times nxt me badha do
#             for j in range(1,charlen+1):
#                 nxt[(i+j)%26] = nxt[(i+j)%26] + char
#         print(cur,nxt)
#         cur = nxt
#     return sum(nxt)
# print(trans_2(s = "azbk", t = 1, nums = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]))


# 73 set matrix zeros
# def set_zero(matrix):
#     zeros = []
#     for i in range(len(matrix)):
#         for j in range(len(matrix[0])):
#             if matrix[i][j] == 0:
#                 zeros.append([i,j])
#
#     for z in zeros:
#         matrix[z[0]] = [0]*len(matrix[0])
#     for z in zeros:
#         for row in range(len(matrix)):
#             matrix[row][z[1]] = 0
#     return zeros
# set_zero(matrix = [[0]])

#
# class UnionFind:
#     def __init__(self,size):
#         self.parent = list(range(size))
#
#     def find(self,x):
#         if self.parent[x] == x:
#             return x
#         else:
#             return self.find(self.parent[x])
#
#     def unite(self,x,y):
#         xrep = self.find(x)
#         yrep = self.find(y)
#
#         self.parent[xrep] = yrep


# def make_remember():
#     chache = []
#
#     def remember(val):
#         chache.append(val)
#         return chache
#     return remember
# remeber = make_remember()
# print(remeber(100))
# print(remeber(200))


# def func1(a,b):
#     return a+b
# def func1(a):
#     return 2*a
# print(func1(2,4))



import time

# Define a decorator that logs the input, output, and execution time of a function
def log(func):
    # Define a wrapper function that takes any number of arguments
    def wrapper(*args, **kwargs):
        # Get the current time before calling the function
        start = time.time()
        # Call the original function and store the output
        result = func(*args, **kwargs)
        # Get the current time after calling the function
        end = time.time()
        # Calculate the elapsed time
        elapsed = end - start
        # Log the input, output, and execution time
        print(f"Input: {args}, {kwargs}")
        print(f"Output: {result}")
        print(f"Execution time: {elapsed} seconds")
        # Return the output
        return result
    # Return the wrapper function
    return wrapper

# Use the decorator on a function that calculates the sum of the first n natural numbers
@log
def sum_n(n):
    # Initialize the sum to zero
    s = 0
    # Loop from 1 to n
    for i in range(1, n + 1):
        # Add i to the sum
        s += i
    # Return the sum
    return s


def sum_n2(n):
    # Initialize the sum to zero
    s = 0
    # Loop from 1 to n
    for i in range(1, n + 1):
        # Add i to the sum
        s += i*2
    # Return the sum
    return s

# Call the decorated function
# sum_n(100)
# sum_n2(100)

# l1 = [1,2,3,[4,5],{'d':2,'e':4}]
# l2 = l1[:]
# l1[1] = 100
# l2[3][0] = 40000
# l2[4]['d']=7777777
# print(l1,l2)
# def count_up_to(max):
#     count = 1
#     while count <= max:
#         yield count
#         count += 1
#
# for number in count_up_to(5):
#     print(number)


# count_up_to()


# 2616. Minimize the Maximum Difference of Pairs
# def minmaxxdiff(nums,p):
#     nums.sort()
#     print(nums)
#     re = [0]*(len(nums)-1)
#     for i in range(len(nums)-1):
#         re[i] = abs(nums[i+1]-nums[i])
#     # print(re)
#     re.sort()
#     re = re[:p]
#     return re[-1]
# print(minmaxxdiff(nums = [3,4,2,3,2,1,2], p = 3))


# 2294. Partition Array Such That Maximum Difference Is K
# def partmvwkeo(nums,k):
#     if len(nums) == 0: return nums
#     nums.sort()
#     start = 0
#     end = 1
#     re = []
#     while end < len(nums):
#         if nums[end]-nums[start] <= k:
#             end += 1
#         else:
#             re.append(nums[start:end])
#             start = end
#             end = start + 1
#     re.append(nums[start:end])
#
#     print(re)
# partmvwkeo(nums = [2,2,4,5], k = 0)

# 2840. Check if Strings Can be Made Equal With Operations II
# def check_str(s1,s2):
#     s1e,s2e,s1o,s2o = [],[],[],[]
#     for i in range(len(s1)):
#         if i%2 == 0:
#             s1e.append(s1[i])
#             s2e.append(s2[i])
#         if i%2 != 0:
#             s1o.append(s1[i])
#             s2o.append(s2[i])
#     if sorted(s1e) == sorted(s2e) and sorted(s1o) == sorted(s2o):
#         return True
#     return False
# print(check_str(s1 = "abe", s2 = "bea"))

# 210. Course Schedule II
# def course2(num,prereq):#[[1,0],[2,0],[3,1],[3,2]]
#     re = []
#     prereq_dict = {}
#     for pair in prereq:
#         if pair[0] not in prereq_dict.keys():
#             prereq_dict[pair[0]] = [pair[1]]
#         else:
#             prereq_dict[pair[0]].append(pair[1])
#     print(prereq_dict)
#     # get the base course/s
#     courses = range(num)
#     for c in courses:
#         if c not in prereq_dict.keys():
#             re.append(c)
#     print(re)
#
# course2(4,[[1,0],[2,0],[3,1],[3,2]])


# a = 10000
# b = 20000
# c = 20000
# d = 30000
# e = 40000
#
# l = [(4, "zfirst"), (2, ""), (3, ""), (4, "second"), (1, "")]
# l = sorted(l,key= lambda x:x[0])
# print(l)
# print(id(l[1]))
# print(id(l[2]))
# print(b is c,b==c)

# my_tuple = ('sara', 6, 5, 0.97)
# my_list = ['sara', 6, 5, 0.97]
# print(my_tuple[0])     # output => 'sara'
# print(my_list[0])     # output => 'sara'
# my_tuple = ("ansh",4,2,1)    # modifying tuple => throws an error
# my_list[0] = 'ansh'    # modifying list => list modified
# print(my_tuple[0])     # output => 'sara'
# print(my_list[0])


# def longestPalindrome(s: str) -> str:
#     re = ''
#     palin_len = 0
#     # aabba
#     for i in range(len(s)):
#         l,r = i,i
#         #odd
#         while l >= 0 and r < len(s) and s[l] == s[r]:
#             if r-l+1 > palin_len:
#                 re = s[l:r+1]
#                 palin_len = r-l+1
#             l = l-1
#             r = r+1
#         #even
#         l,r = i,i+1
#         while l >= 0 and r < len(s) and s[l] == s[r]:
#             if r-l+1 > palin_len:
#                 re = s[l:r+1]
#                 palin_len = r-l+1
#             l = l-1
#             r = r+1
#     return re
#
# print(longestPalindrome("aabba"))


# def beauty_sum(s): #"aabcb"
#     re = 0
#     def helper(s):
#         freq = {}
#         for i in s:
#             if i not in freq.keys():
#                 freq[i] = 1
#             else:
#                 freq[i] += 1
#         return max(freq.values()) - min(freq.values()) if len(freq.values()) >= 2 else 0
#     for i in range(len(s)-1):
#         for j in range(1,len(s)+1):
#             re += helper(s[i:j])
#     return re
#
# print(beauty_sum("aabcb"))

# 1717. Maximum Score From Removing Substrings
# def max_sub_score(s,x,y):
#     score = 0
#     if x >= y:
#         r1 = "ab"
#         r2 = "ba"
#     else:
#         r1 = "ba"
#         r2 = "ab"
#     print(r1,r2)
#     # print(s.count("ab"))
#     while r1 in s or r2 in s:
#         while r1 in s:
#             score += s.count(r1)*max(x,y)
#             print(score)
#             s = s.replace(r1,"")
#             print(s)
#         print("first pass")
#         while r2 in s:
#             score += s.count(r2)*min(x,y)
#             print(score)
#             s = s.replace(r2,"")
#             print(s)
#     return score
#
# print(max_sub_score(s = "cdbcbbaaabab", x = 4, y = 5))
#
#
# def maximumGain( s: str, x: int, y: int) -> int:
#     total_score = 0
#     high_priority_pair = "ab" if x > y else "ba"
#     low_priority_pair = "ba" if high_priority_pair == "ab" else "ab"
#
#     # First pass: remove high priority pair
#     string_after_first_pass = remove_substring(s, high_priority_pair)
#     print(string_after_first_pass)
#     removed_pairs_count = (len(s) - len(string_after_first_pass)) // 2
#     print(removed_pairs_count)
#
#     # Calculate score from first pass
#     total_score += removed_pairs_count * max(x, y)
#
#     # Second pass: remove low priority pair
#     string_after_second_pass = remove_substring(
#         string_after_first_pass, low_priority_pair
#     )
#     removed_pairs_count = (
#         len(string_after_first_pass) - len(string_after_second_pass)
#     ) // 2
#
#     # Calculate score from second pass
#     total_score += removed_pairs_count * min(x, y)
#
#     return total_score
#
# def remove_substring(input: str, target_pair: str) -> str:
#     char_stack = []
#
#     # Iterate through each character in the input string
#     for current_char in input:
#         # Check if current character forms the target pair with the top of the stack
#         if (
#             current_char == target_pair[1]
#             and char_stack
#             and char_stack[-1] == target_pair[0]
#         ):
#             char_stack.pop()  # Remove the matching character from the stack
#         else:
#             char_stack.append(current_char)
#
#     # Reconstruct the remaining string after removing target pairs
#     return "".join(char_stack)
#
#
#
# print(maximumGain(s = "cdbcbbaaabab", x = 4, y = 5))




# class myclass:
#     count = 0
#
#     def __init__(self):
#         myclass.count += 1
#     # def __del__(self):
#     #     self.dec()
#
#     # @classmethod
#     # def dec(cls):
#     #     cls.count -= 1
#     # @classmethod
#     # def inc(cls):
#     #     cls.count += 1
#
# print(myclass.count)
# d = myclass()
# print(myclass.count)
# del(d)
# print(myclass.count)


# adobecodebanc
# abc

# def find_small_in_big(big,small):
    # indices = [ [] for i in range(len(small)) ]
    # for i in range(len(big)):
    #     for j in range(len(small)):
    #         if big[i] == small[j]:
    #             indices[j].append(i)
    # print(indices)
    # contains = []
    # not_contains = list(small)
    # l,r = 0,1
    # while r < len(big):
    #     new_str = big[l:r]




# find_small_in_big("adobecodebanc","abc")
# def count_up_to(max):
#     count = 1
#     while count <= max:
#         yield count
#         count += 1
#
# for number in count_up_to(5):
#     print(number)



# def generateParenthesis(n: int) :
#     re = []
#     def valid_para(s): #checks if paranthesis is valid or not
#         stack = []
#         s = list(s)
#         for i in range(len(s)):
#             if s[i] == "(":
#                 stack.append(s[i])
#             elif s[i] == ")":
#                 if stack and stack[-1] == "(":
#                     stack = stack[:-1]
#                 else:
#                     return False
#
#         return True if len(stack) == 0 else False
#
#     def helper(s,re,n):
#         # print(s,re,n)
#         if len(s) == n*2 and valid_para(s):
#             re.append(s)
#             return
#         if len(s) == n*2 and not valid_para(s) :
#             return
#         helper(s+"(",re,n)
#         helper(s+")",re,n)
#     helper("",re,n)
#     return re
#
# print(generateParenthesis(3))


# 1957. Delete Characters to Make Fancy String
# def del_str(s):
#     s = list(s) # leeetcode
#     re = []
#     first, second = None, None
#     for i in range(len(s)):
#         print(s[i],first,second)
#         if s[i] != first or s[i] != second:
#             re.append(s[i])
#         second = first
#         first = s[i]
#     return re
# print(del_str("aaabaaaa"))


# class parent:
#     def __init__(self):
#         print("i am parent")
#     def me(self):
#         print("my method")
#
# class child(parent):
#     def __init__(self):
#         print("i am child")
#
# class grandchild(child):
#     def __init__(self):
#         super(grandchild, self).__init__()
#         print("i am grandchild")
#
#
# f = grandchild()
# f.me()

# class A:
#     def mymethod(self):
#         print("inside class")
#
# def new_method(self):
#     print("outside class")
#
# s = A()
# s.mymethod()
# new_method(3)
# A.mymethod = new_method
# s.mymethod()
# new_method(3)


# 1283. Find the Smallest Divisor Given a Threshold
# def small_div_thresh(nums,threshold):

# 904. Fruit Into Baskets
# def totalFruit() -> int:
#     count_dict = collections.defaultdict(int)
#     l,total,res = 0,0,0

#     for r in range(len(nums)):
#         count_dict[nums[r]] += 1
#         total += 1

#         while len(count_dict) > 2:
#             f = nums[l]
#             count_dict[f] -= 1
#             total -= 1
#             l += 1
#             if not count_dict[f]:
#                 count_dict.pop(f)
#         res = max(res,total)
#     return res


# def upperBound(arr: [int], x: int, n: int) -> int:
#     low = 0
#     high = n - 1
#     ans = n

#     while low <= high:
#         mid = (low + high) // 2
#         # maybe an answer
#         if arr[mid] > x:
#             ans = mid
#             # look for smaller index on the left
#             high = mid - 1
#         else:
#             low = mid + 1  # look on the right

#     return ans




# def lowerBound(arr: [int], n: int, x: int) -> int:
#     low = 0
#     high = n - 1
#     ans = n

#     while low <= high:
#         mid = (low + high) // 2
#         # maybe an answer
#         if arr[mid] >= x:
#             ans = mid
#             # look for smaller index on the left
#             high = mid - 1
#         else:
#             low = mid + 1  # look on the right

#     return ans

# if __name__ == "__main__":
#     arr = [3, 5, 8, 15, 19]
#     n = 5
#     x = 9
#     ind = lowerBound(arr, n, x)
#     print("The lower bound is the index:", ind)

#     arr = [3, 5, 8, 15, 19]
#     n = 5
#     x = 9
#     ind = upperBound(arr, x, n)
#     print("The upper bound is the index:", ind)


# nums = [0, 2, 5, 6, 8, 12, 15]
# # target is 7
# # get pairs such that nums[i] - nums[j] > target
# # also keep track of min length

# # binary search
# # min_sum = nums[i]-target
# # find i in nums where nums[i] < min_sum, maximize i
# # element just less than min_sum


# def get_target(nums,target):
#     l,r = 0, len(nums)-1
#     ans = None
#     while l<=r:
#         mid = (l+r)//2
#         if nums[mid] == target:
#             return nums[mid]
#         elif nums[mid] < target:
#             ans = arr[mid]
#             l = mid+1
#         else:
#             r = mid - 1
#     return ans

# print(get_target([0, 2, 5, 6, 8, 12, 15],7))



# class parent:
#     def same(self):
#         print("parent method")
#     def parentmet(self):
#         self.same()
#         print("same from parent")

# class child(parent):
#     def same(self):
#         print("child method")


# c = child()
# c.parentmet()



# # merge overlapping intervals
# def merge_intervals(nums):
#     nums.sort()
#     ans = []
#     for inter in nums:
#         if len(ans) == 0 or ans[-1][1] < inter[0]:
#             ans.append(inter)
#         else:
#             ans[-1][1] = max(ans[-1][1],inter[1])
#     return nums


# l = [[1,20],[2,30],[1,10],[1,15],[2,50],[3,10]]
# print(sorted(l,key=lambda x: (x[0], -x[1])))

# print(29028711823%7)


# import sys, gc

# a = []
# b = [a]
# a.append(b)

# print(sys.getrefcount(a))  # shows reference count
# del a, b
# gc.collect()  # forces garbage collection for cyclic refs

# import time
# from functools import wraps

# def timer(func):
#     @wraps(func)
#     def wrapper(*args, **kwargs):
#         start = time.time()
#         result = func(*args, **kwargs)
#         end = time.time()
#         print(f"{func.__name__} executed in {end - start:.4f}s")
#         return result
#     return wrapper

# @timer
# def compute():
#     time.sleep(1)
#     return "done"

# compute()


# import threading
# import time

# def cpu_task():
#     x = 0
#     for _ in range(10**7):
#         x += 1

# start = time.time()
# # threads = [threading.Thread(target=cpu_task) for _ in range(4)]
# # [t.start() for t in threads]
# # [t.join() for t in threads]
# cpu_task()
# print("Time:", time.time() - start)



# def frogJump(heights):
#     p1,p2 = 0,abs(heights[0]-heights[1])
#     for i in range(2,len(heights)):
#         re = min(p1+abs(heights[i]-heights[i-2]),p2+abs(heights[i]-heights[i-1]))
#         p1 = p2
#         p2 = re
#     return re
# print(frogJump([7, 5, 1, 2, 6]))


# def f():
#     global q
#     t = (10,)
#     q = t + q[1:]
#     return q
# q = (1,2,3)    
# print(q)
# e = f()

# print(q)
# dp = [[-1 for j in range(4)] for i in range(5)]
# print(dp)

# def grid(m,n):
#     dp = [[-1]*n for _ in range(m)]

#     # re = 0
#     # def helper(a,b):
#     #     if a == 0 and b == 0:
#     #         return 1
#     #     if a < 0 or b < 0:
#     #         return 0
#     #     if dp[a][b] != -1 : return dp[a][b]
#     #     up = helper(a-1,b)
#     #     left = helper(a,b-1)
#     #     dp[a][b] = up+left
#     #     return  dp[a][b]
#     # return helper(m-1,n-1)

#     for i in range(m):
#         for j in range(n):
#             if i == 0 and j == 0:
#                 dp[0][0] = 1
#                 continue
#             up = 0
#             left = 0
#             if i > 0: up = dp[i-1][j]
#             if j > 0: left = dp[i][j-1]
#             dp[i][j] = up+left
#     return dp[m-1][n-1]


# print(grid(2,3))

# for i in range(10,0,-1):
#     print(i)



# def minimumElementsUtil(arr, ind, T, dp):
# # Base case: If we have reached the first element in the array.
#     if ind == 0:
#         # If the target T is divisible by the first element, return the quotient as the minimum number of coins.
#         if T % arr[0] == 0:
#             return T // arr[0]
#         else:
#             # If not, it's not possible to achieve the target sum, so return a very large value.
#             return int(1e9)

#     # If the result for this state is already calculated, return it.
#     # if dp[ind][T] != -1:
#     #     return dp[ind][T]

#     # Initialize variables for cases when we don't take the current element.
#     notTaken = 0 + minimumElementsUtil(arr, ind - 1, T, dp)

#     # Initialize a variable for the case when we take the current element.
#     taken = int(1e9)

#     # Check if the current element can be used to reduce the target sum.
#     if arr[ind] <= T:
#         taken = 1 + minimumElementsUtil(arr, ind, T - arr[ind], dp)

#     # Store the minimum of the two cases in the DP table.
#     # dp[ind][T] = min(notTaken, taken)
#     return min(notTaken, taken) #dp[ind][T]
# def minimumElements(arr, T):
#     n = len(arr)
#     # Initialize a DP table with -1 values.
#     dp = [[-1 for j in range(T + 1)] for i in range(n)]
#     # Calculate the minimum number of coins required using the helper function.
#     ans = minimumElementsUtil(arr, n - 1, T, dp)

#     # If the result is still equal to a very large value, it means it's not possible to achieve the target sum.
#     if ans >= int(1e9):
#         return -1
#     return ans
# arr = [2,5,10,1]
# T = 27
# print("The minimum number of coins required to form the target sum is", minimumElements(arr, T))


def maxIncreasingSubarrays(nums):
    pass


